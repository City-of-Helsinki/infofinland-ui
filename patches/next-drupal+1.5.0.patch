diff --git a/node_modules/next-drupal/CHANGELOG.md b/node_modules/next-drupal/CHANGELOG.md
index 7184f31..a872fa9 100644
--- a/node_modules/next-drupal/CHANGELOG.md
+++ b/node_modules/next-drupal/CHANGELOG.md
@@ -3,7 +3,26 @@
 All notable changes to this project will be documented in this file.
 See [Conventional Commits](https://conventionalcommits.org) for commit guidelines.
 
-# [1.3.0](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.3.0-rc.0...next-drupal@1.3.0) (2022-04-19)
+# [1.5.0](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.4.1...next-drupal@1.5.0) (2022-09-07)
+
+
+### Features
+
+* **next:** implement preview url generator plugins ([64a4d3a](https://github.com/chapter-three/next-drupal/commit/64a4d3a6b5efe5118d6e9c7da0ef0c2653a91187))
+
+
+
+
+
+## [1.4.1](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.4.0...next-drupal@1.4.1) (2022-07-29)
+
+**Note:** Version bump only for package next-drupal
+
+
+
+
+
+# [1.4.0](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.4.0-rc.2...next-drupal@1.4.0) (2022-06-14)
 
 **Note:** Version bump only for package next-drupal
 
@@ -11,45 +30,100 @@ See [Conventional Commits](https://conventionalcommits.org) for commit guideline
 
 
 
-# [1.3.0-rc.0](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.3.0-alpha.0...next-drupal@1.3.0-rc.0) (2022-04-19)
+# [1.4.0-rc.2](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.4.0-rc.1...next-drupal@1.4.0-rc.2) (2022-06-14)
+
+
+### Bug Fixes
+
+* **client:** update types for getMenu and getView ([611f8fb](https://github.com/chapter-three/next-drupal/commit/611f8fb7ee4c7aef1ca652a1c15f6378e8cd576f))
+* **next-drupal:** import missing type ([d54015f](https://github.com/chapter-three/next-drupal/commit/d54015fe973137932e1d8d1e7eb666599cf128b2))
+* **next-drupal:** return null for path not found in translatePath ([63ccf81](https://github.com/chapter-three/next-drupal/commit/63ccf819018914ee59f2982fdef7fef02c6cd479))
 
 
 ### Features
 
-* **next-drupal:** add forceIframeSameSiteCookie option to client ([e958d84](https://github.com/chapter-three/next-drupal/commit/e958d84f14081dd994beb3519ee909e0f3982cd3))
+* **next-drupal:** rename Experimental_DrupalClient to DrupalClient ([60e0451](https://github.com/chapter-three/next-drupal/commit/60e0451ee1300eabc05766c2b2f5bd06dceba68a))
+* **next-drupal:** useDefaultResourceTypeEntry is now true ([9356fe1](https://github.com/chapter-three/next-drupal/commit/9356fe1b3d46f53ee65dd6625df95b1fb5037c98))
+
+
+
+
 
+# [1.4.0-rc.1](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.4.0-rc.0...next-drupal@1.4.0-rc.1) (2022-06-10)
+
+
+### Bug Fixes
+
+* **next-drupal:** remove fix for localized resources ([abcea72](https://github.com/chapter-three/next-drupal/commit/abcea720fbb9ae1924681ea5b1242869856ea665))
 
 
 
 
-# [1.3.0-alpha.0](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.2.2...next-drupal@1.3.0-alpha.0) (2022-04-18)
+
+# [1.4.0-rc.0](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.4.0-alpha.0...next-drupal@1.4.0-rc.0) (2022-06-06)
 
 
 ### Bug Fixes
 
-* **next-drupal:** ensure pathPrefix is set ([781d646](https://github.com/chapter-three/next-drupal/commit/781d6468b6ded00b99d2bba881aab681ff75a4d8))
-* **next-drupal:** fix issue with translated path and decoupled_router ([3092a74](https://github.com/chapter-three/next-drupal/commit/3092a74598a2a633cde3f3a3095ff8851ad4083e))
-* **next-drupal:** fix missing locale from json:api index ([cb48519](https://github.com/chapter-three/next-drupal/commit/cb485197066adb45c49f58f75cb814d4d40fa5cc))
-* **next-drupal:** update types for cache ([f646b0d](https://github.com/chapter-three/next-drupal/commit/f646b0d90f46bb01179c98084e5424caf4831ce6))
-* update tests ([0f4d49e](https://github.com/chapter-three/next-drupal/commit/0f4d49e9bb3b8767577bdba4ef52d7e58ad6bf91))
+* **next-drupal:** update response type for client.getView ([13bbac2](https://github.com/chapter-three/next-drupal/commit/13bbac26097f3e24f0f90b9f25560bfe7ce946b3))
+
+
+
+
+
+# [1.4.0-alpha.0](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.3.2...next-drupal@1.4.0-alpha.0) (2022-06-02)
+
+
+### Bug Fixes
+
+* **next-drupal:** update handling for string errors ([a4d3d38](https://github.com/chapter-three/next-drupal/commit/a4d3d3806637b17868e8d21fe1f383636a9c47d1))
+* **next-drupal:** update message handling in jsonapi-errors ([f9a281a](https://github.com/chapter-three/next-drupal/commit/f9a281ab51d4abcf865672fd3a9ed07c6f7feb3a))
+* **next-drupal:** update missing opts from access token ([b166ef0](https://github.com/chapter-three/next-drupal/commit/b166ef09d2c8201a3a5f6d771eb23f6f330c7916))
+* **next-drupal:** update translatePath handling ([fa3e864](https://github.com/chapter-three/next-drupal/commit/fa3e864fda741e22c9aeb2a0167a4a0cbcfeb733))
 
 
 ### Features
 
-* add example-cache ([2b29d66](https://github.com/chapter-three/next-drupal/commit/2b29d66c8cddb66a331e3b588da8140a4e4ba61e))
-* **example-custom-fetcher:** add example for custom fetcher ([4ac0864](https://github.com/chapter-three/next-drupal/commit/4ac0864da97dc4f952e2e9898dafd5ec7f9f0f18))
-* **next-drupal:** add getMenu ([778ec9d](https://github.com/chapter-three/next-drupal/commit/778ec9deaf679d740cc9ffb4bdc00d0f380436a2))
-* **next-drupal:** add getSearchIndex to client ([cee1852](https://github.com/chapter-three/next-drupal/commit/cee185254d55c73bb253e6f9831e79650911785c))
-* **next-drupal:** add getView ([aa2f0e7](https://github.com/chapter-three/next-drupal/commit/aa2f0e799a326a975dfea40ad1258bd189fe3d0e))
-* **next-drupal:** add preview mode ([3ea2a92](https://github.com/chapter-three/next-drupal/commit/3ea2a927360e646e3b93c9766c2fb18a16f1b209))
-* **next-drupal:** add support for long-lived accessToken ([0541296](https://github.com/chapter-three/next-drupal/commit/05412965ed1addb54cfb03389931df24f1148ab3))
-* **next-drupal:** add withAuth and prefix options to getStaticPathsFromContext ([126e1f2](https://github.com/chapter-three/next-drupal/commit/126e1f248a9be04775df3932d2fc37311aab270e))
-* **next-drupal:** rename DrupalClient to Experimental_DrupalClient ([0d5cf2f](https://github.com/chapter-three/next-drupal/commit/0d5cf2f44b503a2d8e61eee19146fd5b797356ab))
-* **next-drupal:** rename formatter to serializer ([59a2fac](https://github.com/chapter-three/next-drupal/commit/59a2fac22ba6a3d00a622edb957c33ec353e7351))
-* **next-drupal:** rename prefix to pathPrefix ([4361b6f](https://github.com/chapter-three/next-drupal/commit/4361b6ffc38a0a081d05a95bf04079df7101b70e))
-* **next-drupal:** rename Unstable_DrupalClient to DrupalClient ðŸ¥³ ([b8aaa3a](https://github.com/chapter-three/next-drupal/commit/b8aaa3a359e06514117423137cc69d9ce3f7e44f))
-* **next-drupal:** update client ([621cb1b](https://github.com/chapter-three/next-drupal/commit/621cb1b4a2b96b4d6b215e68090f4790c35b88f7))
+* **next-drupal:** add createResource, updateResource and deleteResource helpers ([5200824](https://github.com/chapter-three/next-drupal/commit/52008242ca7199991f88824614ffacef0b2faf77))
+* **next-drupal:** allow auth to accept an access token ([d7fade0](https://github.com/chapter-three/next-drupal/commit/d7fade049cdbaaf13b7af0fab91b86460577e286))
+* **next-drupal:** allow client to accept username and password for auth ([cff5ded](https://github.com/chapter-three/next-drupal/commit/cff5ded1da270db85a278e0e04f81a6551351620))
+* **next-drupal:** createResource, updateResource and deleteResource are auth'd by default ([205fb12](https://github.com/chapter-three/next-drupal/commit/205fb122065740da5a123777a55120959a21f9ad))
+* **next-drupal:** introduce throwJsonApiErrors option ([#196](https://github.com/chapter-three/next-drupal/issues/196)) ([18690e1](https://github.com/chapter-three/next-drupal/commit/18690e10a829104068693b93fa84e5987d59de21))
+* **next-drupal:** rename createMediaFileResource to createFileResource ([e4901e4](https://github.com/chapter-three/next-drupal/commit/e4901e4e0fa5d32d45032a8f0ec166d0d1253222))
+* **next-drupal:** update error handling ([c0ddc9c](https://github.com/chapter-three/next-drupal/commit/c0ddc9c6dd5a18f07e7981311df347367ff593d2))
+
+
+
+
+
+## [1.3.2](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.3.1...next-drupal@1.3.2) (2022-05-02)
+
+
+### Bug Fixes
+
+* **next-drupal:** skip subrequests if path is passed to getResourceFromContext ([ca65e62](https://github.com/chapter-three/next-drupal/commit/ca65e62118c733b7bd857ae3ab395b3dc4fbbbe8))
+
+
+
+
+
+## [1.3.1](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.3.0...next-drupal@1.3.1) (2022-04-25)
+
+
+### Bug Fixes
+
+* **next-drupal:** backport slug encoding fix to helpers ([29ee9d3](https://github.com/chapter-three/next-drupal/commit/29ee9d3818aef4ebc925b37231693944f751d998))
+* **next-drupal:** encode slug parts in getPathFromContext ([b56dd9e](https://github.com/chapter-three/next-drupal/commit/b56dd9eae04398c93f21282789547372c695df0a))
+
+
+
+
+
+# [1.3.0](https://github.com/chapter-three/next-drupal/compare/next-drupal@1.22...next-drupal@1.3.0) (2022-04-19)
+
+### Features
 
+* **next-drupal:** add `Experimental_DrupalClient` (https://next-drupal.org/docs/client)
 
 
 
diff --git a/node_modules/next-drupal/README.md b/node_modules/next-drupal/README.md
index 6f498a8..63210d5 100644
--- a/node_modules/next-drupal/README.md
+++ b/node_modules/next-drupal/README.md
@@ -6,8 +6,7 @@
 
 ## Demo
 
-- https://demo.next-drupal.org
-- https://cms-drupal.vercel.app
+https://demo.next-drupal.org
 
 ## Documentation
 
@@ -15,23 +14,21 @@ https://next-drupal.org
 
 ## Deploy to Vercel
 
-[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fchapter-three%2Fnext-drupal-basic-starter&env=NEXT_PUBLIC_DRUPAL_BASE_URL,NEXT_IMAGE_DOMAIN,DRUPAL_PREVIEW_SECRET,DRUPAL_CLIENT_ID,DRUPAL_CLIENT_SECRET&envDescription=Learn%20more%20about%20environment%20variables&envLink=https%3A%2F%2Fnext-drupal.org%2Fdocs%2Fenvironment-variables&project-name=next-drupal&demo-title=Next.js%20for%20Drupal&demo-description=A%20next-generation%20front-end%20for%20your%20Drupal%20site.&demo-url=https%3A%2F%2Fdemo.next-drupal.org&demo-image=https%3A%2F%2Fnext-drupal.org%2Fimages%2Fdemo-screenshot.jpg)
+[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fchapter-three%2Fnext-drupal-basic-starter&env=NEXT_PUBLIC_DRUPAL_BASE_URL,NEXT_IMAGE_DOMAIN&envDescription=Learn%20more%20about%20environment%20variables&envLink=https%3A%2F%2Fnext-drupal.org%2Fdocs%2Fenvironment-variables&project-name=next-drupal&demo-title=Next.js%20for%20Drupal&demo-description=A%20next-generation%20front-end%20for%20your%20Drupal%20site.&demo-url=https%3A%2F%2Fdemo.next-drupal.org&demo-image=https%3A%2F%2Fnext-drupal.org%2Fimages%2Fdemo-screenshot.jpg)
 
 ## Example
 
 A page with all "Article" nodes.
 
-```tsx
-import { getResourceCollectionFromContext, DrupalNode } from "next-drupal"
+```jsx
+import { DrupalClient } from "next-drupal"
 
-interface BlogPageProps {
-  nodes: DrupalNode[]
-}
+const drupal = new DrupalClient("https://cms.next-drupal.org")
 
-export default function BlogPage({ nodes }: BlogPageProps) {
+export default function BlogPage({ articles }) {
   return (
     <div>
-      {nodes?.length
+      {articles?.length
         ? nodes.map((node) => (
             <div key={node.id}>
               <h1>{node.title}</h1>
@@ -42,18 +39,15 @@ export default function BlogPage({ nodes }: BlogPageProps) {
   )
 }
 
-export async function getStaticProps(
-  context
-): Promise<GetStaticPropsResult<BlogPageProps>> {
-  const nodes = await getResourceCollectionFromContext<DrupalNode[]>(
+export async function getStaticProps(context) {
+  const articles = await drupal.getResourceCollectionFromContext(
     "node--article",
     context
   )
 
   return {
     props: {
-      nodes,
-      revalidate: 60,
+      articles,
     },
   }
 }
diff --git a/node_modules/next-drupal/dist/client.d.ts b/node_modules/next-drupal/dist/client.d.ts
index 573e03d..aae40d2 100644
--- a/node_modules/next-drupal/dist/client.d.ts
+++ b/node_modules/next-drupal/dist/client.d.ts
@@ -1,11 +1,12 @@
 import type { GetStaticPathsContext, GetStaticPathsResult, GetStaticPropsContext, NextApiRequest, NextApiResponse } from "next";
-import type { JsonApiResource, Locale, AccessToken, JsonApiResponse, JsonApiWithLocaleOptions, JsonApiParams, DrupalTranslatedPath, DrupalMenuLinkContent, FetchOptions, Experiment_DrupalClientOptions, BaseUrl, JsonApiWithAuthOptions, PathPrefix, PathAlias, PreviewOptions, JsonApiWithCacheOptions } from "./types";
-export declare class Experiment_DrupalClient {
+import type { JsonApiResource, Locale, AccessToken, JsonApiResponse, JsonApiWithLocaleOptions, JsonApiParams, DrupalTranslatedPath, DrupalMenuLinkContent, FetchOptions, DrupalClientOptions, BaseUrl, JsonApiWithAuthOptions, PathPrefix, PathAlias, PreviewOptions, JsonApiWithCacheOptions, JsonApiCreateResourceBody, JsonApiUpdateResourceBody, DrupalClientAuthClientIdSecret, JsonApiCreateFileResourceBody, DrupalView, DrupalFile } from "./types";
+export declare class DrupalClient {
     baseUrl: BaseUrl;
-    debug: Experiment_DrupalClientOptions["debug"];
-    frontPage: Experiment_DrupalClientOptions["frontPage"];
+    debug: DrupalClientOptions["debug"];
+    frontPage: DrupalClientOptions["frontPage"];
     private serializer;
     private cache;
+    private throwJsonApiErrors?;
     private logger;
     private fetcher?;
     private _headers?;
@@ -14,25 +15,30 @@ export declare class Experiment_DrupalClient {
     private useDefaultResourceTypeEntry?;
     private _token?;
     private accessToken?;
+    private accessTokenScope?;
     private tokenExpiresOn?;
     private withAuth?;
     private previewSecret?;
     private forceIframeSameSiteCookie?;
     /**
-     * Instantiates a new Experiment_DrupalClient.
+     * Instantiates a new DrupalClient.
      *
-     * const client = new Experiment_DrupalClient(baseUrl)
+     * const client = new DrupalClient(baseUrl)
      *
      * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.
      * @param {options} options Options for the client. See Experiment_DrupalClientOptions.
      */
-    constructor(baseUrl: BaseUrl, options?: Experiment_DrupalClientOptions);
-    set apiPrefix(apiPrefix: Experiment_DrupalClientOptions["apiPrefix"]);
-    get apiPrefix(): Experiment_DrupalClientOptions["apiPrefix"];
-    set auth(auth: Experiment_DrupalClientOptions["auth"]);
-    set headers(value: Experiment_DrupalClientOptions["headers"]);
+    constructor(baseUrl: BaseUrl, options?: DrupalClientOptions);
+    set apiPrefix(apiPrefix: DrupalClientOptions["apiPrefix"]);
+    get apiPrefix(): DrupalClientOptions["apiPrefix"];
+    set auth(auth: DrupalClientOptions["auth"]);
+    set headers(value: DrupalClientOptions["headers"]);
     private set token(value);
     fetch(input: RequestInfo, init?: FetchOptions): Promise<Response>;
+    createResource<T extends JsonApiResource>(type: string, body: JsonApiCreateResourceBody, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions): Promise<T>;
+    createFileResource<T = DrupalFile>(type: string, body: JsonApiCreateFileResourceBody, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions): Promise<T>;
+    updateResource<T extends JsonApiResource>(type: string, uuid: string, body: JsonApiUpdateResourceBody, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions): Promise<T>;
+    deleteResource(type: string, uuid: string, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions): Promise<boolean>;
     getResource<T extends JsonApiResource>(type: string, uuid: string, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions & JsonApiWithCacheOptions): Promise<T>;
     getResourceFromContext<T extends JsonApiResource>(input: string | DrupalTranslatedPath, context: GetStaticPropsContext, options?: {
         pathPrefix?: PathPrefix;
@@ -87,23 +93,21 @@ export declare class Experiment_DrupalClient {
     getIndex(locale?: Locale): Promise<JsonApiResponse>;
     getEntryForResourceType(type: string, locale?: Locale): Promise<string>;
     preview(request?: NextApiRequest, response?: NextApiResponse, options?: PreviewOptions): Promise<void | NextApiResponse<any>>;
-    getMenu<T extends DrupalMenuLinkContent>(name: string, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions & JsonApiWithCacheOptions): Promise<{
+    getMenu<T = DrupalMenuLinkContent>(name: string, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions & JsonApiWithCacheOptions): Promise<{
         items: T[];
         tree: T[];
     }>;
     buildMenuTree(links: DrupalMenuLinkContent[], parent?: DrupalMenuLinkContent["id"]): any;
-    getView<T>(name: string, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions): Promise<{
-        id: string;
-        results: T;
-        meta: JsonApiResponse["meta"];
-        links: JsonApiResponse["links"];
-    }>;
+    getView<T = JsonApiResource>(name: string, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions): Promise<DrupalView<T>>;
     getSearchIndex<T = JsonApiResource[]>(name: string, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions): Promise<T>;
     getSearchIndexFromContext<T = JsonApiResource[]>(name: string, context: GetStaticPropsContext, options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions): Promise<T>;
     buildUrl(path: string, params?: string | Record<string, string> | URLSearchParams | JsonApiParams): URL;
-    getAccessToken(): Promise<AccessToken>;
+    getAccessToken(opts?: DrupalClientAuthClientIdSecret): Promise<AccessToken>;
     deserialize(body: any, options?: any): unknown;
-    private formatErrorResponse;
+    private getErrorsFromResponse;
     private formatJsonApiErrors;
     private _debug;
+    private throwError;
+    private handleJsonApiErrors;
+    private getAuthFromContextAndOptions;
 }
diff --git a/node_modules/next-drupal/dist/index.d.ts b/node_modules/next-drupal/dist/index.d.ts
index e3b3235..91700f4 100644
--- a/node_modules/next-drupal/dist/index.d.ts
+++ b/node_modules/next-drupal/dist/index.d.ts
@@ -12,3 +12,4 @@ export * from "./use-menu";
 export * from "./translate-path";
 export { deserialize, buildUrl, getJsonApiIndex, getJsonApiPathForResourceType, syncDrupalPreviewRoutes, } from "./utils";
 export * from "./client";
+export * from "./jsonapi-errors";
diff --git a/node_modules/next-drupal/dist/index.esm.js b/node_modules/next-drupal/dist/index.esm.js
index 7c11716..116bd3b 100644
--- a/node_modules/next-drupal/dist/index.esm.js
+++ b/node_modules/next-drupal/dist/index.esm.js
@@ -76,6 +76,96 @@ function _extends() {
   return _extends.apply(this, arguments);
 }
 
+function _inheritsLoose(subClass, superClass) {
+  subClass.prototype = Object.create(superClass.prototype);
+  subClass.prototype.constructor = subClass;
+  subClass.__proto__ = superClass;
+}
+
+function _getPrototypeOf(o) {
+  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
+    return o.__proto__ || Object.getPrototypeOf(o);
+  };
+  return _getPrototypeOf(o);
+}
+
+function _setPrototypeOf(o, p) {
+  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
+    o.__proto__ = p;
+    return o;
+  };
+
+  return _setPrototypeOf(o, p);
+}
+
+function _isNativeReflectConstruct() {
+  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
+  if (Reflect.construct.sham) return false;
+  if (typeof Proxy === "function") return true;
+
+  try {
+    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
+    return true;
+  } catch (e) {
+    return false;
+  }
+}
+
+function _construct(Parent, args, Class) {
+  if (_isNativeReflectConstruct()) {
+    _construct = Reflect.construct;
+  } else {
+    _construct = function _construct(Parent, args, Class) {
+      var a = [null];
+      a.push.apply(a, args);
+      var Constructor = Function.bind.apply(Parent, a);
+      var instance = new Constructor();
+      if (Class) _setPrototypeOf(instance, Class.prototype);
+      return instance;
+    };
+  }
+
+  return _construct.apply(null, arguments);
+}
+
+function _isNativeFunction(fn) {
+  return Function.toString.call(fn).indexOf("[native code]") !== -1;
+}
+
+function _wrapNativeSuper(Class) {
+  var _cache = typeof Map === "function" ? new Map() : undefined;
+
+  _wrapNativeSuper = function _wrapNativeSuper(Class) {
+    if (Class === null || !_isNativeFunction(Class)) return Class;
+
+    if (typeof Class !== "function") {
+      throw new TypeError("Super expression must either be null or a function");
+    }
+
+    if (typeof _cache !== "undefined") {
+      if (_cache.has(Class)) return _cache.get(Class);
+
+      _cache.set(Class, Wrapper);
+    }
+
+    function Wrapper() {
+      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
+    }
+
+    Wrapper.prototype = Object.create(Class.prototype, {
+      constructor: {
+        value: Wrapper,
+        enumerable: false,
+        writable: true,
+        configurable: true
+      }
+    });
+    return _setPrototypeOf(Wrapper, Class);
+  };
+
+  return _wrapNativeSuper(Class);
+}
+
 function _objectWithoutPropertiesLoose(source, excluded) {
   if (source == null) return {};
   var target = {};
@@ -184,7 +274,9 @@ function getPathFromContext(context, prefix) {
   }
 
   var slug = context.params.slug;
-  slug = Array.isArray(slug) ? slug.join("/") : slug; // Handle locale.
+  slug = Array.isArray(slug) ? slug.map(function (s) {
+    return encodeURIComponent(s);
+  }).join("/") : slug; // Handle locale.
 
   if (context.locale && context.locale !== context.defaultLocale) {
     slug = "/" + context.locale + "/" + slug;
@@ -572,14 +664,15 @@ var getResourceFromContext = function getResourceFromContext(type, context, opti
       params: _extends({
         resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
       }, (_options2 = options) == null ? void 0 : _options2.params)
-    })).then(function (resource) {
-      return !context.locale && !(resource == null ? void 0 : resource.default_langcode) ? null : resource;
-    }); // If no locale is passed, skip entity if not default_langcode.
+    })); // If no locale is passed, skip entity if not default_langcode.
     // This happens because decoupled_router will still translate the path
     // to a resource.
     // TODO: Figure out if we want this behavior.
     // For now this causes a bug where a non-i18n sites builds (ISR) pages for
     // localized pages.
+    // if (!context.locale && !resource?.default_langcode) {
+    //   return null
+    // }
   } catch (e) {
     return Promise.reject(e);
   }
@@ -879,6 +972,37 @@ var logger = {
   }
 };
 
+var JsonApiErrors = /*#__PURE__*/function (_Error) {
+  _inheritsLoose(JsonApiErrors, _Error);
+
+  function JsonApiErrors(errors, statusCode) {
+    var _this;
+
+    _this = _Error.call(this) || this;
+    _this.errors = errors;
+    _this.statusCode = statusCode;
+    _this.message = JsonApiErrors.formatMessage(errors);
+    return _this;
+  }
+
+  JsonApiErrors.formatMessage = function formatMessage(errors) {
+    if (typeof errors === "string") {
+      return errors;
+    }
+
+    var error = errors[0];
+    var message = error.status + " " + error.title;
+
+    if (error.detail) {
+      message += "\n" + error.detail;
+    }
+
+    return message;
+  };
+
+  return JsonApiErrors;
+}( /*#__PURE__*/_wrapNativeSuper(Error));
+
 function _catch$2(body, recover) {
   try {
     var result = body();
@@ -903,16 +1027,29 @@ var DEFAULT_HEADERS = {
   "Content-Type": "application/vnd.api+json",
   Accept: "application/vnd.api+json"
 };
-var Experiment_DrupalClient = /*#__PURE__*/function () {
+
+function isBasicAuth(auth) {
+  return (auth == null ? void 0 : auth.username) !== undefined || (auth == null ? void 0 : auth.password) !== undefined;
+}
+
+function isAccessTokenAuth(auth) {
+  return (auth == null ? void 0 : auth.access_token) !== undefined;
+}
+
+function isClientIdSecretAuth(auth) {
+  return (auth == null ? void 0 : auth.clientId) !== undefined || (auth == null ? void 0 : auth.clientSecret) !== undefined;
+}
+
+var DrupalClient = /*#__PURE__*/function () {
   /**
-   * Instantiates a new Experiment_DrupalClient.
+   * Instantiates a new DrupalClient.
    *
-   * const client = new Experiment_DrupalClient(baseUrl)
+   * const client = new DrupalClient(baseUrl)
    *
    * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.
    * @param {options} options Options for the client. See Experiment_DrupalClientOptions.
    */
-  function Experiment_DrupalClient(baseUrl, options) {
+  function DrupalClient(baseUrl, options) {
     if (options === void 0) {
       options = {};
     }
@@ -947,7 +1084,9 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
         previewSecret = _options2.previewSecret,
         accessToken = _options2.accessToken,
         _options2$forceIframe = _options2.forceIframeSameSiteCookie,
-        forceIframeSameSiteCookie = _options2$forceIframe === void 0 ? false : _options2$forceIframe;
+        forceIframeSameSiteCookie = _options2$forceIframe === void 0 ? false : _options2$forceIframe,
+        _options2$throwJsonAp = _options2.throwJsonApiErrors,
+        throwJsonApiErrors = _options2$throwJsonAp === void 0 ? true : _options2$throwJsonAp;
     this.baseUrl = baseUrl;
     this.apiPrefix = apiPrefix;
     this.serializer = serializer;
@@ -963,11 +1102,16 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     this.cache = cache;
     this.accessToken = accessToken;
     this.forceIframeSameSiteCookie = forceIframeSameSiteCookie;
+    this.throwJsonApiErrors = throwJsonApiErrors; // Do not throw errors in production.
+
+    if (process.env.NODE_ENV === "production") {
+      this.throwJsonApiErrors = false;
+    }
 
     this._debug("Debug mode is on.");
   }
 
-  var _proto = Experiment_DrupalClient.prototype;
+  var _proto = DrupalClient.prototype;
 
   /* eslint-disable @typescript-eslint/no-explicit-any */
   _proto.fetch = function (_fetch) {
@@ -984,143 +1128,422 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     try {
       var _init;
 
-      var _temp6 = function _temp6() {
-        var _exit;
+      var _temp14 = function _temp14(_result2) {
+        var _exit2;
+
+        if (_exit3) return _result2;
 
-        function _temp3(_result) {
-          if (_exit) return _result;
+        function _temp11(_result3) {
+          if (_exit2) return _result3;
 
           _this2._debug("Using default fetch (polyfilled by Next.js).");
 
-          return Promise.resolve(fetch(input, init)).then(function (response) {
-            return (response == null ? void 0 : response.ok) ? response : Promise.resolve(_this2.formatErrorResponse(response)).then(function (message) {
-              if (process.env.NODE_ENV !== "production") {
-                throw new Error(message);
-              } else {
-                if (_this2.debug) {
-                  _this2.logger.error(message);
-                }
-
-                return null;
-              }
-            });
-          });
+          return Promise.resolve(fetch(input, init));
         }
 
-        var _temp2 = function () {
+        var _temp10 = function () {
           if (_this2.fetcher) {
             _this2._debug("Using custom fetcher.");
 
-            _exit = 1;
+            _exit2 = 1;
             return Promise.resolve(_this2.fetcher(input, init));
           }
         }();
 
-        return _temp2 && _temp2.then ? _temp2.then(_temp3) : _temp3(_temp2);
+        return _temp10 && _temp10.then ? _temp10.then(_temp11) : _temp11(_temp10);
       };
 
+      var _exit3;
+
       var _this2 = this;
 
       init = _extends({}, init, {
+        credentials: "include",
         headers: _extends({}, _this2._headers, (_init = init) == null ? void 0 : _init.headers)
-      });
+      }); // Using the auth set on the client.
+      // TODO: Abstract this to a re-usable.
 
-      var _temp7 = function () {
+      var _temp15 = function () {
         var _init2;
 
         if ((_init2 = init) == null ? void 0 : _init2.withAuth) {
-          _this2._debug("Using authenticated request."); // If a custom auth is provided, use that.
-
-
-          var _temp8 = function () {
-            if (typeof _this2._auth === "function") {
-              _this2._debug("Using custom auth.");
+          _this2._debug("Using authenticated request.");
+
+          return function () {
+            if (init.withAuth === true) {
+              if (typeof _this2._auth === "undefined") {
+                throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+              } // By default, if withAuth is set to true, we use the auth configured
+              // in the client constructor.
+
+
+              var _temp16 = function () {
+                if (typeof _this2._auth === "function") {
+                  _this2._debug("Using custom auth callback.");
+
+                  init["headers"]["Authorization"] = _this2._auth();
+                } else {
+                  var _temp17 = function () {
+                    if (typeof _this2._auth === "string") {
+                      _this2._debug("Using custom authorization header.");
+
+                      init["headers"]["Authorization"] = _this2._auth;
+                    } else {
+                      var _temp18 = function () {
+                        if (typeof _this2._auth === "object") {
+                          _this2._debug("Using custom auth credentials.");
+
+                          var _temp19 = function () {
+                            if (isBasicAuth(_this2._auth)) {
+                              var basic = Buffer.from(_this2._auth.username + ":" + _this2._auth.password).toString("base64");
+                              init["headers"]["Authorization"] = "Basic " + basic;
+                            } else {
+                              var _temp20 = function () {
+                                if (isClientIdSecretAuth(_this2._auth)) {
+                                  // Use the built-in client_credentials grant.
+                                  _this2._debug("Using default auth (client_credentials)."); // Fetch an access token and add it to the request.
+                                  // Access token can be fetched from cache or using a custom auth method.
+
+
+                                  return Promise.resolve(_this2.getAccessToken(_this2._auth)).then(function (token) {
+                                    if (token) {
+                                      init["headers"]["Authorization"] = "Bearer " + token.access_token;
+                                    }
+                                  });
+                                } else if (isAccessTokenAuth(_this2._auth)) {
+                                  init["headers"]["Authorization"] = _this2._auth.token_type + " " + _this2._auth.access_token;
+                                }
+                              }();
+
+                              if (_temp20 && _temp20.then) return _temp20.then(function () {});
+                            }
+                          }();
+
+                          if (_temp19 && _temp19.then) return _temp19.then(function () {});
+                        }
+                      }();
+
+                      if (_temp18 && _temp18.then) return _temp18.then(function () {});
+                    }
+                  }();
+
+                  if (_temp17 && _temp17.then) return _temp17.then(function () {});
+                }
+              }();
 
-              init["headers"]["Authorization"] = _this2._auth();
+              if (_temp16 && _temp16.then) return _temp16.then(function () {});
             } else {
-              // Otherwise use the built-in client_credentials grant.
-              _this2._debug("Using default auth (client_credentials)."); // Fetch an access token and add it to the request.
-              // Access token can be fetched from cache or using a custom auth method.
-
-
-              return Promise.resolve(_this2.getAccessToken()).then(function (token) {
-                if (token) {
-                  init["headers"]["Authorization"] = "Bearer " + token.access_token;
+              var _temp21 = function () {
+                if (typeof init.withAuth === "string") {
+                  _this2._debug("Using custom authorization header.");
+
+                  init["headers"]["Authorization"] = init.withAuth;
+                } else {
+                  var _temp22 = function () {
+                    if (typeof init.withAuth === "function") {
+                      _this2._debug("Using custom authorization callback.");
+
+                      init["headers"]["Authorization"] = init.withAuth();
+                    } else {
+                      var _temp23 = function () {
+                        if (isBasicAuth(init.withAuth)) {
+                          _this2._debug("Using basic authorization header");
+
+                          var basic = Buffer.from(init.withAuth.username + ":" + init.withAuth.password).toString("base64");
+                          init["headers"]["Authorization"] = "Basic " + basic;
+                        } else {
+                          var _temp24 = function () {
+                            if (isClientIdSecretAuth(init.withAuth)) {
+                              // Fetch an access token and add it to the request.
+                              // Access token can be fetched from cache or using a custom auth method.
+                              return Promise.resolve(_this2.getAccessToken(init.withAuth)).then(function (token) {
+                                if (token) {
+                                  init["headers"]["Authorization"] = "Bearer " + token.access_token;
+                                }
+                              });
+                            } else if (isAccessTokenAuth(init.withAuth)) {
+                              init["headers"]["Authorization"] = init.withAuth.token_type + " " + init.withAuth.access_token;
+                            }
+                          }();
+
+                          if (_temp24 && _temp24.then) return _temp24.then(function () {});
+                        }
+                      }();
+
+                      if (_temp23 && _temp23.then) return _temp23.then(function () {});
+                    }
+                  }();
+
+                  if (_temp22 && _temp22.then) return _temp22.then(function () {});
                 }
-              });
+              }();
+
+              if (_temp21 && _temp21.then) return _temp21.then(function () {});
             }
           }();
-
-          if (_temp8 && _temp8.then) return _temp8.then(function () {});
         }
       }();
 
-      return Promise.resolve(_temp7 && _temp7.then ? _temp7.then(_temp6) : _temp6(_temp7));
+      return Promise.resolve(_temp15 && _temp15.then ? _temp15.then(_temp14) : _temp14(_temp15));
     } catch (e) {
       return Promise.reject(e);
     }
   });
 
+  _proto.createResource = function createResource(type, body, options) {
+    try {
+      var _options3, _options4;
+
+      var _this4 = this;
+
+      options = _extends({
+        deserialize: true,
+        withAuth: true
+      }, options);
+      return Promise.resolve(_this4.getEntryForResourceType(type, ((_options3 = options) == null ? void 0 : _options3.locale) !== ((_options4 = options) == null ? void 0 : _options4.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options5;
+
+        var url = _this4.buildUrl(apiPath, (_options5 = options) == null ? void 0 : _options5.params);
+
+        _this4._debug("Creating resource of type " + type + ".");
+
+        _this4._debug(url.toString()); // Add type to body.
+
+
+        body.data.type = type;
+        return Promise.resolve(_this4.fetch(url.toString(), {
+          method: "POST",
+          body: JSON.stringify(body),
+          withAuth: options.withAuth
+        })).then(function (response) {
+          function _temp26() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this4.deserialize(json) : json;
+            });
+          }
+
+          var _temp25 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this4.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp25 && _temp25.then ? _temp25.then(_temp26) : _temp26(_temp25);
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  _proto.createFileResource = function createFileResource(type, body, options) {
+    try {
+      var _body$data, _body$data$attributes, _options6, _options7;
+
+      var _this6 = this;
+
+      options = _extends({
+        deserialize: true,
+        withAuth: true
+      }, options);
+      var hostType = body == null ? void 0 : (_body$data = body.data) == null ? void 0 : (_body$data$attributes = _body$data.attributes) == null ? void 0 : _body$data$attributes.type;
+      return Promise.resolve(_this6.getEntryForResourceType(hostType, ((_options6 = options) == null ? void 0 : _options6.locale) !== ((_options7 = options) == null ? void 0 : _options7.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options8;
+
+        var url = _this6.buildUrl(apiPath + "/" + body.data.attributes.field, (_options8 = options) == null ? void 0 : _options8.params);
+
+        _this6._debug("Creating file resource for media of type " + type + ".");
+
+        _this6._debug(url.toString());
+
+        return Promise.resolve(_this6.fetch(url.toString(), {
+          method: "POST",
+          headers: {
+            "Content-Type": "application/octet-stream",
+            Accept: "application/vnd.api+json",
+            "Content-Disposition": "file; filename=\"" + body.data.attributes.filename + "\""
+          },
+          body: body.data.attributes.file,
+          withAuth: options.withAuth
+        })).then(function (response) {
+          function _temp28() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this6.deserialize(json) : json;
+            });
+          }
+
+          var _temp27 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this6.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp27 && _temp27.then ? _temp27.then(_temp28) : _temp28(_temp27);
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  _proto.updateResource = function updateResource(type, uuid, body, options) {
+    try {
+      var _options9, _options10;
+
+      var _this8 = this;
+
+      options = _extends({
+        deserialize: true,
+        withAuth: true
+      }, options);
+      return Promise.resolve(_this8.getEntryForResourceType(type, ((_options9 = options) == null ? void 0 : _options9.locale) !== ((_options10 = options) == null ? void 0 : _options10.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options11;
+
+        var url = _this8.buildUrl(apiPath + "/" + uuid, (_options11 = options) == null ? void 0 : _options11.params);
+
+        _this8._debug("Updating resource of type " + type + " with id " + uuid + ".");
+
+        _this8._debug(url.toString()); // Update body.
+
+
+        body.data.type = type;
+        body.data.id = uuid;
+        return Promise.resolve(_this8.fetch(url.toString(), {
+          method: "PATCH",
+          body: JSON.stringify(body),
+          withAuth: options.withAuth
+        })).then(function (response) {
+          function _temp30() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this8.deserialize(json) : json;
+            });
+          }
+
+          var _temp29 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this8.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp29 && _temp29.then ? _temp29.then(_temp30) : _temp30(_temp29);
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  _proto.deleteResource = function deleteResource(type, uuid, options) {
+    try {
+      var _options12, _options13;
+
+      var _this10 = this;
+
+      options = _extends({
+        withAuth: true,
+        params: {}
+      }, options);
+      return Promise.resolve(_this10.getEntryForResourceType(type, ((_options12 = options) == null ? void 0 : _options12.locale) !== ((_options13 = options) == null ? void 0 : _options13.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options14;
+
+        var url = _this10.buildUrl(apiPath + "/" + uuid, (_options14 = options) == null ? void 0 : _options14.params);
+
+        _this10._debug("Deleting resource of type " + type + " with id " + uuid + ".");
+
+        _this10._debug(url.toString());
+
+        return Promise.resolve(_this10.fetch(url.toString(), {
+          method: "DELETE",
+          withAuth: options.withAuth
+        })).then(function (response) {
+          function _temp32() {
+            return response.status === 204;
+          }
+
+          var _temp31 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this10.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp31 && _temp31.then ? _temp31.then(_temp32) : _temp32(_temp31);
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
   _proto.getResource = function getResource(type, uuid, options) {
     try {
-      var _temp13 = function _temp13(_result2) {
-        var _options3, _options4;
+      var _temp39 = function _temp39(_result4) {
+        var _options15, _options16;
 
-        return _exit3 ? _result2 : Promise.resolve(_this4.getEntryForResourceType(type, ((_options3 = options) == null ? void 0 : _options3.locale) !== ((_options4 = options) == null ? void 0 : _options4.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
-          var _options5;
+        return _exit5 ? _result4 : Promise.resolve(_this12.getEntryForResourceType(type, ((_options15 = options) == null ? void 0 : _options15.locale) !== ((_options16 = options) == null ? void 0 : _options16.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+          var _options17;
 
-          var url = _this4.buildUrl(apiPath + "/" + uuid, (_options5 = options) == null ? void 0 : _options5.params);
+          var url = _this12.buildUrl(apiPath + "/" + uuid, (_options17 = options) == null ? void 0 : _options17.params);
 
-          _this4._debug("Fetching resource " + type + " with id " + uuid + ".");
+          _this12._debug("Fetching resource " + type + " with id " + uuid + ".");
 
-          _this4._debug(url.toString());
+          _this12._debug(url.toString());
 
-          return Promise.resolve(_this4.fetch(url.toString(), {
+          return Promise.resolve(_this12.fetch(url.toString(), {
             withAuth: options.withAuth
           })).then(function (response) {
-            return Promise.resolve(response.json()).then(function (json) {
-              function _temp10() {
-                return options.deserialize ? _this4.deserialize(json) : json;
-              }
-
-              var _temp9 = function () {
-                if (options.withCache) {
-                  return Promise.resolve(_this4.cache.set(options.cacheKey, JSON.stringify(json))).then(function () {});
+            function _temp36() {
+              return Promise.resolve(response.json()).then(function (json) {
+                function _temp34() {
+                  return options.deserialize ? _this12.deserialize(json) : json;
                 }
-              }();
 
-              return _temp9 && _temp9.then ? _temp9.then(_temp10) : _temp10(_temp9);
-            });
+                var _temp33 = function () {
+                  if (options.withCache) {
+                    return Promise.resolve(_this12.cache.set(options.cacheKey, JSON.stringify(json))).then(function () {});
+                  }
+                }();
+
+                return _temp33 && _temp33.then ? _temp33.then(_temp34) : _temp34(_temp33);
+              });
+            }
+
+            var _temp35 = function () {
+              if (!(response == null ? void 0 : response.ok)) {
+                return Promise.resolve(_this12.handleJsonApiErrors(response)).then(function () {});
+              }
+            }();
+
+            return _temp35 && _temp35.then ? _temp35.then(_temp36) : _temp36(_temp35);
           });
         });
       };
 
-      var _exit3;
+      var _exit5;
 
-      var _this4 = this;
+      var _this12 = this;
 
       options = _extends({
         deserialize: true,
-        withAuth: _this4.withAuth,
+        withAuth: _this12.withAuth,
         withCache: false,
         params: {}
       }, options);
 
-      var _temp14 = function () {
+      var _temp40 = function () {
         if (options.withCache) {
-          return Promise.resolve(_this4.cache.get(options.cacheKey)).then(function (cached) {
+          return Promise.resolve(_this12.cache.get(options.cacheKey)).then(function (cached) {
             if (cached) {
-              _this4._debug("Returning cached resource " + type + " with id " + uuid);
+              _this12._debug("Returning cached resource " + type + " with id " + uuid);
 
               var json = JSON.parse(cached);
-              _exit3 = 1;
-              return options.deserialize ? _this4.deserialize(json) : json;
+              _exit5 = 1;
+              return options.deserialize ? _this12.deserialize(json) : json;
             }
           });
         }
       }();
 
-      return Promise.resolve(_temp14 && _temp14.then ? _temp14.then(_temp13) : _temp13(_temp14));
+      return Promise.resolve(_temp40 && _temp40.then ? _temp40.then(_temp39) : _temp39(_temp40));
     } catch (e) {
       return Promise.reject(e);
     }
@@ -1128,58 +1551,81 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getResourceFromContext = function getResourceFromContext(input, context, options) {
     try {
-      var _options6, _options7, _options8;
+      var _options19, _options20;
 
-      var _this6 = this;
+      var _temp43 = function _temp43(_result6) {
+        var _options18;
 
-      var type = typeof input === "string" ? input : input.jsonapi.resourceName;
+        if (_exit7) return _result6;
 
-      if (typeof input !== "string") {
-        // Fix for subrequests and translation.
-        // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
-        // @shadcn, note to self:
-        // Given an entity at /example with no translation.
-        // When we try to translate /es/example, decoupled router will properly
-        // translate to the untranslated version and set the locale to es.
-        // However a subrequests to /es/subrequests for decoupled router will fail.
-        if (context.locale && input.entity.langcode !== context.locale) {
-          context.locale = input.entity.langcode;
-        }
-      }
+        var path = _this14.getPathFromContext(context, {
+          pathPrefix: (_options18 = options) == null ? void 0 : _options18.pathPrefix
+        });
+
+        return Promise.resolve(_this14.getResourceByPath(path, _options)); // If no locale is passed, skip entity if not default_langcode.
+        // This happens because decoupled_router will still translate the path
+        // to a resource.
+        // TODO: Figure out if we want this behavior.
+        // For now this causes a bug where a non-i18n sites builds (ISR) pages for
+        // localized pages.
+        // if (!context.locale && !resource?.default_langcode) {
+        //   return null
+        // }
+      };
 
+      var _exit7;
+
+      var _this14 = this;
+
+      var type = typeof input === "string" ? input : input.jsonapi.resourceName;
+      var previewData = context.previewData;
       options = _extends({
         // Add support for revisions for node by default.
         // TODO: Make this required before stable?
         isVersionable: /^node--/.test(type),
         deserialize: true,
         pathPrefix: "/",
-        withAuth: _this6.withAuth,
+        withAuth: _this14.getAuthFromContextAndOptions(context, options),
         params: {}
       }, options);
-
-      var path = _this6.getPathFromContext(context, {
-        pathPrefix: (_options6 = options) == null ? void 0 : _options6.pathPrefix
-      });
-
-      var previewData = context.previewData;
-      return Promise.resolve(_this6.getResourceByPath(path, {
+      var _options = {
         deserialize: options.deserialize,
         isVersionable: options.isVersionable,
         locale: context.locale,
         defaultLocale: context.defaultLocale,
-        withAuth: context.preview || ((_options7 = options) == null ? void 0 : _options7.withAuth),
+        withAuth: (_options19 = options) == null ? void 0 : _options19.withAuth,
         params: _extends({
           resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
-        }, (_options8 = options) == null ? void 0 : _options8.params)
-      })); // If no locale is passed, skip entity if not default_langcode.
-      // This happens because decoupled_router will still translate the path
-      // to a resource.
-      // TODO: Figure out if we want this behavior.
-      // For now this causes a bug where a non-i18n sites builds (ISR) pages for
-      // localized pages.
-      // if (!context.locale && !resource?.default_langcode) {
-      //   return null
-      // }
+        }, (_options20 = options) == null ? void 0 : _options20.params)
+      };
+
+      var _temp44 = function () {
+        if (typeof input !== "string") {
+          // Fix for subrequests and translation.
+          // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
+          // @shadcn, note to self:
+          // Given an entity at /example with no translation.
+          // When we try to translate /es/example, decoupled router will properly
+          // translate to the untranslated version and set the locale to es.
+          // However a subrequests to /es/subrequests for decoupled router will fail.
+          if (context.locale && input.entity.langcode !== context.locale) {
+            context.locale = input.entity.langcode;
+          } // Given we already have the path info, we can skip subrequests and just make a simple
+          // request to the Drupal site to get the entity.
+
+
+          return function () {
+            var _input$entity;
+
+            if ((_input$entity = input.entity) == null ? void 0 : _input$entity.uuid) {
+              _exit7 = 1;
+              return Promise.resolve(_this14.getResource(type, input.entity.uuid, _options));
+            }
+          }();
+        }
+      }();
+
+      return Promise.resolve(_temp44 && _temp44.then ? _temp44.then(_temp43) : _temp43(_temp44));
     } catch (e) {
       return Promise.reject(e);
     }
@@ -1187,12 +1633,12 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getResourceByPath = function getResourceByPath(path, options) {
     try {
-      var _this8 = this;
+      var _this16 = this;
 
       options = _extends({
         deserialize: true,
         isVersionable: false,
-        withAuth: _this8.withAuth,
+        withAuth: _this16.withAuth,
         params: {}
       }, options);
 
@@ -1202,7 +1648,7 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
       if (options.locale && options.defaultLocale && path.indexOf(options.locale) !== 1) {
         path = path === "/" ? path : path.replace(/^\/+/, "");
-        path = _this8.getPathFromContext({
+        path = _this16.getPathFromContext({
           params: {
             slug: [path]
           },
@@ -1251,11 +1697,11 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
         subrequestsPath = "/" + options.locale + "/subrequests";
       }
 
-      var url = _this8.buildUrl(subrequestsPath, {
+      var url = _this16.buildUrl(subrequestsPath, {
         _format: "json"
       });
 
-      return Promise.resolve(_this8.fetch(url.toString(), {
+      return Promise.resolve(_this16.fetch(url.toString(), {
         method: "POST",
         credentials: "include",
         redirect: "follow",
@@ -1272,7 +1718,7 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
               var error = JSON.parse(json.router.body);
 
               if (error == null ? void 0 : error.message) {
-                throw new Error(error.message);
+                _this16.throwError(new Error(error.message));
               }
             }
 
@@ -1282,10 +1728,10 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
           var data = JSON.parse((_json$resolvedResourc2 = json["resolvedResource#uri{0}"]) == null ? void 0 : _json$resolvedResourc2.body);
 
           if (data.errors) {
-            throw new Error(_this8.formatJsonApiErrors(data.errors));
+            _this16.throwError(new Error(_this16.formatJsonApiErrors(data.errors)));
           }
 
-          return options.deserialize ? _this8.deserialize(data) : data;
+          return options.deserialize ? _this16.deserialize(data) : data;
         });
       });
     } catch (e) {
@@ -1295,25 +1741,39 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getResourceCollection = function getResourceCollection(type, options) {
     try {
-      var _options9, _options10;
+      var _options21, _options22;
 
-      var _this10 = this;
+      var _this18 = this;
 
       options = _extends({
-        withAuth: _this10.withAuth,
+        withAuth: _this18.withAuth,
         deserialize: true
       }, options);
-      return Promise.resolve(_this10.getEntryForResourceType(type, ((_options9 = options) == null ? void 0 : _options9.locale) !== ((_options10 = options) == null ? void 0 : _options10.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
-        var _options11;
+      return Promise.resolve(_this18.getEntryForResourceType(type, ((_options21 = options) == null ? void 0 : _options21.locale) !== ((_options22 = options) == null ? void 0 : _options22.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options23;
 
-        var url = _this10.buildUrl(apiPath, _extends({}, (_options11 = options) == null ? void 0 : _options11.params));
+        var url = _this18.buildUrl(apiPath, _extends({}, (_options23 = options) == null ? void 0 : _options23.params));
 
-        return Promise.resolve(_this10.fetch(url.toString(), {
+        _this18._debug("Fetching resource collection of type " + type);
+
+        _this18._debug(url.toString());
+
+        return Promise.resolve(_this18.fetch(url.toString(), {
           withAuth: options.withAuth
         })).then(function (response) {
-          return Promise.resolve(response.json()).then(function (json) {
-            return options.deserialize ? _this10.deserialize(json) : json;
-          });
+          function _temp46() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this18.deserialize(json) : json;
+            });
+          }
+
+          var _temp45 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this18.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp45 && _temp45.then ? _temp45.then(_temp46) : _temp46(_temp45);
         });
       });
     } catch (e) {
@@ -1323,16 +1783,15 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getResourceCollectionFromContext = function getResourceCollectionFromContext(type, context, options) {
     try {
-      var _this12 = this;
+      var _this20 = this;
 
       options = _extends({
-        withAuth: _this12.withAuth,
         deserialize: true
       }, options);
-      return Promise.resolve(_this12.getResourceCollection(type, _extends({}, options, {
+      return Promise.resolve(_this20.getResourceCollection(type, _extends({}, options, {
         locale: context.locale,
         defaultLocale: context.defaultLocale,
-        withAuth: context.preview || options.withAuth
+        withAuth: _this20.getAuthFromContextAndOptions(context, options)
       })));
     } catch (e) {
       return Promise.reject(e);
@@ -1341,10 +1800,10 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getStaticPathsFromContext = function getStaticPathsFromContext(types, context, options) {
     try {
-      var _this14 = this;
+      var _this22 = this;
 
       options = _extends({
-        withAuth: _this14.withAuth,
+        withAuth: _this22.withAuth,
         pathPrefix: "/",
         params: {}
       }, options);
@@ -1355,19 +1814,19 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
       return Promise.resolve(Promise.all(types.map(function (type) {
         try {
-          var _extends2, _options12;
+          var _extends2, _options24;
 
-          var _temp17 = function _temp17(_result3) {
-            return _exit5 ? _result3 : Promise.resolve(Promise.all(context.locales.map(function (locale) {
+          var _temp49 = function _temp49(_result7) {
+            return _exit9 ? _result7 : Promise.resolve(Promise.all(context.locales.map(function (locale) {
               try {
-                return Promise.resolve(_this14.getResourceCollection(type, {
+                return Promise.resolve(_this22.getResourceCollection(type, {
                   deserialize: true,
                   locale: locale,
                   defaultLocale: context.defaultLocale,
                   params: params,
                   withAuth: options.withAuth
                 })).then(function (resources) {
-                  return _this14.buildStaticPathsFromResources(resources, {
+                  return _this22.buildStaticPathsFromResources(resources, {
                     locale: locale,
                     pathPrefix: options.pathPrefix
                   });
@@ -1380,30 +1839,30 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
             });
           };
 
-          var _exit5;
+          var _exit9;
 
           // Use sparse fieldset to expand max size.
           // Note we don't need status filter here since this runs non-authenticated (by default).
-          var params = _extends((_extends2 = {}, _extends2["fields[" + type + "]"] = "path", _extends2), (_options12 = options) == null ? void 0 : _options12.params); // Handle localized path aliases
+          var params = _extends((_extends2 = {}, _extends2["fields[" + type + "]"] = "path", _extends2), (_options24 = options) == null ? void 0 : _options24.params); // Handle localized path aliases
 
 
-          var _temp18 = function () {
+          var _temp50 = function () {
             var _context$locales;
 
             if (!((_context$locales = context.locales) == null ? void 0 : _context$locales.length)) {
-              return Promise.resolve(_this14.getResourceCollection(type, {
+              return Promise.resolve(_this22.getResourceCollection(type, {
                 params: params,
                 withAuth: options.withAuth
               })).then(function (resources) {
-                _exit5 = 1;
-                return _this14.buildStaticPathsFromResources(resources, {
+                _exit9 = 1;
+                return _this22.buildStaticPathsFromResources(resources, {
                   pathPrefix: options.pathPrefix
                 });
               });
             }
           }();
 
-          return Promise.resolve(_temp18 && _temp18.then ? _temp18.then(_temp17) : _temp17(_temp18));
+          return Promise.resolve(_temp50 && _temp50.then ? _temp50.then(_temp49) : _temp49(_temp50));
         } catch (e) {
           return Promise.reject(e);
         }
@@ -1416,12 +1875,12 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
   };
 
   _proto.buildStaticPathsFromResources = function buildStaticPathsFromResources(resources, options) {
-    var _this15 = this;
+    var _this23 = this;
 
     var paths = resources == null ? void 0 : resources.flatMap(function (resource) {
       var _resource$path, _resource$path2;
 
-      return (resource == null ? void 0 : (_resource$path = resource.path) == null ? void 0 : _resource$path.alias) === _this15.frontPage ? "/" : resource == null ? void 0 : (_resource$path2 = resource.path) == null ? void 0 : _resource$path2.alias;
+      return (resource == null ? void 0 : (_resource$path = resource.path) == null ? void 0 : _resource$path.alias) === _this23.frontPage ? "/" : resource == null ? void 0 : (_resource$path2 = resource.path) == null ? void 0 : _resource$path2.alias;
     }).filter(Boolean);
     return (paths == null ? void 0 : paths.length) ? this.buildStaticPathsParamsFromPaths(paths, options) : [];
   };
@@ -1452,17 +1911,17 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.translatePath = function translatePath(path, options) {
     try {
-      var _this17 = this;
+      var _this25 = this;
 
       options = _extends({
-        withAuth: _this17.withAuth
+        withAuth: _this25.withAuth
       }, options);
 
-      var url = _this17.buildUrl("/router/translate-path", {
+      var url = _this25.buildUrl("/router/translate-path", {
         path: path
       });
 
-      return Promise.resolve(_this17.fetch(url.toString(), {
+      return Promise.resolve(_this25.fetch(url.toString(), {
         withAuth: options.withAuth
       })).then(function (response) {
         return (response == null ? void 0 : response.ok) ? Promise.resolve(response.json()) : null;
@@ -1474,19 +1933,18 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.translatePathFromContext = function translatePathFromContext(context, options) {
     try {
-      var _this19 = this;
+      var _this27 = this;
 
       options = _extends({
-        pathPrefix: "/",
-        withAuth: _this19.withAuth
+        pathPrefix: "/"
       }, options);
 
-      var path = _this19.getPathFromContext(context, {
+      var path = _this27.getPathFromContext(context, {
         pathPrefix: options.pathPrefix
       });
 
-      return Promise.resolve(_this19.translatePath(path, {
-        withAuth: context.preview || options.withAuth
+      return Promise.resolve(_this27.translatePath(path, {
+        withAuth: _this27.getAuthFromContextAndOptions(context, options)
       }));
     } catch (e) {
       return Promise.reject(e);
@@ -1506,7 +1964,9 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
       pathPrefix = "/" + context.locale + pathPrefix;
     }
 
-    slug = Array.isArray(slug) ? slug.join("/") : slug; // Handle front page.
+    slug = Array.isArray(slug) ? slug.map(function (s) {
+      return encodeURIComponent(s);
+    }).join("/") : slug; // Handle front page.
 
     if (!slug) {
       slug = this.frontPage;
@@ -1519,19 +1979,19 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getIndex = function getIndex(locale) {
     try {
-      var _this21 = this;
+      var _this29 = this;
 
-      var url = _this21.buildUrl(locale ? "/" + locale + _this21.apiPrefix : _this21.apiPrefix);
+      var url = _this29.buildUrl(locale ? "/" + locale + _this29.apiPrefix : _this29.apiPrefix);
 
       return Promise.resolve(_catch$2(function () {
-        return Promise.resolve(_this21.fetch(url.toString(), {
+        return Promise.resolve(_this29.fetch(url.toString(), {
           // As per https://www.drupal.org/node/2984034 /jsonapi is public.
           withAuth: false
         })).then(function (response) {
           return Promise.resolve(response.json());
         });
       }, function (error) {
-        throw new Error("Failed to fetch JSON:API index at " + url.toString() + " - " + error.message);
+        _this29.throwError(new Error("Failed to fetch JSON:API index at " + url.toString() + " - " + error.message));
       }));
     } catch (e) {
       return Promise.reject(e);
@@ -1540,17 +2000,17 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getEntryForResourceType = function getEntryForResourceType(type, locale) {
     try {
-      var _this23 = this;
+      var _this31 = this;
 
-      if (_this23.useDefaultResourceTypeEntry) {
+      if (_this31.useDefaultResourceTypeEntry) {
         var _type$split = type.split("--"),
             id = _type$split[0],
             bundle = _type$split[1];
 
-        return Promise.resolve("" + _this23.baseUrl + _this23.apiPrefix + "/" + (locale ? locale + "/" + id + "/" + bundle : id + "/" + bundle));
+        return Promise.resolve("" + _this31.baseUrl + _this31.apiPrefix + "/" + (locale ? locale + "/" + id + "/" + bundle : id + "/" + bundle));
       }
 
-      return Promise.resolve(_this23.getIndex(locale)).then(function (index) {
+      return Promise.resolve(_this31.getIndex(locale)).then(function (index) {
         var _index$links;
 
         var link = (_index$links = index.links) == null ? void 0 : _index$links[type];
@@ -1564,10 +2024,10 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
         if (locale) {
           var pattern = "^\\/" + locale + "\\/";
-          var path = href.replace(_this23.baseUrl, "");
+          var path = href.replace(_this31.baseUrl, "");
 
           if (!new RegExp(pattern, "i").test(path)) {
-            return _this23.baseUrl + "/" + locale + path;
+            return _this31.baseUrl + "/" + locale + path;
           }
         }
 
@@ -1580,75 +2040,68 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.preview = function preview(request, response, options) {
     try {
-      var _this25 = this;
+      var _this33 = this;
 
       var _request$query = request.query,
           slug = _request$query.slug,
           resourceVersion = _request$query.resourceVersion,
-          secret = _request$query.secret,
-          locale = _request$query.locale,
-          defaultLocale = _request$query.defaultLocale;
-
-      if (secret !== _this25.previewSecret) {
-        return Promise.resolve(response.status(401).json({
-          message: (options == null ? void 0 : options.errorMessages.secret) || "Invalid preview secret."
-        }));
-      }
-
-      if (!slug) {
-        return Promise.resolve(response.status(401).end({
-          message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug."
-        }));
-      }
-
-      var _options = {
-        isVersionable: !!resourceVersion
-      };
-
-      if (locale && defaultLocale) {
-        // Fix for und locale.
-        var _locale = locale === "und" ? defaultLocale : locale;
-
-        _options = _extends({}, _options, {
-          locale: _locale,
-          defaultLocale: defaultLocale
-        });
-      }
+          plugin = _request$query.plugin;
+      return Promise.resolve(_catch$2(function () {
+        // Always clear preview data to handle different scopes.
+        response.clearPreviewData(); // Validate the preview url.
 
-      return Promise.resolve(_this25.getResourceByPath(slug, _extends({
-        withAuth: true
-      }, _options))).then(function (entity) {
-        if (!entity || !(entity == null ? void 0 : entity.path)) {
-          throw new Error("The path attribute is missing for entity with slug " + slug);
-        }
+        var validateUrl = _this33.buildUrl("/next/preview-url");
 
-        var url = (entity == null ? void 0 : entity.default_langcode) ? entity.path.alias : "/" + entity.path.langcode + entity.path.alias;
+        return Promise.resolve(_this33.fetch(validateUrl.toString(), {
+          method: "POST",
+          headers: {
+            "Content-Type": "application/json"
+          },
+          body: JSON.stringify(request.query)
+        })).then(function (result) {
+          var _exit10;
+
+          function _temp52(_result9) {
+            return _exit10 ? _result9 : Promise.resolve(result.json()).then(function (validationPayload) {
+              response.setPreviewData(_extends({
+                resourceVersion: resourceVersion,
+                plugin: plugin
+              }, validationPayload)); // Fix issue with cookie.
+              // See https://github.com/vercel/next.js/discussions/32238.
+              // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+
+              if (_this33.forceIframeSameSiteCookie) {
+                var previous = response.getHeader("Set-Cookie");
+                previous.forEach(function (cookie, index) {
+                  previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
+                });
+                response.setHeader("Set-Cookie", previous);
+              } // We can safely redirect to the slug since this has been validated on the server.
 
-        if (!url) {
-          response.status(404).end({
-            message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug"
-          });
-        }
 
-        response.setPreviewData({
-          resourceVersion: resourceVersion
-        }); // Fix issue with cookie.
-        // See https://github.com/vercel/next.js/discussions/32238.
-        // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+              response.writeHead(307, {
+                Location: slug
+              });
+              return response.end();
+            });
+          }
 
-        if (_this25.forceIframeSameSiteCookie) {
-          var previous = response.getHeader("Set-Cookie");
-          previous.forEach(function (cookie, index) {
-            previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
-          });
-          response.setHeader("Set-Cookie", previous);
-        }
+          var _temp51 = function () {
+            if (!result.ok) {
+              response.statusCode = result.status;
+              _exit10 = 1;
+              var _json2 = response.json;
+              return Promise.resolve(result.json()).then(function (_result$json) {
+                return _json2.call(response, _result$json);
+              });
+            }
+          }();
 
-        response.writeHead(307, {
-          Location: url
+          return _temp51 && _temp51.then ? _temp51.then(_temp52) : _temp52(_temp51);
         });
-        return response.end();
-      });
+      }, function () {
+        return response.status(422).end();
+      }));
     } catch (e) {
       return Promise.reject(e);
     }
@@ -1656,77 +2109,87 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getMenu = function getMenu(name, options) {
     try {
-      var _temp22 = function _temp22(_result4) {
-        var _options13;
+      var _temp58 = function _temp58(_result10) {
+        var _options25;
 
-        if (_exit7) return _result4;
-        var localePrefix = ((_options13 = options) == null ? void 0 : _options13.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+        if (_exit12) return _result10;
+        var localePrefix = ((_options25 = options) == null ? void 0 : _options25.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
-        var url = _this27.buildUrl("" + localePrefix + _this27.apiPrefix + "/menu_items/" + name, options.params);
+        var url = _this35.buildUrl("" + localePrefix + _this35.apiPrefix + "/menu_items/" + name, options.params);
 
-        _this27._debug("Fetching menu items for " + name + ".");
+        _this35._debug("Fetching menu items for " + name + ".");
 
-        _this27._debug(url.toString());
+        _this35._debug(url.toString());
 
-        return Promise.resolve(_this27.fetch(url.toString(), {
+        return Promise.resolve(_this35.fetch(url.toString(), {
           withAuth: options.withAuth
         })).then(function (response) {
-          return Promise.resolve(response.json()).then(function (data) {
-            var items = options.deserialize ? _this27.deserialize(data) : data;
+          function _temp55() {
+            return Promise.resolve(response.json()).then(function (data) {
+              var items = options.deserialize ? _this35.deserialize(data) : data;
 
-            var _this27$buildMenuTree = _this27.buildMenuTree(items),
-                tree = _this27$buildMenuTree.items;
+              var _this35$buildMenuTree = _this35.buildMenuTree(items),
+                  tree = _this35$buildMenuTree.items;
 
-            var menu = {
-              items: items,
-              tree: tree
-            };
+              var menu = {
+                items: items,
+                tree: tree
+              };
 
-            var _temp19 = function () {
-              if (options.withCache) {
-                return Promise.resolve(_this27.cache.set(options.cacheKey, JSON.stringify(menu))).then(function () {});
-              }
-            }();
+              var _temp53 = function () {
+                if (options.withCache) {
+                  return Promise.resolve(_this35.cache.set(options.cacheKey, JSON.stringify(menu))).then(function () {});
+                }
+              }();
 
-            return _temp19 && _temp19.then ? _temp19.then(function () {
-              return menu;
-            }) : menu;
-          });
+              return _temp53 && _temp53.then ? _temp53.then(function () {
+                return menu;
+              }) : menu;
+            });
+          }
+
+          var _temp54 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this35.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp54 && _temp54.then ? _temp54.then(_temp55) : _temp55(_temp54);
         });
       };
 
-      var _exit7;
+      var _exit12;
 
-      var _this27 = this;
+      var _this35 = this;
 
       options = _extends({
-        withAuth: _this27.withAuth,
+        withAuth: _this35.withAuth,
         deserialize: true,
         params: {},
         withCache: false
       }, options);
 
-      var _temp23 = function () {
+      var _temp59 = function () {
         if (options.withCache) {
-          return Promise.resolve(_this27.cache.get(options.cacheKey)).then(function (cached) {
+          return Promise.resolve(_this35.cache.get(options.cacheKey)).then(function (cached) {
             if (cached) {
-              _this27._debug("Returning cached menu items for " + name);
+              _this35._debug("Returning cached menu items for " + name);
 
-              _exit7 = 1;
+              _exit12 = 1;
               return JSON.parse(cached);
             }
           });
         }
       }();
 
-      return Promise.resolve(_temp23 && _temp23.then ? _temp23.then(_temp22) : _temp22(_temp23));
+      return Promise.resolve(_temp59 && _temp59.then ? _temp59.then(_temp58) : _temp58(_temp59));
     } catch (e) {
       return Promise.reject(e);
     }
   };
 
   _proto.buildMenuTree = function buildMenuTree(links, parent) {
-    var _this28 = this;
+    var _this36 = this;
 
     if (parent === void 0) {
       parent = "";
@@ -1743,42 +2206,52 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     });
     return children.length ? {
       items: children.map(function (link) {
-        return _extends({}, link, _this28.buildMenuTree(links, link.id));
+        return _extends({}, link, _this36.buildMenuTree(links, link.id));
       })
     } : {};
   };
 
   _proto.getView = function getView(name, options) {
     try {
-      var _options14;
+      var _options26;
 
-      var _this30 = this;
+      var _this38 = this;
 
       options = _extends({
-        withAuth: _this30.withAuth,
+        withAuth: _this38.withAuth,
         deserialize: true,
         params: {}
       }, options);
-      var localePrefix = ((_options14 = options) == null ? void 0 : _options14.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+      var localePrefix = ((_options26 = options) == null ? void 0 : _options26.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
       var _name$split = name.split("--"),
           viewId = _name$split[0],
           displayId = _name$split[1];
 
-      var url = _this30.buildUrl("" + localePrefix + _this30.apiPrefix + "/views/" + viewId + "/" + displayId, options.params);
+      var url = _this38.buildUrl("" + localePrefix + _this38.apiPrefix + "/views/" + viewId + "/" + displayId, options.params);
 
-      return Promise.resolve(_this30.fetch(url.toString(), {
+      return Promise.resolve(_this38.fetch(url.toString(), {
         withAuth: options.withAuth
       })).then(function (response) {
-        return Promise.resolve(response.json()).then(function (data) {
-          var results = options.deserialize ? _this30.deserialize(data) : data;
-          return {
-            id: name,
-            results: results,
-            meta: data.meta,
-            links: data.links
-          };
-        });
+        function _temp61() {
+          return Promise.resolve(response.json()).then(function (data) {
+            var results = options.deserialize ? _this38.deserialize(data) : data;
+            return {
+              id: name,
+              results: results,
+              meta: data.meta,
+              links: data.links
+            };
+          });
+        }
+
+        var _temp60 = function () {
+          if (!(response == null ? void 0 : response.ok)) {
+            return Promise.resolve(_this38.handleJsonApiErrors(response)).then(function () {});
+          }
+        }();
+
+        return _temp60 && _temp60.then ? _temp60.then(_temp61) : _temp61(_temp60);
       });
     } catch (e) {
       return Promise.reject(e);
@@ -1787,24 +2260,34 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getSearchIndex = function getSearchIndex(name, options) {
     try {
-      var _options15;
+      var _options27;
 
-      var _this32 = this;
+      var _this40 = this;
 
       options = _extends({
-        withAuth: _this32.withAuth,
+        withAuth: _this40.withAuth,
         deserialize: true
       }, options);
-      var localePrefix = ((_options15 = options) == null ? void 0 : _options15.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+      var localePrefix = ((_options27 = options) == null ? void 0 : _options27.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
-      var url = _this32.buildUrl("" + localePrefix + _this32.apiPrefix + "/index/" + name, options.params);
+      var url = _this40.buildUrl("" + localePrefix + _this40.apiPrefix + "/index/" + name, options.params);
 
-      return Promise.resolve(_this32.fetch(url.toString(), {
+      return Promise.resolve(_this40.fetch(url.toString(), {
         withAuth: options.withAuth
       })).then(function (response) {
-        return Promise.resolve(response.json()).then(function (json) {
-          return options.deserialize ? _this32.deserialize(json) : json;
-        });
+        function _temp63() {
+          return Promise.resolve(response.json()).then(function (json) {
+            return options.deserialize ? _this40.deserialize(json) : json;
+          });
+        }
+
+        var _temp62 = function () {
+          if (!(response == null ? void 0 : response.ok)) {
+            return Promise.resolve(_this40.handleJsonApiErrors(response)).then(function () {});
+          }
+        }();
+
+        return _temp62 && _temp62.then ? _temp62.then(_temp63) : _temp63(_temp62);
       });
     } catch (e) {
       return Promise.reject(e);
@@ -1813,9 +2296,9 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getSearchIndexFromContext = function getSearchIndexFromContext(name, context, options) {
     try {
-      var _this34 = this;
+      var _this42 = this;
 
-      return Promise.resolve(_this34.getSearchIndex(name, _extends({}, options, {
+      return Promise.resolve(_this42.getSearchIndex(name, _extends({}, options, {
         locale: context.locale,
         defaultLocale: context.defaultLocale
       })));
@@ -1839,49 +2322,71 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     return url;
   };
 
-  _proto.getAccessToken = function getAccessToken() {
+  _proto.getAccessToken = function getAccessToken(opts) {
     try {
-      var _this36 = this;
+      var _this44 = this;
 
-      if (_this36.accessToken) {
-        return Promise.resolve(_this36.accessToken);
+      if (_this44.accessToken && _this44.accessTokenScope === (opts == null ? void 0 : opts.scope)) {
+        return Promise.resolve(_this44.accessToken);
       }
 
-      if (typeof _this36._auth !== "object") {
-        throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+      if (!(opts == null ? void 0 : opts.clientId) || !(opts == null ? void 0 : opts.clientSecret)) {
+        if (typeof _this44._auth === "undefined") {
+          throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+        }
       }
 
-      if (!_this36._auth.clientId || !_this36._auth.clientSecret) {
+      if (!isClientIdSecretAuth(_this44._auth) || opts && !isClientIdSecretAuth(opts)) {
         throw new Error("'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth");
       }
 
-      if (_this36._token && Date.now() < _this36.tokenExpiresOn) {
-        _this36._debug("Using existing access token.");
+      var clientId = (opts == null ? void 0 : opts.clientId) || _this44._auth.clientId;
+      var clientSecret = (opts == null ? void 0 : opts.clientSecret) || _this44._auth.clientSecret;
 
-        return Promise.resolve(_this36._token);
+      var url = _this44.buildUrl((opts == null ? void 0 : opts.url) || _this44._auth.url || DEFAULT_AUTH_URL);
+
+      if (_this44.accessTokenScope === (opts == null ? void 0 : opts.scope) && _this44._token && Date.now() < _this44.tokenExpiresOn) {
+        _this44._debug("Using existing access token.");
+
+        return Promise.resolve(_this44._token);
       }
 
-      _this36._debug("Fetching new access token.");
+      _this44._debug("Fetching new access token.");
+
+      var basic = Buffer.from(clientId + ":" + clientSecret).toString("base64");
+      var body = "grant_type=client_credentials";
 
-      var basic = Buffer.from(_this36._auth.clientId + ":" + _this36._auth.clientSecret).toString("base64");
-      return Promise.resolve(fetch("" + _this36.baseUrl + _this36._auth.url, {
+      if (opts == null ? void 0 : opts.scope) {
+        body = body + "&scope=" + opts.scope;
+
+        _this44._debug("Using scope: " + opts.scope);
+      }
+
+      return Promise.resolve(fetch(url.toString(), {
         method: "POST",
         headers: {
           Authorization: "Basic " + basic,
           "Content-Type": "application/x-www-form-urlencoded"
         },
-        body: "grant_type=client_credentials"
+        body: body
       })).then(function (response) {
-        if (!(response == null ? void 0 : response.ok)) {
-          throw new Error(response == null ? void 0 : response.statusText);
+        function _temp65() {
+          return Promise.resolve(response.json()).then(function (result) {
+            _this44._debug(result);
+
+            _this44.token = result;
+            _this44.accessTokenScope = opts == null ? void 0 : opts.scope;
+            return result;
+          });
         }
 
-        return Promise.resolve(response.json()).then(function (result) {
-          _this36._debug(result);
+        var _temp64 = function () {
+          if (!(response == null ? void 0 : response.ok)) {
+            return Promise.resolve(_this44.handleJsonApiErrors(response)).then(function () {});
+          }
+        }();
 
-          _this36.token = result;
-          return result;
-        });
+        return _temp64 && _temp64.then ? _temp64.then(_temp65) : _temp65(_temp64);
       });
     } catch (e) {
       return Promise.reject(e);
@@ -1893,25 +2398,25 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     return this.serializer.deserialize(body, options);
   };
 
-  _proto.formatErrorResponse = function formatErrorResponse(response) {
+  _proto.getErrorsFromResponse = function getErrorsFromResponse(response) {
     try {
-      var _temp28 = function _temp28(_result5) {
-        var _exit9;
+      var _temp70 = function _temp70(_result11) {
+        var _exit14;
 
-        if (_exit10) return _result5;
+        if (_exit15) return _result11;
 
-        function _temp25(_result6) {
-          return _exit9 ? _result6 : response.statusText;
+        function _temp67(_result12) {
+          return _exit14 ? _result12 : response.statusText;
         }
 
-        var _temp24 = function () {
+        var _temp66 = function () {
           if (type === "application/vnd.api+json") {
             return Promise.resolve(response.json()).then(function (_error) {
               var _error$errors;
 
               if (_error == null ? void 0 : (_error$errors = _error.errors) == null ? void 0 : _error$errors.length) {
-                _exit9 = 1;
-                return _this38.formatJsonApiErrors(_error.errors);
+                _exit14 = 1;
+                return _error.errors;
               }
             });
           }
@@ -1920,25 +2425,23 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
         // Construct error from response.
         // Check for type to ensure this is a JSON:API formatted error.
         // See https://jsonapi.org/format/#errors.
-        return _temp24 && _temp24.then ? _temp24.then(_temp25) : _temp25(_temp24);
+        return _temp66 && _temp66.then ? _temp66.then(_temp67) : _temp67(_temp66);
       };
 
-      var _exit10;
-
-      var _this38 = this;
+      var _exit15;
 
       var type = response.headers.get("content-type");
 
-      var _temp29 = function () {
+      var _temp71 = function () {
         if (type === "application/json") {
           return Promise.resolve(response.json()).then(function (error) {
-            _exit10 = 1;
+            _exit15 = 1;
             return error.message;
           });
         }
       }();
 
-      return Promise.resolve(_temp29 && _temp29.then ? _temp29.then(_temp28) : _temp28(_temp29));
+      return Promise.resolve(_temp71 && _temp71.then ? _temp71.then(_temp70) : _temp70(_temp71));
     } catch (e) {
       return Promise.reject(e);
     }
@@ -1957,9 +2460,86 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto._debug = function _debug(message) {
     !!this.debug && this.logger.debug(message);
+  } // Error handling.
+  // If throwErrors is enable, we show errors in the Next.js overlay.
+  // Otherwise we log the errors even if debugging is turned off.
+  // In production, errors are always logged never thrown.
+  ;
+
+  _proto.throwError = function throwError(error) {
+    if (!this.throwJsonApiErrors) {
+      return this.logger.error(error);
+    }
+
+    throw error;
+  };
+
+  _proto.handleJsonApiErrors = function handleJsonApiErrors(response) {
+    try {
+      var _this46 = this;
+
+      return Promise.resolve(function () {
+        if (!(response == null ? void 0 : response.ok)) {
+          return Promise.resolve(_this46.getErrorsFromResponse(response)).then(function (errors) {
+            throw new JsonApiErrors(errors, response.status);
+          });
+        }
+      }());
+    } catch (e) {
+      return Promise.reject(e);
+    }
   };
 
-  _createClass(Experiment_DrupalClient, [{
+  _proto.getAuthFromContextAndOptions = function getAuthFromContextAndOptions(context, options) {
+    var _context$previewData;
+
+    // If not in preview or withAuth is provided, use that.
+    if (!context.preview) {
+      // If we have provided an auth, use that.
+      if (typeof (options == null ? void 0 : options.withAuth) !== "undefined") {
+        return options.withAuth;
+      } // Otherwise we fallback to the global auth.
+
+
+      return this.withAuth;
+    } // If no plugin is provided, return.
+
+
+    var plugin = (_context$previewData = context.previewData) == null ? void 0 : _context$previewData["plugin"];
+
+    if (!plugin) {
+      return null;
+    }
+
+    var withAuth = this._auth;
+
+    if (plugin === "simple_oauth") {
+      var _context$previewData2;
+
+      // If we are using a client id and secret auth, pass the scope.
+      if (isClientIdSecretAuth(withAuth) && ((_context$previewData2 = context.previewData) == null ? void 0 : _context$previewData2["scope"])) {
+        var _context$previewData3;
+
+        withAuth = _extends({}, withAuth, {
+          scope: (_context$previewData3 = context.previewData) == null ? void 0 : _context$previewData3["scope"]
+        });
+      }
+    }
+
+    if (plugin === "jwt") {
+      var _context$previewData4;
+
+      var accessToken = (_context$previewData4 = context.previewData) == null ? void 0 : _context$previewData4["access_token"];
+
+      if (accessToken) {
+        return "Bearer " + accessToken;
+      }
+    }
+
+    return withAuth;
+  };
+
+  _createClass(DrupalClient, [{
     key: "apiPrefix",
     set: function set(apiPrefix) {
       this._apiPrefix = apiPrefix.charAt(0) === "/" ? apiPrefix : "/" + apiPrefix;
@@ -1971,7 +2551,15 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     key: "auth",
     set: function set(auth) {
       if (typeof auth === "object") {
-        if (!auth.clientId || !auth.clientSecret) {
+        if (isBasicAuth(auth)) {
+          if (!auth.username || !auth.password) {
+            throw new Error("'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth");
+          }
+        } else if (isAccessTokenAuth(auth)) {
+          if (!auth.access_token || !auth.token_type) {
+            throw new Error("'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth");
+          }
+        } else if (!auth.clientId || !auth.clientSecret) {
           throw new Error("'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth");
         }
 
@@ -1995,8 +2583,8 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     }
   }]);
 
-  return Experiment_DrupalClient;
+  return DrupalClient;
 }();
 
-export { DrupalPreview, Experiment_DrupalClient, PreviewHandler, buildUrl, deserialize, getAccessToken, getJsonApiIndex, getJsonApiPathForResourceType, getMenu, getPathsFromContext, getResource, getResourceByPath, getResourceCollection, getResourceCollectionFromContext, getResourceFromContext, getResourcePreviewUrl, getResourceTypeFromContext, getSearchIndex, getSearchIndexFromContext, getView, syncDrupalPreviewRoutes, translatePath, translatePathFromContext, useMenu };
+export { DrupalClient, DrupalPreview, JsonApiErrors, PreviewHandler, buildUrl, deserialize, getAccessToken, getJsonApiIndex, getJsonApiPathForResourceType, getMenu, getPathsFromContext, getResource, getResourceByPath, getResourceCollection, getResourceCollectionFromContext, getResourceFromContext, getResourcePreviewUrl, getResourceTypeFromContext, getSearchIndex, getSearchIndexFromContext, getView, syncDrupalPreviewRoutes, translatePath, translatePathFromContext, useMenu };
 //# sourceMappingURL=index.esm.js.map
diff --git a/node_modules/next-drupal/dist/index.esm.js.map b/node_modules/next-drupal/dist/index.esm.js.map
index 48b51ea..449ef7b 100644
--- a/node_modules/next-drupal/dist/index.esm.js.map
+++ b/node_modules/next-drupal/dist/index.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.esm.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  if (!context.locale && !resource?.default_langcode) {\n    return null\n  }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  Experiment_DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  GetResourcePreviewUrlOptions,\n  JsonApiWithCacheOptions,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nexport class Experiment_DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: Experiment_DrupalClientOptions[\"debug\"]\n\n  frontPage: Experiment_DrupalClientOptions[\"frontPage\"]\n\n  private serializer: Experiment_DrupalClientOptions[\"serializer\"]\n\n  private cache: Experiment_DrupalClientOptions[\"cache\"]\n\n  private logger: Experiment_DrupalClientOptions[\"logger\"]\n\n  private fetcher?: Experiment_DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: Experiment_DrupalClientOptions[\"headers\"]\n\n  private _auth?: Experiment_DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: Experiment_DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: Experiment_DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: Experiment_DrupalClientOptions[\"accessToken\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: Experiment_DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: Experiment_DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: Experiment_DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new Experiment_DrupalClient.\n   *\n   * const client = new Experiment_DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: Experiment_DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: Experiment_DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: Experiment_DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: Experiment_DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      // If a custom auth is provided, use that.\n      if (typeof this._auth === \"function\") {\n        this._debug(`Using custom auth.`)\n\n        init[\"headers\"][\"Authorization\"] = this._auth()\n      } else {\n        // Otherwise use the built-in client_credentials grant.\n        this._debug(`Using default auth (client_credentials).`)\n\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken()\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    const response = await fetch(input, init)\n\n    if (response?.ok) {\n      return response\n    }\n\n    const message = await this.formatErrorResponse(response)\n\n    // Only throw errors in development\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error(message)\n    } else {\n      if (this.debug) {\n        this.logger.error(message)\n      }\n\n      return null\n    }\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n    }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const previewData = context.previewData as { resourceVersion?: string }\n\n    const resource = await this.getResourceByPath<T>(path, {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    })\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          throw new Error(error.message)\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      throw new Error(this.formatJsonApiErrors(data.errors))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options.withAuth,\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    const response = await this.translatePath(path, {\n      withAuth: context.preview || options.withAuth,\n    })\n\n    return response\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      throw new Error(\n        `Failed to fetch JSON:API index at ${url.toString()} - ${error.message}`\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, secret, locale, defaultLocale } =\n      request.query\n\n    if (secret !== this.previewSecret) {\n      return response.status(401).json({\n        message: options?.errorMessages.secret || \"Invalid preview secret.\",\n      })\n    }\n\n    if (!slug) {\n      return response\n        .status(401)\n        .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n    }\n\n    let _options: GetResourcePreviewUrlOptions = {\n      isVersionable: !!resourceVersion,\n    }\n\n    if (locale && defaultLocale) {\n      // Fix for und locale.\n      const _locale = locale === \"und\" ? defaultLocale : locale\n\n      _options = {\n        ..._options,\n        locale: _locale as string,\n        defaultLocale: defaultLocale as string,\n      }\n    }\n\n    const entity = await this.getResourceByPath(slug as string, {\n      withAuth: true,\n      ..._options,\n    })\n\n    if (!entity || !entity?.path) {\n      throw new Error(\n        `The path attribute is missing for entity with slug ${slug}`\n      )\n    }\n\n    const url = entity?.default_langcode\n      ? entity.path.alias\n      : `/${entity.path.langcode}${entity.path.alias}`\n\n    if (!url) {\n      response\n        .status(404)\n        .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n    }\n\n    response.setPreviewData({\n      resourceVersion,\n    })\n\n    // Fix issue with cookie.\n    // See https://github.com/vercel/next.js/discussions/32238.\n    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n    if (this.forceIframeSameSiteCookie) {\n      const previous = response.getHeader(\"Set-Cookie\") as string[]\n      previous.forEach((cookie, index) => {\n        previous[index] = cookie.replace(\"SameSite=Lax\", \"SameSite=None;Secure\")\n      })\n      response.setHeader(`Set-Cookie`, previous)\n    }\n\n    response.writeHead(307, { Location: url })\n\n    return response.end()\n  }\n\n  async getMenu<T extends DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<{\n    id: string\n    results: T\n    meta: JsonApiResponse[\"meta\"]\n    links: JsonApiResponse[\"links\"]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(): Promise<AccessToken> {\n    if (this.accessToken) {\n      return this.accessToken\n    }\n\n    if (typeof this._auth !== \"object\") {\n      throw new Error(\n        \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n      )\n    }\n\n    if (!this._auth.clientId || !this._auth.clientSecret) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    if (this._token && Date.now() < this.tokenExpiresOn) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(\n      `${this._auth.clientId}:${this._auth.clientSecret}`\n    ).toString(\"base64\")\n\n    const response = await fetch(`${this.baseUrl}${this._auth.url}`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    })\n\n    if (!response?.ok) {\n      throw new Error(response?.statusText)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async formatErrorResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return this.formatJsonApiErrors(_error.errors)\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n}\n"],"names":["cache","NodeCache","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","CACHE_KEY","access_token","basic","Buffer","from","toString","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","response","ok","Error","statusText","json","result","set","expires_in","buildHeaders","accessToken","token","UNSTABLE_DRUPAL_ACCESS_TOKEN","getJsonApiIndex","locale","options","url","buildUrl","JSONAPI_PREFIX","getJsonApiPathForResourceType","type","index","links","href","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","path","params","URL","charAt","search","stringify","getPathFromContext","context","prefix","slug","Array","isArray","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","buildMenuTree","tree","length","children","filter","link","map","id","getResourceCollectionFromContext","getResourceCollection","undefined","apiPath","getPathsFromContext","types","Promise","all","locales","resources","buildPathsFromResources","paths","flat","flatMap","resource","alias","replace","split","getResource","uuid","getResourceByPath","isVersionable","indexOf","resourceVersion","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResourceFromContext","test","previewData","default_langcode","getResourcePreviewUrl","entity","langcode","PreviewHandler","request","query","secret","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","setPreviewData","writeHead","Location","DrupalPreview","translatePathFromContext","translatePath","getResourceTypeFromContext","jsonapi","resourceName","getSearchIndexFromContext","getSearchIndex","getView","viewId","displayId","results","meta","useMenu","router","useRouter","React","setData","error","setError","isLoading","setIsLoading","fetchMenuItems","logger","log","console","debug","warn","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","Experiment_DrupalClient","baseUrl","getStaticPathsFromContext","apiPrefix","serializer","frontPage","useDefaultResourceTypeEntry","defaultLogger","withAuth","fetcher","auth","previewSecret","forceIframeSameSiteCookie","_debug","input","init","formatErrorResponse","NODE_ENV","_headers","_auth","getEntryForResourceType","withCache","cacheKey","pathPrefix","preview","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","_locale","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","clientId","clientSecret","_token","Date","now","tokenExpiresOn","_error","title","_apiPrefix","value"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.esm.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/jsonapi-errors.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug)\n    ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n    : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  // if (!context.locale && !resource?.default_langcode) {\n  //   return null\n  // }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import { JsonApiError } from \"./types\"\n\nexport class JsonApiErrors extends Error {\n  errors: JsonApiError[] | string\n  statusCode: number\n\n  constructor(errors: JsonApiError[], statusCode: number) {\n    super()\n\n    this.errors = errors\n    this.statusCode = statusCode\n    this.message = JsonApiErrors.formatMessage(errors)\n  }\n\n  private static formatMessage(errors) {\n    if (typeof errors === \"string\") {\n      return errors\n    }\n\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  JsonApiWithCacheOptions,\n  JsonApiCreateResourceBody,\n  JsonApiUpdateResourceBody,\n  DrupalClientAuthUsernamePassword,\n  DrupalClientAuthAccessToken,\n  DrupalClientAuthClientIdSecret,\n  JsonApiCreateFileResourceBody,\n  DrupalView,\n  DrupalFile,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\nimport { JsonApiErrors } from \"./jsonapi-errors\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nfunction isBasicAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthUsernamePassword {\n  return (\n    (auth as DrupalClientAuthUsernamePassword)?.username !== undefined ||\n    (auth as DrupalClientAuthUsernamePassword)?.password !== undefined\n  )\n}\n\nfunction isAccessTokenAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthAccessToken {\n  return (auth as DrupalClientAuthAccessToken)?.access_token !== undefined\n}\n\nfunction isClientIdSecretAuth(\n  auth: DrupalClient[\"auth\"]\n): auth is DrupalClientAuthClientIdSecret {\n  return (\n    (auth as DrupalClientAuthClientIdSecret)?.clientId !== undefined ||\n    (auth as DrupalClientAuthClientIdSecret)?.clientSecret !== undefined\n  )\n}\n\nexport class DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: DrupalClientOptions[\"debug\"]\n\n  frontPage: DrupalClientOptions[\"frontPage\"]\n\n  private serializer: DrupalClientOptions[\"serializer\"]\n\n  private cache: DrupalClientOptions[\"cache\"]\n\n  private throwJsonApiErrors?: DrupalClientOptions[\"throwJsonApiErrors\"]\n\n  private logger: DrupalClientOptions[\"logger\"]\n\n  private fetcher?: DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: DrupalClientOptions[\"headers\"]\n\n  private _auth?: DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: DrupalClientOptions[\"accessToken\"]\n\n  private accessTokenScope?: DrupalClientOptions[\"accessTokenScope\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new DrupalClient.\n   *\n   * const client = new DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n      throwJsonApiErrors = true,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n    this.throwJsonApiErrors = throwJsonApiErrors\n\n    // Do not throw errors in production.\n    if (process.env.NODE_ENV === \"production\") {\n      this.throwJsonApiErrors = false\n    }\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (isBasicAuth(auth)) {\n        if (!auth.username || !auth.password) {\n          throw new Error(\n            `'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (isAccessTokenAuth(auth)) {\n        if (!auth.access_token || !auth.token_type) {\n          throw new Error(\n            `'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      credentials: \"include\",\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    // Using the auth set on the client.\n    // TODO: Abstract this to a re-usable.\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      if (init.withAuth === true) {\n        if (typeof this._auth === \"undefined\") {\n          throw new Error(\n            \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n          )\n        }\n\n        // By default, if withAuth is set to true, we use the auth configured\n        // in the client constructor.\n        if (typeof this._auth === \"function\") {\n          this._debug(`Using custom auth callback.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth()\n        } else if (typeof this._auth === \"string\") {\n          this._debug(`Using custom authorization header.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth\n        } else if (typeof this._auth === \"object\") {\n          this._debug(`Using custom auth credentials.`)\n\n          if (isBasicAuth(this._auth)) {\n            const basic = Buffer.from(\n              `${this._auth.username}:${this._auth.password}`\n            ).toString(\"base64\")\n\n            init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n          } else if (isClientIdSecretAuth(this._auth)) {\n            // Use the built-in client_credentials grant.\n            this._debug(`Using default auth (client_credentials).`)\n\n            // Fetch an access token and add it to the request.\n            // Access token can be fetched from cache or using a custom auth method.\n            const token = await this.getAccessToken(this._auth)\n            if (token) {\n              init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n            }\n          } else if (isAccessTokenAuth(this._auth)) {\n            init[\"headers\"][\n              \"Authorization\"\n            ] = `${this._auth.token_type} ${this._auth.access_token}`\n          }\n        }\n      } else if (typeof init.withAuth === \"string\") {\n        this._debug(`Using custom authorization header.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth\n      } else if (typeof init.withAuth === \"function\") {\n        this._debug(`Using custom authorization callback.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth()\n      } else if (isBasicAuth(init.withAuth)) {\n        this._debug(`Using basic authorization header`)\n\n        const basic = Buffer.from(\n          `${init.withAuth.username}:${init.withAuth.password}`\n        ).toString(\"base64\")\n\n        init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n      } else if (isClientIdSecretAuth(init.withAuth)) {\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken(init.withAuth)\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      } else if (isAccessTokenAuth(init.withAuth)) {\n        init[\"headers\"][\n          \"Authorization\"\n        ] = `${init.withAuth.token_type} ${init.withAuth.access_token}`\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    return await fetch(input, init)\n  }\n\n  async createResource<T extends JsonApiResource>(\n    type: string,\n    body: JsonApiCreateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, options?.params)\n\n    this._debug(`Creating resource of type ${type}.`)\n    this._debug(url.toString())\n\n    // Add type to body.\n    body.data.type = type\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async createFileResource<T = DrupalFile>(\n    type: string,\n    body: JsonApiCreateFileResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const hostType = body?.data?.attributes?.type\n\n    const apiPath = await this.getEntryForResourceType(\n      hostType,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(\n      `${apiPath}/${body.data.attributes.field}`,\n      options?.params\n    )\n\n    this._debug(`Creating file resource for media of type ${type}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Accept: \"application/vnd.api+json\",\n        \"Content-Disposition\": `file; filename=\"${body.data.attributes.filename}\"`,\n      },\n      body: body.data.attributes.file,\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async updateResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    body: JsonApiUpdateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Updating resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    // Update body.\n    body.data.type = type\n    body.data.id = uuid\n\n    const response = await this.fetch(url.toString(), {\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async deleteResource(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<boolean> {\n    options = {\n      withAuth: true,\n      params: {},\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Deleting resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"DELETE\",\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    return response.status === 204\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    const previewData = context.previewData as {\n      resourceVersion?: string\n    }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n      params: {},\n      ...options,\n    }\n\n    const _options = {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    }\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n\n      // Given we already have the path info, we can skip subrequests and just make a simple\n      // request to the Drupal site to get the entity.\n      if (input.entity?.uuid) {\n        return await this.getResource<T>(type, input.entity.uuid, _options)\n      }\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const resource = await this.getResourceByPath<T>(path, _options)\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          this.throwError(new Error(error.message))\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      this.throwError(new Error(this.formatJsonApiErrors(data.errors)))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    this._debug(`Fetching resource collection of type ${type}`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      // Do not throw errors here.\n      // Otherwise next.js will catch error and throw a 500.\n      // We want a 404.\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    return await this.translatePath(path, {\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug)\n      ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n      : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      this.throwError(\n        new Error(\n          `Failed to fetch JSON:API index at ${url.toString()} - ${\n            error.message\n          }`\n        )\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, plugin } = request.query\n\n    try {\n      // Always clear preview data to handle different scopes.\n      response.clearPreviewData()\n\n      // Validate the preview url.\n      const validateUrl = this.buildUrl(\"/next/preview-url\")\n      const result = await this.fetch(validateUrl.toString(), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(request.query),\n      })\n\n      if (!result.ok) {\n        response.statusCode = result.status\n\n        return response.json(await result.json())\n      }\n\n      const validationPayload = await result.json()\n\n      response.setPreviewData({\n        resourceVersion,\n        plugin,\n        ...validationPayload,\n      })\n\n      // Fix issue with cookie.\n      // See https://github.com/vercel/next.js/discussions/32238.\n      // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n      if (this.forceIframeSameSiteCookie) {\n        const previous = response.getHeader(\"Set-Cookie\") as string[]\n        previous.forEach((cookie, index) => {\n          previous[index] = cookie.replace(\n            \"SameSite=Lax\",\n            \"SameSite=None;Secure\"\n          )\n        })\n        response.setHeader(`Set-Cookie`, previous)\n      }\n\n      // We can safely redirect to the slug since this has been validated on the server.\n      response.writeHead(307, { Location: slug })\n\n      return response.end()\n    } catch (error) {\n      return response.status(422).end()\n    }\n  }\n\n  async getMenu<T = DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T = JsonApiResource>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<DrupalView<T>> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(\n    opts?: DrupalClientAuthClientIdSecret\n  ): Promise<AccessToken> {\n    if (this.accessToken && this.accessTokenScope === opts?.scope) {\n      return this.accessToken\n    }\n\n    if (!opts?.clientId || !opts?.clientSecret) {\n      if (typeof this._auth === \"undefined\") {\n        throw new Error(\n          \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n        )\n      }\n    }\n\n    if (\n      !isClientIdSecretAuth(this._auth) ||\n      (opts && !isClientIdSecretAuth(opts))\n    ) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    const clientId = opts?.clientId || this._auth.clientId\n    const clientSecret = opts?.clientSecret || this._auth.clientSecret\n    const url = this.buildUrl(opts?.url || this._auth.url || DEFAULT_AUTH_URL)\n\n    if (\n      this.accessTokenScope === opts?.scope &&\n      this._token &&\n      Date.now() < this.tokenExpiresOn\n    ) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString(\"base64\")\n\n    let body = `grant_type=client_credentials`\n\n    if (opts?.scope) {\n      body = `${body}&scope=${opts.scope}`\n\n      this._debug(`Using scope: ${opts.scope}`)\n    }\n\n    const response = await fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    this.accessTokenScope = opts?.scope\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async getErrorsFromResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return _error.errors\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n\n  // Error handling.\n  // If throwErrors is enable, we show errors in the Next.js overlay.\n  // Otherwise we log the errors even if debugging is turned off.\n  // In production, errors are always logged never thrown.\n  private throwError(error: Error) {\n    if (!this.throwJsonApiErrors) {\n      return this.logger.error(error)\n    }\n\n    throw error\n  }\n\n  private async handleJsonApiErrors(response: Response) {\n    if (!response?.ok) {\n      const errors = await this.getErrorsFromResponse(response)\n      throw new JsonApiErrors(errors, response.status)\n    }\n  }\n\n  private getAuthFromContextAndOptions(\n    context: GetStaticPropsContext,\n    options: JsonApiWithAuthOptions\n  ) {\n    // If not in preview or withAuth is provided, use that.\n    if (!context.preview) {\n      // If we have provided an auth, use that.\n      if (typeof options?.withAuth !== \"undefined\") {\n        return options.withAuth\n      }\n\n      // Otherwise we fallback to the global auth.\n      return this.withAuth\n    }\n\n    // If no plugin is provided, return.\n    const plugin = context.previewData?.[\"plugin\"]\n    if (!plugin) {\n      return null\n    }\n\n    let withAuth = this._auth\n\n    if (plugin === \"simple_oauth\") {\n      // If we are using a client id and secret auth, pass the scope.\n      if (isClientIdSecretAuth(withAuth) && context.previewData?.[\"scope\"]) {\n        withAuth = {\n          ...withAuth,\n          scope: context.previewData?.[\"scope\"],\n        }\n      }\n    }\n\n    if (plugin === \"jwt\") {\n      const accessToken = context.previewData?.[\"access_token\"]\n\n      if (accessToken) {\n        return `Bearer ${accessToken}`\n      }\n    }\n\n    return withAuth\n  }\n}\n"],"names":["cache","NodeCache","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","CACHE_KEY","access_token","basic","Buffer","from","toString","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","response","ok","Error","statusText","json","result","set","expires_in","buildHeaders","accessToken","token","UNSTABLE_DRUPAL_ACCESS_TOKEN","getJsonApiIndex","locale","options","url","buildUrl","JSONAPI_PREFIX","getJsonApiPathForResourceType","type","index","links","href","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","path","params","URL","charAt","search","stringify","getPathFromContext","context","prefix","slug","Array","isArray","map","s","encodeURIComponent","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","buildMenuTree","tree","length","children","filter","link","id","getResourceCollectionFromContext","getResourceCollection","undefined","apiPath","getPathsFromContext","types","Promise","all","locales","resources","buildPathsFromResources","paths","flat","flatMap","resource","alias","replace","split","getResource","uuid","getResourceByPath","isVersionable","indexOf","resourceVersion","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResourceFromContext","test","previewData","getResourcePreviewUrl","entity","default_langcode","langcode","PreviewHandler","request","query","secret","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","setPreviewData","writeHead","Location","DrupalPreview","translatePathFromContext","translatePath","getResourceTypeFromContext","jsonapi","resourceName","getSearchIndexFromContext","getSearchIndex","getView","viewId","displayId","results","meta","useMenu","router","useRouter","React","setData","error","setError","isLoading","setIsLoading","fetchMenuItems","logger","log","console","debug","warn","JsonApiErrors","statusCode","formatMessage","title","recover","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","isBasicAuth","auth","username","password","isAccessTokenAuth","isClientIdSecretAuth","clientId","clientSecret","DrupalClient","baseUrl","getStaticPathsFromContext","apiPrefix","serializer","frontPage","useDefaultResourceTypeEntry","defaultLogger","withAuth","fetcher","previewSecret","forceIframeSameSiteCookie","throwJsonApiErrors","NODE_ENV","_debug","input","init","_headers","_auth","token_type","createResource","getEntryForResourceType","handleJsonApiErrors","createFileResource","hostType","attributes","field","filename","file","updateResource","deleteResource","withCache","cacheKey","pathPrefix","getAuthFromContextAndOptions","throwError","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","preview","plugin","clearPreviewData","validateUrl","validationPayload","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","opts","accessTokenScope","scope","_token","Date","now","tokenExpiresOn","getErrorsFromResponse","_error","_apiPrefix","value"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-drupal/dist/index.js b/node_modules/next-drupal/dist/index.js
index e0819f4..a1b5a39 100644
--- a/node_modules/next-drupal/dist/index.js
+++ b/node_modules/next-drupal/dist/index.js
@@ -78,6 +78,96 @@ function _extends() {
   return _extends.apply(this, arguments);
 }
 
+function _inheritsLoose(subClass, superClass) {
+  subClass.prototype = Object.create(superClass.prototype);
+  subClass.prototype.constructor = subClass;
+  subClass.__proto__ = superClass;
+}
+
+function _getPrototypeOf(o) {
+  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
+    return o.__proto__ || Object.getPrototypeOf(o);
+  };
+  return _getPrototypeOf(o);
+}
+
+function _setPrototypeOf(o, p) {
+  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
+    o.__proto__ = p;
+    return o;
+  };
+
+  return _setPrototypeOf(o, p);
+}
+
+function _isNativeReflectConstruct() {
+  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
+  if (Reflect.construct.sham) return false;
+  if (typeof Proxy === "function") return true;
+
+  try {
+    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
+    return true;
+  } catch (e) {
+    return false;
+  }
+}
+
+function _construct(Parent, args, Class) {
+  if (_isNativeReflectConstruct()) {
+    _construct = Reflect.construct;
+  } else {
+    _construct = function _construct(Parent, args, Class) {
+      var a = [null];
+      a.push.apply(a, args);
+      var Constructor = Function.bind.apply(Parent, a);
+      var instance = new Constructor();
+      if (Class) _setPrototypeOf(instance, Class.prototype);
+      return instance;
+    };
+  }
+
+  return _construct.apply(null, arguments);
+}
+
+function _isNativeFunction(fn) {
+  return Function.toString.call(fn).indexOf("[native code]") !== -1;
+}
+
+function _wrapNativeSuper(Class) {
+  var _cache = typeof Map === "function" ? new Map() : undefined;
+
+  _wrapNativeSuper = function _wrapNativeSuper(Class) {
+    if (Class === null || !_isNativeFunction(Class)) return Class;
+
+    if (typeof Class !== "function") {
+      throw new TypeError("Super expression must either be null or a function");
+    }
+
+    if (typeof _cache !== "undefined") {
+      if (_cache.has(Class)) return _cache.get(Class);
+
+      _cache.set(Class, Wrapper);
+    }
+
+    function Wrapper() {
+      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
+    }
+
+    Wrapper.prototype = Object.create(Class.prototype, {
+      constructor: {
+        value: Wrapper,
+        enumerable: false,
+        writable: true,
+        configurable: true
+      }
+    });
+    return _setPrototypeOf(Wrapper, Class);
+  };
+
+  return _wrapNativeSuper(Class);
+}
+
 function _objectWithoutPropertiesLoose(source, excluded) {
   if (source == null) return {};
   var target = {};
@@ -186,7 +276,9 @@ function getPathFromContext(context, prefix) {
   }
 
   var slug = context.params.slug;
-  slug = Array.isArray(slug) ? slug.join("/") : slug; // Handle locale.
+  slug = Array.isArray(slug) ? slug.map(function (s) {
+    return encodeURIComponent(s);
+  }).join("/") : slug; // Handle locale.
 
   if (context.locale && context.locale !== context.defaultLocale) {
     slug = "/" + context.locale + "/" + slug;
@@ -574,14 +666,15 @@ var getResourceFromContext = function getResourceFromContext(type, context, opti
       params: _extends({
         resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
       }, (_options2 = options) == null ? void 0 : _options2.params)
-    })).then(function (resource) {
-      return !context.locale && !(resource == null ? void 0 : resource.default_langcode) ? null : resource;
-    }); // If no locale is passed, skip entity if not default_langcode.
+    })); // If no locale is passed, skip entity if not default_langcode.
     // This happens because decoupled_router will still translate the path
     // to a resource.
     // TODO: Figure out if we want this behavior.
     // For now this causes a bug where a non-i18n sites builds (ISR) pages for
     // localized pages.
+    // if (!context.locale && !resource?.default_langcode) {
+    //   return null
+    // }
   } catch (e) {
     return Promise.reject(e);
   }
@@ -881,6 +974,37 @@ var logger = {
   }
 };
 
+var JsonApiErrors = /*#__PURE__*/function (_Error) {
+  _inheritsLoose(JsonApiErrors, _Error);
+
+  function JsonApiErrors(errors, statusCode) {
+    var _this;
+
+    _this = _Error.call(this) || this;
+    _this.errors = errors;
+    _this.statusCode = statusCode;
+    _this.message = JsonApiErrors.formatMessage(errors);
+    return _this;
+  }
+
+  JsonApiErrors.formatMessage = function formatMessage(errors) {
+    if (typeof errors === "string") {
+      return errors;
+    }
+
+    var error = errors[0];
+    var message = error.status + " " + error.title;
+
+    if (error.detail) {
+      message += "\n" + error.detail;
+    }
+
+    return message;
+  };
+
+  return JsonApiErrors;
+}( /*#__PURE__*/_wrapNativeSuper(Error));
+
 function _catch$2(body, recover) {
   try {
     var result = body();
@@ -905,16 +1029,29 @@ var DEFAULT_HEADERS = {
   "Content-Type": "application/vnd.api+json",
   Accept: "application/vnd.api+json"
 };
-var Experiment_DrupalClient = /*#__PURE__*/function () {
+
+function isBasicAuth(auth) {
+  return (auth == null ? void 0 : auth.username) !== undefined || (auth == null ? void 0 : auth.password) !== undefined;
+}
+
+function isAccessTokenAuth(auth) {
+  return (auth == null ? void 0 : auth.access_token) !== undefined;
+}
+
+function isClientIdSecretAuth(auth) {
+  return (auth == null ? void 0 : auth.clientId) !== undefined || (auth == null ? void 0 : auth.clientSecret) !== undefined;
+}
+
+var DrupalClient = /*#__PURE__*/function () {
   /**
-   * Instantiates a new Experiment_DrupalClient.
+   * Instantiates a new DrupalClient.
    *
-   * const client = new Experiment_DrupalClient(baseUrl)
+   * const client = new DrupalClient(baseUrl)
    *
    * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.
    * @param {options} options Options for the client. See Experiment_DrupalClientOptions.
    */
-  function Experiment_DrupalClient(baseUrl, options) {
+  function DrupalClient(baseUrl, options) {
     if (options === void 0) {
       options = {};
     }
@@ -949,7 +1086,9 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
         previewSecret = _options2.previewSecret,
         accessToken = _options2.accessToken,
         _options2$forceIframe = _options2.forceIframeSameSiteCookie,
-        forceIframeSameSiteCookie = _options2$forceIframe === void 0 ? false : _options2$forceIframe;
+        forceIframeSameSiteCookie = _options2$forceIframe === void 0 ? false : _options2$forceIframe,
+        _options2$throwJsonAp = _options2.throwJsonApiErrors,
+        throwJsonApiErrors = _options2$throwJsonAp === void 0 ? true : _options2$throwJsonAp;
     this.baseUrl = baseUrl;
     this.apiPrefix = apiPrefix;
     this.serializer = serializer;
@@ -965,11 +1104,16 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     this.cache = cache;
     this.accessToken = accessToken;
     this.forceIframeSameSiteCookie = forceIframeSameSiteCookie;
+    this.throwJsonApiErrors = throwJsonApiErrors; // Do not throw errors in production.
+
+    if (process.env.NODE_ENV === "production") {
+      this.throwJsonApiErrors = false;
+    }
 
     this._debug("Debug mode is on.");
   }
 
-  var _proto = Experiment_DrupalClient.prototype;
+  var _proto = DrupalClient.prototype;
 
   /* eslint-disable @typescript-eslint/no-explicit-any */
   _proto.fetch = function (_fetch) {
@@ -986,143 +1130,422 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     try {
       var _init;
 
-      var _temp6 = function _temp6() {
-        var _exit;
+      var _temp14 = function _temp14(_result2) {
+        var _exit2;
+
+        if (_exit3) return _result2;
 
-        function _temp3(_result) {
-          if (_exit) return _result;
+        function _temp11(_result3) {
+          if (_exit2) return _result3;
 
           _this2._debug("Using default fetch (polyfilled by Next.js).");
 
-          return Promise.resolve(fetch(input, init)).then(function (response) {
-            return (response == null ? void 0 : response.ok) ? response : Promise.resolve(_this2.formatErrorResponse(response)).then(function (message) {
-              if (process.env.NODE_ENV !== "production") {
-                throw new Error(message);
-              } else {
-                if (_this2.debug) {
-                  _this2.logger.error(message);
-                }
-
-                return null;
-              }
-            });
-          });
+          return Promise.resolve(fetch(input, init));
         }
 
-        var _temp2 = function () {
+        var _temp10 = function () {
           if (_this2.fetcher) {
             _this2._debug("Using custom fetcher.");
 
-            _exit = 1;
+            _exit2 = 1;
             return Promise.resolve(_this2.fetcher(input, init));
           }
         }();
 
-        return _temp2 && _temp2.then ? _temp2.then(_temp3) : _temp3(_temp2);
+        return _temp10 && _temp10.then ? _temp10.then(_temp11) : _temp11(_temp10);
       };
 
+      var _exit3;
+
       var _this2 = this;
 
       init = _extends({}, init, {
+        credentials: "include",
         headers: _extends({}, _this2._headers, (_init = init) == null ? void 0 : _init.headers)
-      });
+      }); // Using the auth set on the client.
+      // TODO: Abstract this to a re-usable.
 
-      var _temp7 = function () {
+      var _temp15 = function () {
         var _init2;
 
         if ((_init2 = init) == null ? void 0 : _init2.withAuth) {
-          _this2._debug("Using authenticated request."); // If a custom auth is provided, use that.
-
-
-          var _temp8 = function () {
-            if (typeof _this2._auth === "function") {
-              _this2._debug("Using custom auth.");
+          _this2._debug("Using authenticated request.");
+
+          return function () {
+            if (init.withAuth === true) {
+              if (typeof _this2._auth === "undefined") {
+                throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+              } // By default, if withAuth is set to true, we use the auth configured
+              // in the client constructor.
+
+
+              var _temp16 = function () {
+                if (typeof _this2._auth === "function") {
+                  _this2._debug("Using custom auth callback.");
+
+                  init["headers"]["Authorization"] = _this2._auth();
+                } else {
+                  var _temp17 = function () {
+                    if (typeof _this2._auth === "string") {
+                      _this2._debug("Using custom authorization header.");
+
+                      init["headers"]["Authorization"] = _this2._auth;
+                    } else {
+                      var _temp18 = function () {
+                        if (typeof _this2._auth === "object") {
+                          _this2._debug("Using custom auth credentials.");
+
+                          var _temp19 = function () {
+                            if (isBasicAuth(_this2._auth)) {
+                              var basic = Buffer.from(_this2._auth.username + ":" + _this2._auth.password).toString("base64");
+                              init["headers"]["Authorization"] = "Basic " + basic;
+                            } else {
+                              var _temp20 = function () {
+                                if (isClientIdSecretAuth(_this2._auth)) {
+                                  // Use the built-in client_credentials grant.
+                                  _this2._debug("Using default auth (client_credentials)."); // Fetch an access token and add it to the request.
+                                  // Access token can be fetched from cache or using a custom auth method.
+
+
+                                  return Promise.resolve(_this2.getAccessToken(_this2._auth)).then(function (token) {
+                                    if (token) {
+                                      init["headers"]["Authorization"] = "Bearer " + token.access_token;
+                                    }
+                                  });
+                                } else if (isAccessTokenAuth(_this2._auth)) {
+                                  init["headers"]["Authorization"] = _this2._auth.token_type + " " + _this2._auth.access_token;
+                                }
+                              }();
+
+                              if (_temp20 && _temp20.then) return _temp20.then(function () {});
+                            }
+                          }();
+
+                          if (_temp19 && _temp19.then) return _temp19.then(function () {});
+                        }
+                      }();
+
+                      if (_temp18 && _temp18.then) return _temp18.then(function () {});
+                    }
+                  }();
+
+                  if (_temp17 && _temp17.then) return _temp17.then(function () {});
+                }
+              }();
 
-              init["headers"]["Authorization"] = _this2._auth();
+              if (_temp16 && _temp16.then) return _temp16.then(function () {});
             } else {
-              // Otherwise use the built-in client_credentials grant.
-              _this2._debug("Using default auth (client_credentials)."); // Fetch an access token and add it to the request.
-              // Access token can be fetched from cache or using a custom auth method.
-
-
-              return Promise.resolve(_this2.getAccessToken()).then(function (token) {
-                if (token) {
-                  init["headers"]["Authorization"] = "Bearer " + token.access_token;
+              var _temp21 = function () {
+                if (typeof init.withAuth === "string") {
+                  _this2._debug("Using custom authorization header.");
+
+                  init["headers"]["Authorization"] = init.withAuth;
+                } else {
+                  var _temp22 = function () {
+                    if (typeof init.withAuth === "function") {
+                      _this2._debug("Using custom authorization callback.");
+
+                      init["headers"]["Authorization"] = init.withAuth();
+                    } else {
+                      var _temp23 = function () {
+                        if (isBasicAuth(init.withAuth)) {
+                          _this2._debug("Using basic authorization header");
+
+                          var basic = Buffer.from(init.withAuth.username + ":" + init.withAuth.password).toString("base64");
+                          init["headers"]["Authorization"] = "Basic " + basic;
+                        } else {
+                          var _temp24 = function () {
+                            if (isClientIdSecretAuth(init.withAuth)) {
+                              // Fetch an access token and add it to the request.
+                              // Access token can be fetched from cache or using a custom auth method.
+                              return Promise.resolve(_this2.getAccessToken(init.withAuth)).then(function (token) {
+                                if (token) {
+                                  init["headers"]["Authorization"] = "Bearer " + token.access_token;
+                                }
+                              });
+                            } else if (isAccessTokenAuth(init.withAuth)) {
+                              init["headers"]["Authorization"] = init.withAuth.token_type + " " + init.withAuth.access_token;
+                            }
+                          }();
+
+                          if (_temp24 && _temp24.then) return _temp24.then(function () {});
+                        }
+                      }();
+
+                      if (_temp23 && _temp23.then) return _temp23.then(function () {});
+                    }
+                  }();
+
+                  if (_temp22 && _temp22.then) return _temp22.then(function () {});
                 }
-              });
+              }();
+
+              if (_temp21 && _temp21.then) return _temp21.then(function () {});
             }
           }();
-
-          if (_temp8 && _temp8.then) return _temp8.then(function () {});
         }
       }();
 
-      return Promise.resolve(_temp7 && _temp7.then ? _temp7.then(_temp6) : _temp6(_temp7));
+      return Promise.resolve(_temp15 && _temp15.then ? _temp15.then(_temp14) : _temp14(_temp15));
     } catch (e) {
       return Promise.reject(e);
     }
   });
 
+  _proto.createResource = function createResource(type, body, options) {
+    try {
+      var _options3, _options4;
+
+      var _this4 = this;
+
+      options = _extends({
+        deserialize: true,
+        withAuth: true
+      }, options);
+      return Promise.resolve(_this4.getEntryForResourceType(type, ((_options3 = options) == null ? void 0 : _options3.locale) !== ((_options4 = options) == null ? void 0 : _options4.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options5;
+
+        var url = _this4.buildUrl(apiPath, (_options5 = options) == null ? void 0 : _options5.params);
+
+        _this4._debug("Creating resource of type " + type + ".");
+
+        _this4._debug(url.toString()); // Add type to body.
+
+
+        body.data.type = type;
+        return Promise.resolve(_this4.fetch(url.toString(), {
+          method: "POST",
+          body: JSON.stringify(body),
+          withAuth: options.withAuth
+        })).then(function (response) {
+          function _temp26() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this4.deserialize(json) : json;
+            });
+          }
+
+          var _temp25 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this4.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp25 && _temp25.then ? _temp25.then(_temp26) : _temp26(_temp25);
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  _proto.createFileResource = function createFileResource(type, body, options) {
+    try {
+      var _body$data, _body$data$attributes, _options6, _options7;
+
+      var _this6 = this;
+
+      options = _extends({
+        deserialize: true,
+        withAuth: true
+      }, options);
+      var hostType = body == null ? void 0 : (_body$data = body.data) == null ? void 0 : (_body$data$attributes = _body$data.attributes) == null ? void 0 : _body$data$attributes.type;
+      return Promise.resolve(_this6.getEntryForResourceType(hostType, ((_options6 = options) == null ? void 0 : _options6.locale) !== ((_options7 = options) == null ? void 0 : _options7.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options8;
+
+        var url = _this6.buildUrl(apiPath + "/" + body.data.attributes.field, (_options8 = options) == null ? void 0 : _options8.params);
+
+        _this6._debug("Creating file resource for media of type " + type + ".");
+
+        _this6._debug(url.toString());
+
+        return Promise.resolve(_this6.fetch(url.toString(), {
+          method: "POST",
+          headers: {
+            "Content-Type": "application/octet-stream",
+            Accept: "application/vnd.api+json",
+            "Content-Disposition": "file; filename=\"" + body.data.attributes.filename + "\""
+          },
+          body: body.data.attributes.file,
+          withAuth: options.withAuth
+        })).then(function (response) {
+          function _temp28() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this6.deserialize(json) : json;
+            });
+          }
+
+          var _temp27 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this6.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp27 && _temp27.then ? _temp27.then(_temp28) : _temp28(_temp27);
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  _proto.updateResource = function updateResource(type, uuid, body, options) {
+    try {
+      var _options9, _options10;
+
+      var _this8 = this;
+
+      options = _extends({
+        deserialize: true,
+        withAuth: true
+      }, options);
+      return Promise.resolve(_this8.getEntryForResourceType(type, ((_options9 = options) == null ? void 0 : _options9.locale) !== ((_options10 = options) == null ? void 0 : _options10.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options11;
+
+        var url = _this8.buildUrl(apiPath + "/" + uuid, (_options11 = options) == null ? void 0 : _options11.params);
+
+        _this8._debug("Updating resource of type " + type + " with id " + uuid + ".");
+
+        _this8._debug(url.toString()); // Update body.
+
+
+        body.data.type = type;
+        body.data.id = uuid;
+        return Promise.resolve(_this8.fetch(url.toString(), {
+          method: "PATCH",
+          body: JSON.stringify(body),
+          withAuth: options.withAuth
+        })).then(function (response) {
+          function _temp30() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this8.deserialize(json) : json;
+            });
+          }
+
+          var _temp29 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this8.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp29 && _temp29.then ? _temp29.then(_temp30) : _temp30(_temp29);
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  _proto.deleteResource = function deleteResource(type, uuid, options) {
+    try {
+      var _options12, _options13;
+
+      var _this10 = this;
+
+      options = _extends({
+        withAuth: true,
+        params: {}
+      }, options);
+      return Promise.resolve(_this10.getEntryForResourceType(type, ((_options12 = options) == null ? void 0 : _options12.locale) !== ((_options13 = options) == null ? void 0 : _options13.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options14;
+
+        var url = _this10.buildUrl(apiPath + "/" + uuid, (_options14 = options) == null ? void 0 : _options14.params);
+
+        _this10._debug("Deleting resource of type " + type + " with id " + uuid + ".");
+
+        _this10._debug(url.toString());
+
+        return Promise.resolve(_this10.fetch(url.toString(), {
+          method: "DELETE",
+          withAuth: options.withAuth
+        })).then(function (response) {
+          function _temp32() {
+            return response.status === 204;
+          }
+
+          var _temp31 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this10.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp31 && _temp31.then ? _temp31.then(_temp32) : _temp32(_temp31);
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
   _proto.getResource = function getResource(type, uuid, options) {
     try {
-      var _temp13 = function _temp13(_result2) {
-        var _options3, _options4;
+      var _temp39 = function _temp39(_result4) {
+        var _options15, _options16;
 
-        return _exit3 ? _result2 : Promise.resolve(_this4.getEntryForResourceType(type, ((_options3 = options) == null ? void 0 : _options3.locale) !== ((_options4 = options) == null ? void 0 : _options4.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
-          var _options5;
+        return _exit5 ? _result4 : Promise.resolve(_this12.getEntryForResourceType(type, ((_options15 = options) == null ? void 0 : _options15.locale) !== ((_options16 = options) == null ? void 0 : _options16.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+          var _options17;
 
-          var url = _this4.buildUrl(apiPath + "/" + uuid, (_options5 = options) == null ? void 0 : _options5.params);
+          var url = _this12.buildUrl(apiPath + "/" + uuid, (_options17 = options) == null ? void 0 : _options17.params);
 
-          _this4._debug("Fetching resource " + type + " with id " + uuid + ".");
+          _this12._debug("Fetching resource " + type + " with id " + uuid + ".");
 
-          _this4._debug(url.toString());
+          _this12._debug(url.toString());
 
-          return Promise.resolve(_this4.fetch(url.toString(), {
+          return Promise.resolve(_this12.fetch(url.toString(), {
             withAuth: options.withAuth
           })).then(function (response) {
-            return Promise.resolve(response.json()).then(function (json) {
-              function _temp10() {
-                return options.deserialize ? _this4.deserialize(json) : json;
-              }
-
-              var _temp9 = function () {
-                if (options.withCache) {
-                  return Promise.resolve(_this4.cache.set(options.cacheKey, JSON.stringify(json))).then(function () {});
+            function _temp36() {
+              return Promise.resolve(response.json()).then(function (json) {
+                function _temp34() {
+                  return options.deserialize ? _this12.deserialize(json) : json;
                 }
-              }();
 
-              return _temp9 && _temp9.then ? _temp9.then(_temp10) : _temp10(_temp9);
-            });
+                var _temp33 = function () {
+                  if (options.withCache) {
+                    return Promise.resolve(_this12.cache.set(options.cacheKey, JSON.stringify(json))).then(function () {});
+                  }
+                }();
+
+                return _temp33 && _temp33.then ? _temp33.then(_temp34) : _temp34(_temp33);
+              });
+            }
+
+            var _temp35 = function () {
+              if (!(response == null ? void 0 : response.ok)) {
+                return Promise.resolve(_this12.handleJsonApiErrors(response)).then(function () {});
+              }
+            }();
+
+            return _temp35 && _temp35.then ? _temp35.then(_temp36) : _temp36(_temp35);
           });
         });
       };
 
-      var _exit3;
+      var _exit5;
 
-      var _this4 = this;
+      var _this12 = this;
 
       options = _extends({
         deserialize: true,
-        withAuth: _this4.withAuth,
+        withAuth: _this12.withAuth,
         withCache: false,
         params: {}
       }, options);
 
-      var _temp14 = function () {
+      var _temp40 = function () {
         if (options.withCache) {
-          return Promise.resolve(_this4.cache.get(options.cacheKey)).then(function (cached) {
+          return Promise.resolve(_this12.cache.get(options.cacheKey)).then(function (cached) {
             if (cached) {
-              _this4._debug("Returning cached resource " + type + " with id " + uuid);
+              _this12._debug("Returning cached resource " + type + " with id " + uuid);
 
               var json = JSON.parse(cached);
-              _exit3 = 1;
-              return options.deserialize ? _this4.deserialize(json) : json;
+              _exit5 = 1;
+              return options.deserialize ? _this12.deserialize(json) : json;
             }
           });
         }
       }();
 
-      return Promise.resolve(_temp14 && _temp14.then ? _temp14.then(_temp13) : _temp13(_temp14));
+      return Promise.resolve(_temp40 && _temp40.then ? _temp40.then(_temp39) : _temp39(_temp40));
     } catch (e) {
       return Promise.reject(e);
     }
@@ -1130,58 +1553,81 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getResourceFromContext = function getResourceFromContext(input, context, options) {
     try {
-      var _options6, _options7, _options8;
+      var _options19, _options20;
 
-      var _this6 = this;
+      var _temp43 = function _temp43(_result6) {
+        var _options18;
 
-      var type = typeof input === "string" ? input : input.jsonapi.resourceName;
+        if (_exit7) return _result6;
 
-      if (typeof input !== "string") {
-        // Fix for subrequests and translation.
-        // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
-        // @shadcn, note to self:
-        // Given an entity at /example with no translation.
-        // When we try to translate /es/example, decoupled router will properly
-        // translate to the untranslated version and set the locale to es.
-        // However a subrequests to /es/subrequests for decoupled router will fail.
-        if (context.locale && input.entity.langcode !== context.locale) {
-          context.locale = input.entity.langcode;
-        }
-      }
+        var path = _this14.getPathFromContext(context, {
+          pathPrefix: (_options18 = options) == null ? void 0 : _options18.pathPrefix
+        });
+
+        return Promise.resolve(_this14.getResourceByPath(path, _options)); // If no locale is passed, skip entity if not default_langcode.
+        // This happens because decoupled_router will still translate the path
+        // to a resource.
+        // TODO: Figure out if we want this behavior.
+        // For now this causes a bug where a non-i18n sites builds (ISR) pages for
+        // localized pages.
+        // if (!context.locale && !resource?.default_langcode) {
+        //   return null
+        // }
+      };
 
+      var _exit7;
+
+      var _this14 = this;
+
+      var type = typeof input === "string" ? input : input.jsonapi.resourceName;
+      var previewData = context.previewData;
       options = _extends({
         // Add support for revisions for node by default.
         // TODO: Make this required before stable?
         isVersionable: /^node--/.test(type),
         deserialize: true,
         pathPrefix: "/",
-        withAuth: _this6.withAuth,
+        withAuth: _this14.getAuthFromContextAndOptions(context, options),
         params: {}
       }, options);
-
-      var path = _this6.getPathFromContext(context, {
-        pathPrefix: (_options6 = options) == null ? void 0 : _options6.pathPrefix
-      });
-
-      var previewData = context.previewData;
-      return Promise.resolve(_this6.getResourceByPath(path, {
+      var _options = {
         deserialize: options.deserialize,
         isVersionable: options.isVersionable,
         locale: context.locale,
         defaultLocale: context.defaultLocale,
-        withAuth: context.preview || ((_options7 = options) == null ? void 0 : _options7.withAuth),
+        withAuth: (_options19 = options) == null ? void 0 : _options19.withAuth,
         params: _extends({
           resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
-        }, (_options8 = options) == null ? void 0 : _options8.params)
-      })); // If no locale is passed, skip entity if not default_langcode.
-      // This happens because decoupled_router will still translate the path
-      // to a resource.
-      // TODO: Figure out if we want this behavior.
-      // For now this causes a bug where a non-i18n sites builds (ISR) pages for
-      // localized pages.
-      // if (!context.locale && !resource?.default_langcode) {
-      //   return null
-      // }
+        }, (_options20 = options) == null ? void 0 : _options20.params)
+      };
+
+      var _temp44 = function () {
+        if (typeof input !== "string") {
+          // Fix for subrequests and translation.
+          // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
+          // @shadcn, note to self:
+          // Given an entity at /example with no translation.
+          // When we try to translate /es/example, decoupled router will properly
+          // translate to the untranslated version and set the locale to es.
+          // However a subrequests to /es/subrequests for decoupled router will fail.
+          if (context.locale && input.entity.langcode !== context.locale) {
+            context.locale = input.entity.langcode;
+          } // Given we already have the path info, we can skip subrequests and just make a simple
+          // request to the Drupal site to get the entity.
+
+
+          return function () {
+            var _input$entity;
+
+            if ((_input$entity = input.entity) == null ? void 0 : _input$entity.uuid) {
+              _exit7 = 1;
+              return Promise.resolve(_this14.getResource(type, input.entity.uuid, _options));
+            }
+          }();
+        }
+      }();
+
+      return Promise.resolve(_temp44 && _temp44.then ? _temp44.then(_temp43) : _temp43(_temp44));
     } catch (e) {
       return Promise.reject(e);
     }
@@ -1189,12 +1635,12 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getResourceByPath = function getResourceByPath(path, options) {
     try {
-      var _this8 = this;
+      var _this16 = this;
 
       options = _extends({
         deserialize: true,
         isVersionable: false,
-        withAuth: _this8.withAuth,
+        withAuth: _this16.withAuth,
         params: {}
       }, options);
 
@@ -1204,7 +1650,7 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
       if (options.locale && options.defaultLocale && path.indexOf(options.locale) !== 1) {
         path = path === "/" ? path : path.replace(/^\/+/, "");
-        path = _this8.getPathFromContext({
+        path = _this16.getPathFromContext({
           params: {
             slug: [path]
           },
@@ -1253,11 +1699,11 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
         subrequestsPath = "/" + options.locale + "/subrequests";
       }
 
-      var url = _this8.buildUrl(subrequestsPath, {
+      var url = _this16.buildUrl(subrequestsPath, {
         _format: "json"
       });
 
-      return Promise.resolve(_this8.fetch(url.toString(), {
+      return Promise.resolve(_this16.fetch(url.toString(), {
         method: "POST",
         credentials: "include",
         redirect: "follow",
@@ -1274,7 +1720,7 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
               var error = JSON.parse(json.router.body);
 
               if (error == null ? void 0 : error.message) {
-                throw new Error(error.message);
+                _this16.throwError(new Error(error.message));
               }
             }
 
@@ -1284,10 +1730,10 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
           var data = JSON.parse((_json$resolvedResourc2 = json["resolvedResource#uri{0}"]) == null ? void 0 : _json$resolvedResourc2.body);
 
           if (data.errors) {
-            throw new Error(_this8.formatJsonApiErrors(data.errors));
+            _this16.throwError(new Error(_this16.formatJsonApiErrors(data.errors)));
           }
 
-          return options.deserialize ? _this8.deserialize(data) : data;
+          return options.deserialize ? _this16.deserialize(data) : data;
         });
       });
     } catch (e) {
@@ -1297,25 +1743,39 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getResourceCollection = function getResourceCollection(type, options) {
     try {
-      var _options9, _options10;
+      var _options21, _options22;
 
-      var _this10 = this;
+      var _this18 = this;
 
       options = _extends({
-        withAuth: _this10.withAuth,
+        withAuth: _this18.withAuth,
         deserialize: true
       }, options);
-      return Promise.resolve(_this10.getEntryForResourceType(type, ((_options9 = options) == null ? void 0 : _options9.locale) !== ((_options10 = options) == null ? void 0 : _options10.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
-        var _options11;
+      return Promise.resolve(_this18.getEntryForResourceType(type, ((_options21 = options) == null ? void 0 : _options21.locale) !== ((_options22 = options) == null ? void 0 : _options22.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+        var _options23;
 
-        var url = _this10.buildUrl(apiPath, _extends({}, (_options11 = options) == null ? void 0 : _options11.params));
+        var url = _this18.buildUrl(apiPath, _extends({}, (_options23 = options) == null ? void 0 : _options23.params));
 
-        return Promise.resolve(_this10.fetch(url.toString(), {
+        _this18._debug("Fetching resource collection of type " + type);
+
+        _this18._debug(url.toString());
+
+        return Promise.resolve(_this18.fetch(url.toString(), {
           withAuth: options.withAuth
         })).then(function (response) {
-          return Promise.resolve(response.json()).then(function (json) {
-            return options.deserialize ? _this10.deserialize(json) : json;
-          });
+          function _temp46() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this18.deserialize(json) : json;
+            });
+          }
+
+          var _temp45 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this18.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp45 && _temp45.then ? _temp45.then(_temp46) : _temp46(_temp45);
         });
       });
     } catch (e) {
@@ -1325,16 +1785,15 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getResourceCollectionFromContext = function getResourceCollectionFromContext(type, context, options) {
     try {
-      var _this12 = this;
+      var _this20 = this;
 
       options = _extends({
-        withAuth: _this12.withAuth,
         deserialize: true
       }, options);
-      return Promise.resolve(_this12.getResourceCollection(type, _extends({}, options, {
+      return Promise.resolve(_this20.getResourceCollection(type, _extends({}, options, {
         locale: context.locale,
         defaultLocale: context.defaultLocale,
-        withAuth: context.preview || options.withAuth
+        withAuth: _this20.getAuthFromContextAndOptions(context, options)
       })));
     } catch (e) {
       return Promise.reject(e);
@@ -1343,10 +1802,10 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getStaticPathsFromContext = function getStaticPathsFromContext(types, context, options) {
     try {
-      var _this14 = this;
+      var _this22 = this;
 
       options = _extends({
-        withAuth: _this14.withAuth,
+        withAuth: _this22.withAuth,
         pathPrefix: "/",
         params: {}
       }, options);
@@ -1357,19 +1816,19 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
       return Promise.resolve(Promise.all(types.map(function (type) {
         try {
-          var _extends2, _options12;
+          var _extends2, _options24;
 
-          var _temp17 = function _temp17(_result3) {
-            return _exit5 ? _result3 : Promise.resolve(Promise.all(context.locales.map(function (locale) {
+          var _temp49 = function _temp49(_result7) {
+            return _exit9 ? _result7 : Promise.resolve(Promise.all(context.locales.map(function (locale) {
               try {
-                return Promise.resolve(_this14.getResourceCollection(type, {
+                return Promise.resolve(_this22.getResourceCollection(type, {
                   deserialize: true,
                   locale: locale,
                   defaultLocale: context.defaultLocale,
                   params: params,
                   withAuth: options.withAuth
                 })).then(function (resources) {
-                  return _this14.buildStaticPathsFromResources(resources, {
+                  return _this22.buildStaticPathsFromResources(resources, {
                     locale: locale,
                     pathPrefix: options.pathPrefix
                   });
@@ -1382,30 +1841,30 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
             });
           };
 
-          var _exit5;
+          var _exit9;
 
           // Use sparse fieldset to expand max size.
           // Note we don't need status filter here since this runs non-authenticated (by default).
-          var params = _extends((_extends2 = {}, _extends2["fields[" + type + "]"] = "path", _extends2), (_options12 = options) == null ? void 0 : _options12.params); // Handle localized path aliases
+          var params = _extends((_extends2 = {}, _extends2["fields[" + type + "]"] = "path", _extends2), (_options24 = options) == null ? void 0 : _options24.params); // Handle localized path aliases
 
 
-          var _temp18 = function () {
+          var _temp50 = function () {
             var _context$locales;
 
             if (!((_context$locales = context.locales) == null ? void 0 : _context$locales.length)) {
-              return Promise.resolve(_this14.getResourceCollection(type, {
+              return Promise.resolve(_this22.getResourceCollection(type, {
                 params: params,
                 withAuth: options.withAuth
               })).then(function (resources) {
-                _exit5 = 1;
-                return _this14.buildStaticPathsFromResources(resources, {
+                _exit9 = 1;
+                return _this22.buildStaticPathsFromResources(resources, {
                   pathPrefix: options.pathPrefix
                 });
               });
             }
           }();
 
-          return Promise.resolve(_temp18 && _temp18.then ? _temp18.then(_temp17) : _temp17(_temp18));
+          return Promise.resolve(_temp50 && _temp50.then ? _temp50.then(_temp49) : _temp49(_temp50));
         } catch (e) {
           return Promise.reject(e);
         }
@@ -1418,12 +1877,12 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
   };
 
   _proto.buildStaticPathsFromResources = function buildStaticPathsFromResources(resources, options) {
-    var _this15 = this;
+    var _this23 = this;
 
     var paths = resources == null ? void 0 : resources.flatMap(function (resource) {
       var _resource$path, _resource$path2;
 
-      return (resource == null ? void 0 : (_resource$path = resource.path) == null ? void 0 : _resource$path.alias) === _this15.frontPage ? "/" : resource == null ? void 0 : (_resource$path2 = resource.path) == null ? void 0 : _resource$path2.alias;
+      return (resource == null ? void 0 : (_resource$path = resource.path) == null ? void 0 : _resource$path.alias) === _this23.frontPage ? "/" : resource == null ? void 0 : (_resource$path2 = resource.path) == null ? void 0 : _resource$path2.alias;
     }).filter(Boolean);
     return (paths == null ? void 0 : paths.length) ? this.buildStaticPathsParamsFromPaths(paths, options) : [];
   };
@@ -1454,17 +1913,17 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.translatePath = function translatePath(path, options) {
     try {
-      var _this17 = this;
+      var _this25 = this;
 
       options = _extends({
-        withAuth: _this17.withAuth
+        withAuth: _this25.withAuth
       }, options);
 
-      var url = _this17.buildUrl("/router/translate-path", {
+      var url = _this25.buildUrl("/router/translate-path", {
         path: path
       });
 
-      return Promise.resolve(_this17.fetch(url.toString(), {
+      return Promise.resolve(_this25.fetch(url.toString(), {
         withAuth: options.withAuth
       })).then(function (response) {
         return (response == null ? void 0 : response.ok) ? Promise.resolve(response.json()) : null;
@@ -1476,19 +1935,18 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.translatePathFromContext = function translatePathFromContext(context, options) {
     try {
-      var _this19 = this;
+      var _this27 = this;
 
       options = _extends({
-        pathPrefix: "/",
-        withAuth: _this19.withAuth
+        pathPrefix: "/"
       }, options);
 
-      var path = _this19.getPathFromContext(context, {
+      var path = _this27.getPathFromContext(context, {
         pathPrefix: options.pathPrefix
       });
 
-      return Promise.resolve(_this19.translatePath(path, {
-        withAuth: context.preview || options.withAuth
+      return Promise.resolve(_this27.translatePath(path, {
+        withAuth: _this27.getAuthFromContextAndOptions(context, options)
       }));
     } catch (e) {
       return Promise.reject(e);
@@ -1508,7 +1966,9 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
       pathPrefix = "/" + context.locale + pathPrefix;
     }
 
-    slug = Array.isArray(slug) ? slug.join("/") : slug; // Handle front page.
+    slug = Array.isArray(slug) ? slug.map(function (s) {
+      return encodeURIComponent(s);
+    }).join("/") : slug; // Handle front page.
 
     if (!slug) {
       slug = this.frontPage;
@@ -1521,19 +1981,19 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getIndex = function getIndex(locale) {
     try {
-      var _this21 = this;
+      var _this29 = this;
 
-      var url = _this21.buildUrl(locale ? "/" + locale + _this21.apiPrefix : _this21.apiPrefix);
+      var url = _this29.buildUrl(locale ? "/" + locale + _this29.apiPrefix : _this29.apiPrefix);
 
       return Promise.resolve(_catch$2(function () {
-        return Promise.resolve(_this21.fetch(url.toString(), {
+        return Promise.resolve(_this29.fetch(url.toString(), {
           // As per https://www.drupal.org/node/2984034 /jsonapi is public.
           withAuth: false
         })).then(function (response) {
           return Promise.resolve(response.json());
         });
       }, function (error) {
-        throw new Error("Failed to fetch JSON:API index at " + url.toString() + " - " + error.message);
+        _this29.throwError(new Error("Failed to fetch JSON:API index at " + url.toString() + " - " + error.message));
       }));
     } catch (e) {
       return Promise.reject(e);
@@ -1542,17 +2002,17 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getEntryForResourceType = function getEntryForResourceType(type, locale) {
     try {
-      var _this23 = this;
+      var _this31 = this;
 
-      if (_this23.useDefaultResourceTypeEntry) {
+      if (_this31.useDefaultResourceTypeEntry) {
         var _type$split = type.split("--"),
             id = _type$split[0],
             bundle = _type$split[1];
 
-        return Promise.resolve("" + _this23.baseUrl + _this23.apiPrefix + "/" + (locale ? locale + "/" + id + "/" + bundle : id + "/" + bundle));
+        return Promise.resolve("" + _this31.baseUrl + _this31.apiPrefix + "/" + (locale ? locale + "/" + id + "/" + bundle : id + "/" + bundle));
       }
 
-      return Promise.resolve(_this23.getIndex(locale)).then(function (index) {
+      return Promise.resolve(_this31.getIndex(locale)).then(function (index) {
         var _index$links;
 
         var link = (_index$links = index.links) == null ? void 0 : _index$links[type];
@@ -1566,10 +2026,10 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
         if (locale) {
           var pattern = "^\\/" + locale + "\\/";
-          var path = href.replace(_this23.baseUrl, "");
+          var path = href.replace(_this31.baseUrl, "");
 
           if (!new RegExp(pattern, "i").test(path)) {
-            return _this23.baseUrl + "/" + locale + path;
+            return _this31.baseUrl + "/" + locale + path;
           }
         }
 
@@ -1582,75 +2042,68 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.preview = function preview(request, response, options) {
     try {
-      var _this25 = this;
+      var _this33 = this;
 
       var _request$query = request.query,
           slug = _request$query.slug,
           resourceVersion = _request$query.resourceVersion,
-          secret = _request$query.secret,
-          locale = _request$query.locale,
-          defaultLocale = _request$query.defaultLocale;
-
-      if (secret !== _this25.previewSecret) {
-        return Promise.resolve(response.status(401).json({
-          message: (options == null ? void 0 : options.errorMessages.secret) || "Invalid preview secret."
-        }));
-      }
-
-      if (!slug) {
-        return Promise.resolve(response.status(401).end({
-          message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug."
-        }));
-      }
-
-      var _options = {
-        isVersionable: !!resourceVersion
-      };
-
-      if (locale && defaultLocale) {
-        // Fix for und locale.
-        var _locale = locale === "und" ? defaultLocale : locale;
-
-        _options = _extends({}, _options, {
-          locale: _locale,
-          defaultLocale: defaultLocale
-        });
-      }
+          plugin = _request$query.plugin;
+      return Promise.resolve(_catch$2(function () {
+        // Always clear preview data to handle different scopes.
+        response.clearPreviewData(); // Validate the preview url.
 
-      return Promise.resolve(_this25.getResourceByPath(slug, _extends({
-        withAuth: true
-      }, _options))).then(function (entity) {
-        if (!entity || !(entity == null ? void 0 : entity.path)) {
-          throw new Error("The path attribute is missing for entity with slug " + slug);
-        }
+        var validateUrl = _this33.buildUrl("/next/preview-url");
 
-        var url = (entity == null ? void 0 : entity.default_langcode) ? entity.path.alias : "/" + entity.path.langcode + entity.path.alias;
+        return Promise.resolve(_this33.fetch(validateUrl.toString(), {
+          method: "POST",
+          headers: {
+            "Content-Type": "application/json"
+          },
+          body: JSON.stringify(request.query)
+        })).then(function (result) {
+          var _exit10;
+
+          function _temp52(_result9) {
+            return _exit10 ? _result9 : Promise.resolve(result.json()).then(function (validationPayload) {
+              response.setPreviewData(_extends({
+                resourceVersion: resourceVersion,
+                plugin: plugin
+              }, validationPayload)); // Fix issue with cookie.
+              // See https://github.com/vercel/next.js/discussions/32238.
+              // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+
+              if (_this33.forceIframeSameSiteCookie) {
+                var previous = response.getHeader("Set-Cookie");
+                previous.forEach(function (cookie, index) {
+                  previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
+                });
+                response.setHeader("Set-Cookie", previous);
+              } // We can safely redirect to the slug since this has been validated on the server.
 
-        if (!url) {
-          response.status(404).end({
-            message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug"
-          });
-        }
 
-        response.setPreviewData({
-          resourceVersion: resourceVersion
-        }); // Fix issue with cookie.
-        // See https://github.com/vercel/next.js/discussions/32238.
-        // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+              response.writeHead(307, {
+                Location: slug
+              });
+              return response.end();
+            });
+          }
 
-        if (_this25.forceIframeSameSiteCookie) {
-          var previous = response.getHeader("Set-Cookie");
-          previous.forEach(function (cookie, index) {
-            previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
-          });
-          response.setHeader("Set-Cookie", previous);
-        }
+          var _temp51 = function () {
+            if (!result.ok) {
+              response.statusCode = result.status;
+              _exit10 = 1;
+              var _json2 = response.json;
+              return Promise.resolve(result.json()).then(function (_result$json) {
+                return _json2.call(response, _result$json);
+              });
+            }
+          }();
 
-        response.writeHead(307, {
-          Location: url
+          return _temp51 && _temp51.then ? _temp51.then(_temp52) : _temp52(_temp51);
         });
-        return response.end();
-      });
+      }, function () {
+        return response.status(422).end();
+      }));
     } catch (e) {
       return Promise.reject(e);
     }
@@ -1658,77 +2111,87 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getMenu = function getMenu(name, options) {
     try {
-      var _temp22 = function _temp22(_result4) {
-        var _options13;
+      var _temp58 = function _temp58(_result10) {
+        var _options25;
 
-        if (_exit7) return _result4;
-        var localePrefix = ((_options13 = options) == null ? void 0 : _options13.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+        if (_exit12) return _result10;
+        var localePrefix = ((_options25 = options) == null ? void 0 : _options25.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
-        var url = _this27.buildUrl("" + localePrefix + _this27.apiPrefix + "/menu_items/" + name, options.params);
+        var url = _this35.buildUrl("" + localePrefix + _this35.apiPrefix + "/menu_items/" + name, options.params);
 
-        _this27._debug("Fetching menu items for " + name + ".");
+        _this35._debug("Fetching menu items for " + name + ".");
 
-        _this27._debug(url.toString());
+        _this35._debug(url.toString());
 
-        return Promise.resolve(_this27.fetch(url.toString(), {
+        return Promise.resolve(_this35.fetch(url.toString(), {
           withAuth: options.withAuth
         })).then(function (response) {
-          return Promise.resolve(response.json()).then(function (data) {
-            var items = options.deserialize ? _this27.deserialize(data) : data;
+          function _temp55() {
+            return Promise.resolve(response.json()).then(function (data) {
+              var items = options.deserialize ? _this35.deserialize(data) : data;
 
-            var _this27$buildMenuTree = _this27.buildMenuTree(items),
-                tree = _this27$buildMenuTree.items;
+              var _this35$buildMenuTree = _this35.buildMenuTree(items),
+                  tree = _this35$buildMenuTree.items;
 
-            var menu = {
-              items: items,
-              tree: tree
-            };
+              var menu = {
+                items: items,
+                tree: tree
+              };
 
-            var _temp19 = function () {
-              if (options.withCache) {
-                return Promise.resolve(_this27.cache.set(options.cacheKey, JSON.stringify(menu))).then(function () {});
-              }
-            }();
+              var _temp53 = function () {
+                if (options.withCache) {
+                  return Promise.resolve(_this35.cache.set(options.cacheKey, JSON.stringify(menu))).then(function () {});
+                }
+              }();
 
-            return _temp19 && _temp19.then ? _temp19.then(function () {
-              return menu;
-            }) : menu;
-          });
+              return _temp53 && _temp53.then ? _temp53.then(function () {
+                return menu;
+              }) : menu;
+            });
+          }
+
+          var _temp54 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this35.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp54 && _temp54.then ? _temp54.then(_temp55) : _temp55(_temp54);
         });
       };
 
-      var _exit7;
+      var _exit12;
 
-      var _this27 = this;
+      var _this35 = this;
 
       options = _extends({
-        withAuth: _this27.withAuth,
+        withAuth: _this35.withAuth,
         deserialize: true,
         params: {},
         withCache: false
       }, options);
 
-      var _temp23 = function () {
+      var _temp59 = function () {
         if (options.withCache) {
-          return Promise.resolve(_this27.cache.get(options.cacheKey)).then(function (cached) {
+          return Promise.resolve(_this35.cache.get(options.cacheKey)).then(function (cached) {
             if (cached) {
-              _this27._debug("Returning cached menu items for " + name);
+              _this35._debug("Returning cached menu items for " + name);
 
-              _exit7 = 1;
+              _exit12 = 1;
               return JSON.parse(cached);
             }
           });
         }
       }();
 
-      return Promise.resolve(_temp23 && _temp23.then ? _temp23.then(_temp22) : _temp22(_temp23));
+      return Promise.resolve(_temp59 && _temp59.then ? _temp59.then(_temp58) : _temp58(_temp59));
     } catch (e) {
       return Promise.reject(e);
     }
   };
 
   _proto.buildMenuTree = function buildMenuTree(links, parent) {
-    var _this28 = this;
+    var _this36 = this;
 
     if (parent === void 0) {
       parent = "";
@@ -1745,42 +2208,52 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     });
     return children.length ? {
       items: children.map(function (link) {
-        return _extends({}, link, _this28.buildMenuTree(links, link.id));
+        return _extends({}, link, _this36.buildMenuTree(links, link.id));
       })
     } : {};
   };
 
   _proto.getView = function getView(name, options) {
     try {
-      var _options14;
+      var _options26;
 
-      var _this30 = this;
+      var _this38 = this;
 
       options = _extends({
-        withAuth: _this30.withAuth,
+        withAuth: _this38.withAuth,
         deserialize: true,
         params: {}
       }, options);
-      var localePrefix = ((_options14 = options) == null ? void 0 : _options14.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+      var localePrefix = ((_options26 = options) == null ? void 0 : _options26.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
       var _name$split = name.split("--"),
           viewId = _name$split[0],
           displayId = _name$split[1];
 
-      var url = _this30.buildUrl("" + localePrefix + _this30.apiPrefix + "/views/" + viewId + "/" + displayId, options.params);
+      var url = _this38.buildUrl("" + localePrefix + _this38.apiPrefix + "/views/" + viewId + "/" + displayId, options.params);
 
-      return Promise.resolve(_this30.fetch(url.toString(), {
+      return Promise.resolve(_this38.fetch(url.toString(), {
         withAuth: options.withAuth
       })).then(function (response) {
-        return Promise.resolve(response.json()).then(function (data) {
-          var results = options.deserialize ? _this30.deserialize(data) : data;
-          return {
-            id: name,
-            results: results,
-            meta: data.meta,
-            links: data.links
-          };
-        });
+        function _temp61() {
+          return Promise.resolve(response.json()).then(function (data) {
+            var results = options.deserialize ? _this38.deserialize(data) : data;
+            return {
+              id: name,
+              results: results,
+              meta: data.meta,
+              links: data.links
+            };
+          });
+        }
+
+        var _temp60 = function () {
+          if (!(response == null ? void 0 : response.ok)) {
+            return Promise.resolve(_this38.handleJsonApiErrors(response)).then(function () {});
+          }
+        }();
+
+        return _temp60 && _temp60.then ? _temp60.then(_temp61) : _temp61(_temp60);
       });
     } catch (e) {
       return Promise.reject(e);
@@ -1789,24 +2262,34 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getSearchIndex = function getSearchIndex(name, options) {
     try {
-      var _options15;
+      var _options27;
 
-      var _this32 = this;
+      var _this40 = this;
 
       options = _extends({
-        withAuth: _this32.withAuth,
+        withAuth: _this40.withAuth,
         deserialize: true
       }, options);
-      var localePrefix = ((_options15 = options) == null ? void 0 : _options15.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+      var localePrefix = ((_options27 = options) == null ? void 0 : _options27.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
-      var url = _this32.buildUrl("" + localePrefix + _this32.apiPrefix + "/index/" + name, options.params);
+      var url = _this40.buildUrl("" + localePrefix + _this40.apiPrefix + "/index/" + name, options.params);
 
-      return Promise.resolve(_this32.fetch(url.toString(), {
+      return Promise.resolve(_this40.fetch(url.toString(), {
         withAuth: options.withAuth
       })).then(function (response) {
-        return Promise.resolve(response.json()).then(function (json) {
-          return options.deserialize ? _this32.deserialize(json) : json;
-        });
+        function _temp63() {
+          return Promise.resolve(response.json()).then(function (json) {
+            return options.deserialize ? _this40.deserialize(json) : json;
+          });
+        }
+
+        var _temp62 = function () {
+          if (!(response == null ? void 0 : response.ok)) {
+            return Promise.resolve(_this40.handleJsonApiErrors(response)).then(function () {});
+          }
+        }();
+
+        return _temp62 && _temp62.then ? _temp62.then(_temp63) : _temp63(_temp62);
       });
     } catch (e) {
       return Promise.reject(e);
@@ -1815,9 +2298,9 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto.getSearchIndexFromContext = function getSearchIndexFromContext(name, context, options) {
     try {
-      var _this34 = this;
+      var _this42 = this;
 
-      return Promise.resolve(_this34.getSearchIndex(name, _extends({}, options, {
+      return Promise.resolve(_this42.getSearchIndex(name, _extends({}, options, {
         locale: context.locale,
         defaultLocale: context.defaultLocale
       })));
@@ -1841,49 +2324,71 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     return url;
   };
 
-  _proto.getAccessToken = function getAccessToken() {
+  _proto.getAccessToken = function getAccessToken(opts) {
     try {
-      var _this36 = this;
+      var _this44 = this;
 
-      if (_this36.accessToken) {
-        return Promise.resolve(_this36.accessToken);
+      if (_this44.accessToken && _this44.accessTokenScope === (opts == null ? void 0 : opts.scope)) {
+        return Promise.resolve(_this44.accessToken);
       }
 
-      if (typeof _this36._auth !== "object") {
-        throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+      if (!(opts == null ? void 0 : opts.clientId) || !(opts == null ? void 0 : opts.clientSecret)) {
+        if (typeof _this44._auth === "undefined") {
+          throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+        }
       }
 
-      if (!_this36._auth.clientId || !_this36._auth.clientSecret) {
+      if (!isClientIdSecretAuth(_this44._auth) || opts && !isClientIdSecretAuth(opts)) {
         throw new Error("'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth");
       }
 
-      if (_this36._token && Date.now() < _this36.tokenExpiresOn) {
-        _this36._debug("Using existing access token.");
+      var clientId = (opts == null ? void 0 : opts.clientId) || _this44._auth.clientId;
+      var clientSecret = (opts == null ? void 0 : opts.clientSecret) || _this44._auth.clientSecret;
 
-        return Promise.resolve(_this36._token);
+      var url = _this44.buildUrl((opts == null ? void 0 : opts.url) || _this44._auth.url || DEFAULT_AUTH_URL);
+
+      if (_this44.accessTokenScope === (opts == null ? void 0 : opts.scope) && _this44._token && Date.now() < _this44.tokenExpiresOn) {
+        _this44._debug("Using existing access token.");
+
+        return Promise.resolve(_this44._token);
       }
 
-      _this36._debug("Fetching new access token.");
+      _this44._debug("Fetching new access token.");
+
+      var basic = Buffer.from(clientId + ":" + clientSecret).toString("base64");
+      var body = "grant_type=client_credentials";
 
-      var basic = Buffer.from(_this36._auth.clientId + ":" + _this36._auth.clientSecret).toString("base64");
-      return Promise.resolve(fetch("" + _this36.baseUrl + _this36._auth.url, {
+      if (opts == null ? void 0 : opts.scope) {
+        body = body + "&scope=" + opts.scope;
+
+        _this44._debug("Using scope: " + opts.scope);
+      }
+
+      return Promise.resolve(fetch(url.toString(), {
         method: "POST",
         headers: {
           Authorization: "Basic " + basic,
           "Content-Type": "application/x-www-form-urlencoded"
         },
-        body: "grant_type=client_credentials"
+        body: body
       })).then(function (response) {
-        if (!(response == null ? void 0 : response.ok)) {
-          throw new Error(response == null ? void 0 : response.statusText);
+        function _temp65() {
+          return Promise.resolve(response.json()).then(function (result) {
+            _this44._debug(result);
+
+            _this44.token = result;
+            _this44.accessTokenScope = opts == null ? void 0 : opts.scope;
+            return result;
+          });
         }
 
-        return Promise.resolve(response.json()).then(function (result) {
-          _this36._debug(result);
+        var _temp64 = function () {
+          if (!(response == null ? void 0 : response.ok)) {
+            return Promise.resolve(_this44.handleJsonApiErrors(response)).then(function () {});
+          }
+        }();
 
-          _this36.token = result;
-          return result;
-        });
+        return _temp64 && _temp64.then ? _temp64.then(_temp65) : _temp65(_temp64);
       });
     } catch (e) {
       return Promise.reject(e);
@@ -1895,25 +2400,25 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     return this.serializer.deserialize(body, options);
   };
 
-  _proto.formatErrorResponse = function formatErrorResponse(response) {
+  _proto.getErrorsFromResponse = function getErrorsFromResponse(response) {
     try {
-      var _temp28 = function _temp28(_result5) {
-        var _exit9;
+      var _temp70 = function _temp70(_result11) {
+        var _exit14;
 
-        if (_exit10) return _result5;
+        if (_exit15) return _result11;
 
-        function _temp25(_result6) {
-          return _exit9 ? _result6 : response.statusText;
+        function _temp67(_result12) {
+          return _exit14 ? _result12 : response.statusText;
         }
 
-        var _temp24 = function () {
+        var _temp66 = function () {
           if (type === "application/vnd.api+json") {
             return Promise.resolve(response.json()).then(function (_error) {
               var _error$errors;
 
               if (_error == null ? void 0 : (_error$errors = _error.errors) == null ? void 0 : _error$errors.length) {
-                _exit9 = 1;
-                return _this38.formatJsonApiErrors(_error.errors);
+                _exit14 = 1;
+                return _error.errors;
               }
             });
           }
@@ -1922,25 +2427,23 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
         // Construct error from response.
         // Check for type to ensure this is a JSON:API formatted error.
         // See https://jsonapi.org/format/#errors.
-        return _temp24 && _temp24.then ? _temp24.then(_temp25) : _temp25(_temp24);
+        return _temp66 && _temp66.then ? _temp66.then(_temp67) : _temp67(_temp66);
       };
 
-      var _exit10;
-
-      var _this38 = this;
+      var _exit15;
 
       var type = response.headers.get("content-type");
 
-      var _temp29 = function () {
+      var _temp71 = function () {
         if (type === "application/json") {
           return Promise.resolve(response.json()).then(function (error) {
-            _exit10 = 1;
+            _exit15 = 1;
             return error.message;
           });
         }
       }();
 
-      return Promise.resolve(_temp29 && _temp29.then ? _temp29.then(_temp28) : _temp28(_temp29));
+      return Promise.resolve(_temp71 && _temp71.then ? _temp71.then(_temp70) : _temp70(_temp71));
     } catch (e) {
       return Promise.reject(e);
     }
@@ -1959,9 +2462,86 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
 
   _proto._debug = function _debug(message) {
     !!this.debug && this.logger.debug(message);
+  } // Error handling.
+  // If throwErrors is enable, we show errors in the Next.js overlay.
+  // Otherwise we log the errors even if debugging is turned off.
+  // In production, errors are always logged never thrown.
+  ;
+
+  _proto.throwError = function throwError(error) {
+    if (!this.throwJsonApiErrors) {
+      return this.logger.error(error);
+    }
+
+    throw error;
+  };
+
+  _proto.handleJsonApiErrors = function handleJsonApiErrors(response) {
+    try {
+      var _this46 = this;
+
+      return Promise.resolve(function () {
+        if (!(response == null ? void 0 : response.ok)) {
+          return Promise.resolve(_this46.getErrorsFromResponse(response)).then(function (errors) {
+            throw new JsonApiErrors(errors, response.status);
+          });
+        }
+      }());
+    } catch (e) {
+      return Promise.reject(e);
+    }
   };
 
-  _createClass(Experiment_DrupalClient, [{
+  _proto.getAuthFromContextAndOptions = function getAuthFromContextAndOptions(context, options) {
+    var _context$previewData;
+
+    // If not in preview or withAuth is provided, use that.
+    if (!context.preview) {
+      // If we have provided an auth, use that.
+      if (typeof (options == null ? void 0 : options.withAuth) !== "undefined") {
+        return options.withAuth;
+      } // Otherwise we fallback to the global auth.
+
+
+      return this.withAuth;
+    } // If no plugin is provided, return.
+
+
+    var plugin = (_context$previewData = context.previewData) == null ? void 0 : _context$previewData["plugin"];
+
+    if (!plugin) {
+      return null;
+    }
+
+    var withAuth = this._auth;
+
+    if (plugin === "simple_oauth") {
+      var _context$previewData2;
+
+      // If we are using a client id and secret auth, pass the scope.
+      if (isClientIdSecretAuth(withAuth) && ((_context$previewData2 = context.previewData) == null ? void 0 : _context$previewData2["scope"])) {
+        var _context$previewData3;
+
+        withAuth = _extends({}, withAuth, {
+          scope: (_context$previewData3 = context.previewData) == null ? void 0 : _context$previewData3["scope"]
+        });
+      }
+    }
+
+    if (plugin === "jwt") {
+      var _context$previewData4;
+
+      var accessToken = (_context$previewData4 = context.previewData) == null ? void 0 : _context$previewData4["access_token"];
+
+      if (accessToken) {
+        return "Bearer " + accessToken;
+      }
+    }
+
+    return withAuth;
+  };
+
+  _createClass(DrupalClient, [{
     key: "apiPrefix",
     set: function set(apiPrefix) {
       this._apiPrefix = apiPrefix.charAt(0) === "/" ? apiPrefix : "/" + apiPrefix;
@@ -1973,7 +2553,15 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     key: "auth",
     set: function set(auth) {
       if (typeof auth === "object") {
-        if (!auth.clientId || !auth.clientSecret) {
+        if (isBasicAuth(auth)) {
+          if (!auth.username || !auth.password) {
+            throw new Error("'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth");
+          }
+        } else if (isAccessTokenAuth(auth)) {
+          if (!auth.access_token || !auth.token_type) {
+            throw new Error("'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth");
+          }
+        } else if (!auth.clientId || !auth.clientSecret) {
           throw new Error("'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth");
         }
 
@@ -1997,11 +2585,12 @@ var Experiment_DrupalClient = /*#__PURE__*/function () {
     }
   }]);
 
-  return Experiment_DrupalClient;
+  return DrupalClient;
 }();
 
+exports.DrupalClient = DrupalClient;
 exports.DrupalPreview = DrupalPreview;
-exports.Experiment_DrupalClient = Experiment_DrupalClient;
+exports.JsonApiErrors = JsonApiErrors;
 exports.PreviewHandler = PreviewHandler;
 exports.buildUrl = buildUrl;
 exports.deserialize = deserialize;
diff --git a/node_modules/next-drupal/dist/index.js.map b/node_modules/next-drupal/dist/index.js.map
index 40164ba..5fbc6fe 100644
--- a/node_modules/next-drupal/dist/index.js.map
+++ b/node_modules/next-drupal/dist/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  if (!context.locale && !resource?.default_langcode) {\n    return null\n  }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  Experiment_DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  GetResourcePreviewUrlOptions,\n  JsonApiWithCacheOptions,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nexport class Experiment_DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: Experiment_DrupalClientOptions[\"debug\"]\n\n  frontPage: Experiment_DrupalClientOptions[\"frontPage\"]\n\n  private serializer: Experiment_DrupalClientOptions[\"serializer\"]\n\n  private cache: Experiment_DrupalClientOptions[\"cache\"]\n\n  private logger: Experiment_DrupalClientOptions[\"logger\"]\n\n  private fetcher?: Experiment_DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: Experiment_DrupalClientOptions[\"headers\"]\n\n  private _auth?: Experiment_DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: Experiment_DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: Experiment_DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: Experiment_DrupalClientOptions[\"accessToken\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: Experiment_DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: Experiment_DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: Experiment_DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new Experiment_DrupalClient.\n   *\n   * const client = new Experiment_DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: Experiment_DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: Experiment_DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: Experiment_DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: Experiment_DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      // If a custom auth is provided, use that.\n      if (typeof this._auth === \"function\") {\n        this._debug(`Using custom auth.`)\n\n        init[\"headers\"][\"Authorization\"] = this._auth()\n      } else {\n        // Otherwise use the built-in client_credentials grant.\n        this._debug(`Using default auth (client_credentials).`)\n\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken()\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    const response = await fetch(input, init)\n\n    if (response?.ok) {\n      return response\n    }\n\n    const message = await this.formatErrorResponse(response)\n\n    // Only throw errors in development\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error(message)\n    } else {\n      if (this.debug) {\n        this.logger.error(message)\n      }\n\n      return null\n    }\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n    }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const previewData = context.previewData as { resourceVersion?: string }\n\n    const resource = await this.getResourceByPath<T>(path, {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    })\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          throw new Error(error.message)\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      throw new Error(this.formatJsonApiErrors(data.errors))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options.withAuth,\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    const response = await this.translatePath(path, {\n      withAuth: context.preview || options.withAuth,\n    })\n\n    return response\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      throw new Error(\n        `Failed to fetch JSON:API index at ${url.toString()} - ${error.message}`\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, secret, locale, defaultLocale } =\n      request.query\n\n    if (secret !== this.previewSecret) {\n      return response.status(401).json({\n        message: options?.errorMessages.secret || \"Invalid preview secret.\",\n      })\n    }\n\n    if (!slug) {\n      return response\n        .status(401)\n        .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n    }\n\n    let _options: GetResourcePreviewUrlOptions = {\n      isVersionable: !!resourceVersion,\n    }\n\n    if (locale && defaultLocale) {\n      // Fix for und locale.\n      const _locale = locale === \"und\" ? defaultLocale : locale\n\n      _options = {\n        ..._options,\n        locale: _locale as string,\n        defaultLocale: defaultLocale as string,\n      }\n    }\n\n    const entity = await this.getResourceByPath(slug as string, {\n      withAuth: true,\n      ..._options,\n    })\n\n    if (!entity || !entity?.path) {\n      throw new Error(\n        `The path attribute is missing for entity with slug ${slug}`\n      )\n    }\n\n    const url = entity?.default_langcode\n      ? entity.path.alias\n      : `/${entity.path.langcode}${entity.path.alias}`\n\n    if (!url) {\n      response\n        .status(404)\n        .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n    }\n\n    response.setPreviewData({\n      resourceVersion,\n    })\n\n    // Fix issue with cookie.\n    // See https://github.com/vercel/next.js/discussions/32238.\n    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n    if (this.forceIframeSameSiteCookie) {\n      const previous = response.getHeader(\"Set-Cookie\") as string[]\n      previous.forEach((cookie, index) => {\n        previous[index] = cookie.replace(\"SameSite=Lax\", \"SameSite=None;Secure\")\n      })\n      response.setHeader(`Set-Cookie`, previous)\n    }\n\n    response.writeHead(307, { Location: url })\n\n    return response.end()\n  }\n\n  async getMenu<T extends DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<{\n    id: string\n    results: T\n    meta: JsonApiResponse[\"meta\"]\n    links: JsonApiResponse[\"links\"]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(): Promise<AccessToken> {\n    if (this.accessToken) {\n      return this.accessToken\n    }\n\n    if (typeof this._auth !== \"object\") {\n      throw new Error(\n        \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n      )\n    }\n\n    if (!this._auth.clientId || !this._auth.clientSecret) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    if (this._token && Date.now() < this.tokenExpiresOn) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(\n      `${this._auth.clientId}:${this._auth.clientSecret}`\n    ).toString(\"base64\")\n\n    const response = await fetch(`${this.baseUrl}${this._auth.url}`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    })\n\n    if (!response?.ok) {\n      throw new Error(response?.statusText)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async formatErrorResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return this.formatJsonApiErrors(_error.errors)\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n}\n"],"names":["cache","NodeCache","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","CACHE_KEY","access_token","basic","Buffer","from","toString","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","response","ok","Error","statusText","json","result","set","expires_in","buildHeaders","accessToken","token","UNSTABLE_DRUPAL_ACCESS_TOKEN","getJsonApiIndex","locale","options","url","buildUrl","JSONAPI_PREFIX","getJsonApiPathForResourceType","type","index","links","href","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","path","params","URL","charAt","search","stringify","getPathFromContext","context","prefix","slug","Array","isArray","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","buildMenuTree","tree","length","children","filter","link","map","id","getResourceCollectionFromContext","getResourceCollection","undefined","apiPath","getPathsFromContext","types","Promise","all","locales","resources","buildPathsFromResources","paths","flat","flatMap","resource","alias","replace","split","getResource","uuid","getResourceByPath","isVersionable","indexOf","resourceVersion","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResourceFromContext","test","previewData","default_langcode","getResourcePreviewUrl","entity","langcode","PreviewHandler","request","query","secret","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","setPreviewData","writeHead","Location","DrupalPreview","translatePathFromContext","translatePath","getResourceTypeFromContext","jsonapi","resourceName","getSearchIndexFromContext","getSearchIndex","getView","viewId","displayId","results","meta","useMenu","router","useRouter","React","setData","error","setError","isLoading","setIsLoading","fetchMenuItems","logger","log","console","debug","warn","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","Experiment_DrupalClient","baseUrl","getStaticPathsFromContext","apiPrefix","serializer","frontPage","useDefaultResourceTypeEntry","defaultLogger","withAuth","fetcher","auth","previewSecret","forceIframeSameSiteCookie","_debug","input","init","formatErrorResponse","NODE_ENV","_headers","_auth","getEntryForResourceType","withCache","cacheKey","pathPrefix","preview","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","_locale","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","clientId","clientSecret","_token","Date","now","tokenExpiresOn","_error","title","_apiPrefix","value"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/jsonapi-errors.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug)\n    ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n    : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  // if (!context.locale && !resource?.default_langcode) {\n  //   return null\n  // }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import { JsonApiError } from \"./types\"\n\nexport class JsonApiErrors extends Error {\n  errors: JsonApiError[] | string\n  statusCode: number\n\n  constructor(errors: JsonApiError[], statusCode: number) {\n    super()\n\n    this.errors = errors\n    this.statusCode = statusCode\n    this.message = JsonApiErrors.formatMessage(errors)\n  }\n\n  private static formatMessage(errors) {\n    if (typeof errors === \"string\") {\n      return errors\n    }\n\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  JsonApiWithCacheOptions,\n  JsonApiCreateResourceBody,\n  JsonApiUpdateResourceBody,\n  DrupalClientAuthUsernamePassword,\n  DrupalClientAuthAccessToken,\n  DrupalClientAuthClientIdSecret,\n  JsonApiCreateFileResourceBody,\n  DrupalView,\n  DrupalFile,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\nimport { JsonApiErrors } from \"./jsonapi-errors\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nfunction isBasicAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthUsernamePassword {\n  return (\n    (auth as DrupalClientAuthUsernamePassword)?.username !== undefined ||\n    (auth as DrupalClientAuthUsernamePassword)?.password !== undefined\n  )\n}\n\nfunction isAccessTokenAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthAccessToken {\n  return (auth as DrupalClientAuthAccessToken)?.access_token !== undefined\n}\n\nfunction isClientIdSecretAuth(\n  auth: DrupalClient[\"auth\"]\n): auth is DrupalClientAuthClientIdSecret {\n  return (\n    (auth as DrupalClientAuthClientIdSecret)?.clientId !== undefined ||\n    (auth as DrupalClientAuthClientIdSecret)?.clientSecret !== undefined\n  )\n}\n\nexport class DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: DrupalClientOptions[\"debug\"]\n\n  frontPage: DrupalClientOptions[\"frontPage\"]\n\n  private serializer: DrupalClientOptions[\"serializer\"]\n\n  private cache: DrupalClientOptions[\"cache\"]\n\n  private throwJsonApiErrors?: DrupalClientOptions[\"throwJsonApiErrors\"]\n\n  private logger: DrupalClientOptions[\"logger\"]\n\n  private fetcher?: DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: DrupalClientOptions[\"headers\"]\n\n  private _auth?: DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: DrupalClientOptions[\"accessToken\"]\n\n  private accessTokenScope?: DrupalClientOptions[\"accessTokenScope\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new DrupalClient.\n   *\n   * const client = new DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n      throwJsonApiErrors = true,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n    this.throwJsonApiErrors = throwJsonApiErrors\n\n    // Do not throw errors in production.\n    if (process.env.NODE_ENV === \"production\") {\n      this.throwJsonApiErrors = false\n    }\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (isBasicAuth(auth)) {\n        if (!auth.username || !auth.password) {\n          throw new Error(\n            `'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (isAccessTokenAuth(auth)) {\n        if (!auth.access_token || !auth.token_type) {\n          throw new Error(\n            `'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      credentials: \"include\",\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    // Using the auth set on the client.\n    // TODO: Abstract this to a re-usable.\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      if (init.withAuth === true) {\n        if (typeof this._auth === \"undefined\") {\n          throw new Error(\n            \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n          )\n        }\n\n        // By default, if withAuth is set to true, we use the auth configured\n        // in the client constructor.\n        if (typeof this._auth === \"function\") {\n          this._debug(`Using custom auth callback.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth()\n        } else if (typeof this._auth === \"string\") {\n          this._debug(`Using custom authorization header.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth\n        } else if (typeof this._auth === \"object\") {\n          this._debug(`Using custom auth credentials.`)\n\n          if (isBasicAuth(this._auth)) {\n            const basic = Buffer.from(\n              `${this._auth.username}:${this._auth.password}`\n            ).toString(\"base64\")\n\n            init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n          } else if (isClientIdSecretAuth(this._auth)) {\n            // Use the built-in client_credentials grant.\n            this._debug(`Using default auth (client_credentials).`)\n\n            // Fetch an access token and add it to the request.\n            // Access token can be fetched from cache or using a custom auth method.\n            const token = await this.getAccessToken(this._auth)\n            if (token) {\n              init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n            }\n          } else if (isAccessTokenAuth(this._auth)) {\n            init[\"headers\"][\n              \"Authorization\"\n            ] = `${this._auth.token_type} ${this._auth.access_token}`\n          }\n        }\n      } else if (typeof init.withAuth === \"string\") {\n        this._debug(`Using custom authorization header.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth\n      } else if (typeof init.withAuth === \"function\") {\n        this._debug(`Using custom authorization callback.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth()\n      } else if (isBasicAuth(init.withAuth)) {\n        this._debug(`Using basic authorization header`)\n\n        const basic = Buffer.from(\n          `${init.withAuth.username}:${init.withAuth.password}`\n        ).toString(\"base64\")\n\n        init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n      } else if (isClientIdSecretAuth(init.withAuth)) {\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken(init.withAuth)\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      } else if (isAccessTokenAuth(init.withAuth)) {\n        init[\"headers\"][\n          \"Authorization\"\n        ] = `${init.withAuth.token_type} ${init.withAuth.access_token}`\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    return await fetch(input, init)\n  }\n\n  async createResource<T extends JsonApiResource>(\n    type: string,\n    body: JsonApiCreateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, options?.params)\n\n    this._debug(`Creating resource of type ${type}.`)\n    this._debug(url.toString())\n\n    // Add type to body.\n    body.data.type = type\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async createFileResource<T = DrupalFile>(\n    type: string,\n    body: JsonApiCreateFileResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const hostType = body?.data?.attributes?.type\n\n    const apiPath = await this.getEntryForResourceType(\n      hostType,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(\n      `${apiPath}/${body.data.attributes.field}`,\n      options?.params\n    )\n\n    this._debug(`Creating file resource for media of type ${type}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Accept: \"application/vnd.api+json\",\n        \"Content-Disposition\": `file; filename=\"${body.data.attributes.filename}\"`,\n      },\n      body: body.data.attributes.file,\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async updateResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    body: JsonApiUpdateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Updating resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    // Update body.\n    body.data.type = type\n    body.data.id = uuid\n\n    const response = await this.fetch(url.toString(), {\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async deleteResource(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<boolean> {\n    options = {\n      withAuth: true,\n      params: {},\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Deleting resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"DELETE\",\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    return response.status === 204\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    const previewData = context.previewData as {\n      resourceVersion?: string\n    }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n      params: {},\n      ...options,\n    }\n\n    const _options = {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    }\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n\n      // Given we already have the path info, we can skip subrequests and just make a simple\n      // request to the Drupal site to get the entity.\n      if (input.entity?.uuid) {\n        return await this.getResource<T>(type, input.entity.uuid, _options)\n      }\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const resource = await this.getResourceByPath<T>(path, _options)\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          this.throwError(new Error(error.message))\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      this.throwError(new Error(this.formatJsonApiErrors(data.errors)))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    this._debug(`Fetching resource collection of type ${type}`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      // Do not throw errors here.\n      // Otherwise next.js will catch error and throw a 500.\n      // We want a 404.\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    return await this.translatePath(path, {\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug)\n      ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n      : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      this.throwError(\n        new Error(\n          `Failed to fetch JSON:API index at ${url.toString()} - ${\n            error.message\n          }`\n        )\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, plugin } = request.query\n\n    try {\n      // Always clear preview data to handle different scopes.\n      response.clearPreviewData()\n\n      // Validate the preview url.\n      const validateUrl = this.buildUrl(\"/next/preview-url\")\n      const result = await this.fetch(validateUrl.toString(), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(request.query),\n      })\n\n      if (!result.ok) {\n        response.statusCode = result.status\n\n        return response.json(await result.json())\n      }\n\n      const validationPayload = await result.json()\n\n      response.setPreviewData({\n        resourceVersion,\n        plugin,\n        ...validationPayload,\n      })\n\n      // Fix issue with cookie.\n      // See https://github.com/vercel/next.js/discussions/32238.\n      // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n      if (this.forceIframeSameSiteCookie) {\n        const previous = response.getHeader(\"Set-Cookie\") as string[]\n        previous.forEach((cookie, index) => {\n          previous[index] = cookie.replace(\n            \"SameSite=Lax\",\n            \"SameSite=None;Secure\"\n          )\n        })\n        response.setHeader(`Set-Cookie`, previous)\n      }\n\n      // We can safely redirect to the slug since this has been validated on the server.\n      response.writeHead(307, { Location: slug })\n\n      return response.end()\n    } catch (error) {\n      return response.status(422).end()\n    }\n  }\n\n  async getMenu<T = DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T = JsonApiResource>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<DrupalView<T>> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(\n    opts?: DrupalClientAuthClientIdSecret\n  ): Promise<AccessToken> {\n    if (this.accessToken && this.accessTokenScope === opts?.scope) {\n      return this.accessToken\n    }\n\n    if (!opts?.clientId || !opts?.clientSecret) {\n      if (typeof this._auth === \"undefined\") {\n        throw new Error(\n          \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n        )\n      }\n    }\n\n    if (\n      !isClientIdSecretAuth(this._auth) ||\n      (opts && !isClientIdSecretAuth(opts))\n    ) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    const clientId = opts?.clientId || this._auth.clientId\n    const clientSecret = opts?.clientSecret || this._auth.clientSecret\n    const url = this.buildUrl(opts?.url || this._auth.url || DEFAULT_AUTH_URL)\n\n    if (\n      this.accessTokenScope === opts?.scope &&\n      this._token &&\n      Date.now() < this.tokenExpiresOn\n    ) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString(\"base64\")\n\n    let body = `grant_type=client_credentials`\n\n    if (opts?.scope) {\n      body = `${body}&scope=${opts.scope}`\n\n      this._debug(`Using scope: ${opts.scope}`)\n    }\n\n    const response = await fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    this.accessTokenScope = opts?.scope\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async getErrorsFromResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return _error.errors\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n\n  // Error handling.\n  // If throwErrors is enable, we show errors in the Next.js overlay.\n  // Otherwise we log the errors even if debugging is turned off.\n  // In production, errors are always logged never thrown.\n  private throwError(error: Error) {\n    if (!this.throwJsonApiErrors) {\n      return this.logger.error(error)\n    }\n\n    throw error\n  }\n\n  private async handleJsonApiErrors(response: Response) {\n    if (!response?.ok) {\n      const errors = await this.getErrorsFromResponse(response)\n      throw new JsonApiErrors(errors, response.status)\n    }\n  }\n\n  private getAuthFromContextAndOptions(\n    context: GetStaticPropsContext,\n    options: JsonApiWithAuthOptions\n  ) {\n    // If not in preview or withAuth is provided, use that.\n    if (!context.preview) {\n      // If we have provided an auth, use that.\n      if (typeof options?.withAuth !== \"undefined\") {\n        return options.withAuth\n      }\n\n      // Otherwise we fallback to the global auth.\n      return this.withAuth\n    }\n\n    // If no plugin is provided, return.\n    const plugin = context.previewData?.[\"plugin\"]\n    if (!plugin) {\n      return null\n    }\n\n    let withAuth = this._auth\n\n    if (plugin === \"simple_oauth\") {\n      // If we are using a client id and secret auth, pass the scope.\n      if (isClientIdSecretAuth(withAuth) && context.previewData?.[\"scope\"]) {\n        withAuth = {\n          ...withAuth,\n          scope: context.previewData?.[\"scope\"],\n        }\n      }\n    }\n\n    if (plugin === \"jwt\") {\n      const accessToken = context.previewData?.[\"access_token\"]\n\n      if (accessToken) {\n        return `Bearer ${accessToken}`\n      }\n    }\n\n    return withAuth\n  }\n}\n"],"names":["cache","NodeCache","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","CACHE_KEY","access_token","basic","Buffer","from","toString","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","response","ok","Error","statusText","json","result","set","expires_in","buildHeaders","accessToken","token","UNSTABLE_DRUPAL_ACCESS_TOKEN","getJsonApiIndex","locale","options","url","buildUrl","JSONAPI_PREFIX","getJsonApiPathForResourceType","type","index","links","href","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","path","params","URL","charAt","search","stringify","getPathFromContext","context","prefix","slug","Array","isArray","map","s","encodeURIComponent","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","buildMenuTree","tree","length","children","filter","link","id","getResourceCollectionFromContext","getResourceCollection","undefined","apiPath","getPathsFromContext","types","Promise","all","locales","resources","buildPathsFromResources","paths","flat","flatMap","resource","alias","replace","split","getResource","uuid","getResourceByPath","isVersionable","indexOf","resourceVersion","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResourceFromContext","test","previewData","getResourcePreviewUrl","entity","default_langcode","langcode","PreviewHandler","request","query","secret","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","setPreviewData","writeHead","Location","DrupalPreview","translatePathFromContext","translatePath","getResourceTypeFromContext","jsonapi","resourceName","getSearchIndexFromContext","getSearchIndex","getView","viewId","displayId","results","meta","useMenu","router","useRouter","React","setData","error","setError","isLoading","setIsLoading","fetchMenuItems","logger","log","console","debug","warn","JsonApiErrors","statusCode","formatMessage","title","recover","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","isBasicAuth","auth","username","password","isAccessTokenAuth","isClientIdSecretAuth","clientId","clientSecret","DrupalClient","baseUrl","getStaticPathsFromContext","apiPrefix","serializer","frontPage","useDefaultResourceTypeEntry","defaultLogger","withAuth","fetcher","previewSecret","forceIframeSameSiteCookie","throwJsonApiErrors","NODE_ENV","_debug","input","init","_headers","_auth","token_type","createResource","getEntryForResourceType","handleJsonApiErrors","createFileResource","hostType","attributes","field","filename","file","updateResource","deleteResource","withCache","cacheKey","pathPrefix","getAuthFromContextAndOptions","throwError","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","preview","plugin","clearPreviewData","validateUrl","validationPayload","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","opts","accessTokenScope","scope","_token","Date","now","tokenExpiresOn","getErrorsFromResponse","_error","_apiPrefix","value"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-drupal/dist/index.modern.js b/node_modules/next-drupal/dist/index.modern.js
index d63c08c..9708739 100644
--- a/node_modules/next-drupal/dist/index.modern.js
+++ b/node_modules/next-drupal/dist/index.modern.js
@@ -135,7 +135,7 @@ function getPathFromContext(context, prefix = "") {
   let {
     slug
   } = context.params;
-  slug = Array.isArray(slug) ? slug.join("/") : slug; // Handle locale.
+  slug = Array.isArray(slug) ? slug.map(s => encodeURIComponent(s)).join("/") : slug; // Handle locale.
 
   if (context.locale && context.locale !== context.defaultLocale) {
     slug = `/${context.locale}/${slug}`;
@@ -329,10 +329,9 @@ async function getResourceFromContext(type, context, options) {
   // TODO: Figure out if we want this behavior.
   // For now this causes a bug where a non-i18n sites builds (ISR) pages for
   // localized pages.
-
-  if (!context.locale && !(resource == null ? void 0 : resource.default_langcode)) {
-    return null;
-  }
+  // if (!context.locale && !resource?.default_langcode) {
+  //   return null
+  // }
 
   return resource;
 }
@@ -653,6 +652,31 @@ const logger = {
 
 };
 
+class JsonApiErrors extends Error {
+  constructor(errors, statusCode) {
+    super();
+    this.errors = errors;
+    this.statusCode = statusCode;
+    this.message = JsonApiErrors.formatMessage(errors);
+  }
+
+  static formatMessage(errors) {
+    if (typeof errors === "string") {
+      return errors;
+    }
+
+    const [error] = errors;
+    let message = `${error.status} ${error.title}`;
+
+    if (error.detail) {
+      message += `\n${error.detail}`;
+    }
+
+    return message;
+  }
+
+}
+
 const DEFAULT_API_PREFIX = "/jsonapi";
 const DEFAULT_FRONT_PAGE = "/home";
 const DEFAULT_WITH_AUTH = false; // From simple_oauth.
@@ -663,11 +687,24 @@ const DEFAULT_HEADERS = {
   "Content-Type": "application/vnd.api+json",
   Accept: "application/vnd.api+json"
 };
-class Experiment_DrupalClient {
+
+function isBasicAuth(auth) {
+  return (auth == null ? void 0 : auth.username) !== undefined || (auth == null ? void 0 : auth.password) !== undefined;
+}
+
+function isAccessTokenAuth(auth) {
+  return (auth == null ? void 0 : auth.access_token) !== undefined;
+}
+
+function isClientIdSecretAuth(auth) {
+  return (auth == null ? void 0 : auth.clientId) !== undefined || (auth == null ? void 0 : auth.clientSecret) !== undefined;
+}
+
+class DrupalClient {
   /**
-   * Instantiates a new Experiment_DrupalClient.
+   * Instantiates a new DrupalClient.
    *
-   * const client = new Experiment_DrupalClient(baseUrl)
+   * const client = new DrupalClient(baseUrl)
    *
    * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.
    * @param {options} options Options for the client. See Experiment_DrupalClientOptions.
@@ -693,7 +730,8 @@ class Experiment_DrupalClient {
       auth,
       previewSecret,
       accessToken,
-      forceIframeSameSiteCookie = false
+      forceIframeSameSiteCookie = false,
+      throwJsonApiErrors = true
     } = options;
     this.baseUrl = baseUrl;
     this.apiPrefix = apiPrefix;
@@ -710,6 +748,11 @@ class Experiment_DrupalClient {
     this.cache = cache;
     this.accessToken = accessToken;
     this.forceIframeSameSiteCookie = forceIframeSameSiteCookie;
+    this.throwJsonApiErrors = throwJsonApiErrors; // Do not throw errors in production.
+
+    if (process.env.NODE_ENV === "production") {
+      this.throwJsonApiErrors = false;
+    }
 
     this._debug("Debug mode is on.");
   }
@@ -724,7 +767,15 @@ class Experiment_DrupalClient {
 
   set auth(auth) {
     if (typeof auth === "object") {
-      if (!auth.clientId || !auth.clientSecret) {
+      if (isBasicAuth(auth)) {
+        if (!auth.username || !auth.password) {
+          throw new Error(`'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`);
+        }
+      } else if (isAccessTokenAuth(auth)) {
+        if (!auth.access_token || !auth.token_type) {
+          throw new Error(`'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`);
+        }
+      } else if (!auth.clientId || !auth.clientSecret) {
         throw new Error(`'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`);
       }
 
@@ -751,28 +802,73 @@ class Experiment_DrupalClient {
     var _init, _init2;
 
     init = _extends({}, init, {
+      credentials: "include",
       headers: _extends({}, this._headers, (_init = init) == null ? void 0 : _init.headers)
-    });
+    }); // Using the auth set on the client.
+    // TODO: Abstract this to a re-usable.
 
     if ((_init2 = init) == null ? void 0 : _init2.withAuth) {
-      this._debug(`Using authenticated request.`); // If a custom auth is provided, use that.
+      this._debug(`Using authenticated request.`);
 
+      if (init.withAuth === true) {
+        if (typeof this._auth === "undefined") {
+          throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+        } // By default, if withAuth is set to true, we use the auth configured
+        // in the client constructor.
 
-      if (typeof this._auth === "function") {
-        this._debug(`Using custom auth.`);
 
-        init["headers"]["Authorization"] = this._auth();
-      } else {
-        // Otherwise use the built-in client_credentials grant.
-        this._debug(`Using default auth (client_credentials).`); // Fetch an access token and add it to the request.
-        // Access token can be fetched from cache or using a custom auth method.
+        if (typeof this._auth === "function") {
+          this._debug(`Using custom auth callback.`);
+
+          init["headers"]["Authorization"] = this._auth();
+        } else if (typeof this._auth === "string") {
+          this._debug(`Using custom authorization header.`);
+
+          init["headers"]["Authorization"] = this._auth;
+        } else if (typeof this._auth === "object") {
+          this._debug(`Using custom auth credentials.`);
+
+          if (isBasicAuth(this._auth)) {
+            const basic = Buffer.from(`${this._auth.username}:${this._auth.password}`).toString("base64");
+            init["headers"]["Authorization"] = `Basic ${basic}`;
+          } else if (isClientIdSecretAuth(this._auth)) {
+            // Use the built-in client_credentials grant.
+            this._debug(`Using default auth (client_credentials).`); // Fetch an access token and add it to the request.
+            // Access token can be fetched from cache or using a custom auth method.
+
+
+            const token = await this.getAccessToken(this._auth);
+
+            if (token) {
+              init["headers"]["Authorization"] = `Bearer ${token.access_token}`;
+            }
+          } else if (isAccessTokenAuth(this._auth)) {
+            init["headers"]["Authorization"] = `${this._auth.token_type} ${this._auth.access_token}`;
+          }
+        }
+      } else if (typeof init.withAuth === "string") {
+        this._debug(`Using custom authorization header.`);
+
+        init["headers"]["Authorization"] = init.withAuth;
+      } else if (typeof init.withAuth === "function") {
+        this._debug(`Using custom authorization callback.`);
 
+        init["headers"]["Authorization"] = init.withAuth();
+      } else if (isBasicAuth(init.withAuth)) {
+        this._debug(`Using basic authorization header`);
 
-        const token = await this.getAccessToken();
+        const basic = Buffer.from(`${init.withAuth.username}:${init.withAuth.password}`).toString("base64");
+        init["headers"]["Authorization"] = `Basic ${basic}`;
+      } else if (isClientIdSecretAuth(init.withAuth)) {
+        // Fetch an access token and add it to the request.
+        // Access token can be fetched from cache or using a custom auth method.
+        const token = await this.getAccessToken(init.withAuth);
 
         if (token) {
           init["headers"]["Authorization"] = `Bearer ${token.access_token}`;
         }
+      } else if (isAccessTokenAuth(init.withAuth)) {
+        init["headers"]["Authorization"] = `${init.withAuth.token_type} ${init.withAuth.access_token}`;
       }
     }
 
@@ -784,27 +880,132 @@ class Experiment_DrupalClient {
 
     this._debug(`Using default fetch (polyfilled by Next.js).`);
 
-    const response = await fetch(input, init);
+    return await fetch(input, init);
+  }
+
+  async createResource(type, body, options) {
+    var _options2, _options3, _options4;
+
+    options = _extends({
+      deserialize: true,
+      withAuth: true
+    }, options);
+    const apiPath = await this.getEntryForResourceType(type, ((_options2 = options) == null ? void 0 : _options2.locale) !== ((_options3 = options) == null ? void 0 : _options3.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(apiPath, (_options4 = options) == null ? void 0 : _options4.params);
+
+    this._debug(`Creating resource of type ${type}.`);
+
+    this._debug(url.toString()); // Add type to body.
+
+
+    body.data.type = type;
+    const response = await this.fetch(url.toString(), {
+      method: "POST",
+      body: JSON.stringify(body),
+      withAuth: options.withAuth
+    });
+
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const json = await response.json();
+    return options.deserialize ? this.deserialize(json) : json;
+  }
+
+  async createFileResource(type, body, options) {
+    var _body$data, _body$data$attributes, _options5, _options6, _options7;
+
+    options = _extends({
+      deserialize: true,
+      withAuth: true
+    }, options);
+    const hostType = body == null ? void 0 : (_body$data = body.data) == null ? void 0 : (_body$data$attributes = _body$data.attributes) == null ? void 0 : _body$data$attributes.type;
+    const apiPath = await this.getEntryForResourceType(hostType, ((_options5 = options) == null ? void 0 : _options5.locale) !== ((_options6 = options) == null ? void 0 : _options6.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(`${apiPath}/${body.data.attributes.field}`, (_options7 = options) == null ? void 0 : _options7.params);
+
+    this._debug(`Creating file resource for media of type ${type}.`);
+
+    this._debug(url.toString());
+
+    const response = await this.fetch(url.toString(), {
+      method: "POST",
+      headers: {
+        "Content-Type": "application/octet-stream",
+        Accept: "application/vnd.api+json",
+        "Content-Disposition": `file; filename="${body.data.attributes.filename}"`
+      },
+      body: body.data.attributes.file,
+      withAuth: options.withAuth
+    });
 
-    if (response == null ? void 0 : response.ok) {
-      return response;
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
     }
 
-    const message = await this.formatErrorResponse(response); // Only throw errors in development
+    const json = await response.json();
+    return options.deserialize ? this.deserialize(json) : json;
+  }
 
-    if (process.env.NODE_ENV !== "production") {
-      throw new Error(message);
-    } else {
-      if (this.debug) {
-        this.logger.error(message);
-      }
+  async updateResource(type, uuid, body, options) {
+    var _options8, _options9, _options10;
 
-      return null;
+    options = _extends({
+      deserialize: true,
+      withAuth: true
+    }, options);
+    const apiPath = await this.getEntryForResourceType(type, ((_options8 = options) == null ? void 0 : _options8.locale) !== ((_options9 = options) == null ? void 0 : _options9.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(`${apiPath}/${uuid}`, (_options10 = options) == null ? void 0 : _options10.params);
+
+    this._debug(`Updating resource of type ${type} with id ${uuid}.`);
+
+    this._debug(url.toString()); // Update body.
+
+
+    body.data.type = type;
+    body.data.id = uuid;
+    const response = await this.fetch(url.toString(), {
+      method: "PATCH",
+      body: JSON.stringify(body),
+      withAuth: options.withAuth
+    });
+
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
     }
+
+    const json = await response.json();
+    return options.deserialize ? this.deserialize(json) : json;
+  }
+
+  async deleteResource(type, uuid, options) {
+    var _options11, _options12, _options13;
+
+    options = _extends({
+      withAuth: true,
+      params: {}
+    }, options);
+    const apiPath = await this.getEntryForResourceType(type, ((_options11 = options) == null ? void 0 : _options11.locale) !== ((_options12 = options) == null ? void 0 : _options12.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(`${apiPath}/${uuid}`, (_options13 = options) == null ? void 0 : _options13.params);
+
+    this._debug(`Deleting resource of type ${type} with id ${uuid}.`);
+
+    this._debug(url.toString());
+
+    const response = await this.fetch(url.toString(), {
+      method: "DELETE",
+      withAuth: options.withAuth
+    });
+
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    return response.status === 204;
   }
 
   async getResource(type, uuid, options) {
-    var _options2, _options3, _options4;
+    var _options14, _options15, _options16;
 
     options = _extends({
       deserialize: true,
@@ -825,8 +1026,8 @@ class Experiment_DrupalClient {
       }
     }
 
-    const apiPath = await this.getEntryForResourceType(type, ((_options2 = options) == null ? void 0 : _options2.locale) !== ((_options3 = options) == null ? void 0 : _options3.defaultLocale) ? options.locale : undefined);
-    const url = this.buildUrl(`${apiPath}/${uuid}`, (_options4 = options) == null ? void 0 : _options4.params);
+    const apiPath = await this.getEntryForResourceType(type, ((_options14 = options) == null ? void 0 : _options14.locale) !== ((_options15 = options) == null ? void 0 : _options15.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(`${apiPath}/${uuid}`, (_options16 = options) == null ? void 0 : _options16.params);
 
     this._debug(`Fetching resource ${type} with id ${uuid}.`);
 
@@ -835,6 +1036,11 @@ class Experiment_DrupalClient {
     const response = await this.fetch(url.toString(), {
       withAuth: options.withAuth
     });
+
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
     const json = await response.json();
 
     if (options.withCache) {
@@ -845,11 +1051,33 @@ class Experiment_DrupalClient {
   }
 
   async getResourceFromContext(input, context, options) {
-    var _options5, _options6, _options7;
+    var _options17, _options18, _options19;
 
     const type = typeof input === "string" ? input : input.jsonapi.resourceName;
+    const previewData = context.previewData;
+    options = _extends({
+      // Add support for revisions for node by default.
+      // TODO: Make this required before stable?
+      isVersionable: /^node--/.test(type),
+      deserialize: true,
+      pathPrefix: "/",
+      withAuth: this.getAuthFromContextAndOptions(context, options),
+      params: {}
+    }, options);
+    const _options = {
+      deserialize: options.deserialize,
+      isVersionable: options.isVersionable,
+      locale: context.locale,
+      defaultLocale: context.defaultLocale,
+      withAuth: (_options17 = options) == null ? void 0 : _options17.withAuth,
+      params: _extends({
+        resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
+      }, (_options18 = options) == null ? void 0 : _options18.params)
+    };
 
     if (typeof input !== "string") {
+      var _input$entity;
+
       // Fix for subrequests and translation.
       // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
       // @shadcn, note to self:
@@ -859,32 +1087,19 @@ class Experiment_DrupalClient {
       // However a subrequests to /es/subrequests for decoupled router will fail.
       if (context.locale && input.entity.langcode !== context.locale) {
         context.locale = input.entity.langcode;
+      } // Given we already have the path info, we can skip subrequests and just make a simple
+      // request to the Drupal site to get the entity.
+
+
+      if ((_input$entity = input.entity) == null ? void 0 : _input$entity.uuid) {
+        return await this.getResource(type, input.entity.uuid, _options);
       }
     }
 
-    options = _extends({
-      // Add support for revisions for node by default.
-      // TODO: Make this required before stable?
-      isVersionable: /^node--/.test(type),
-      deserialize: true,
-      pathPrefix: "/",
-      withAuth: this.withAuth,
-      params: {}
-    }, options);
     const path = this.getPathFromContext(context, {
-      pathPrefix: (_options5 = options) == null ? void 0 : _options5.pathPrefix
+      pathPrefix: (_options19 = options) == null ? void 0 : _options19.pathPrefix
     });
-    const previewData = context.previewData;
-    const resource = await this.getResourceByPath(path, {
-      deserialize: options.deserialize,
-      isVersionable: options.isVersionable,
-      locale: context.locale,
-      defaultLocale: context.defaultLocale,
-      withAuth: context.preview || ((_options6 = options) == null ? void 0 : _options6.withAuth),
-      params: _extends({
-        resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
-      }, (_options7 = options) == null ? void 0 : _options7.params)
-    }); // If no locale is passed, skip entity if not default_langcode.
+    const resource = await this.getResourceByPath(path, _options); // If no locale is passed, skip entity if not default_langcode.
     // This happens because decoupled_router will still translate the path
     // to a resource.
     // TODO: Figure out if we want this behavior.
@@ -982,7 +1197,7 @@ class Experiment_DrupalClient {
         const error = JSON.parse(json.router.body);
 
         if (error == null ? void 0 : error.message) {
-          throw new Error(error.message);
+          this.throwError(new Error(error.message));
         }
       }
 
@@ -992,37 +1207,46 @@ class Experiment_DrupalClient {
     const data = JSON.parse((_json$resolvedResourc2 = json["resolvedResource#uri{0}"]) == null ? void 0 : _json$resolvedResourc2.body);
 
     if (data.errors) {
-      throw new Error(this.formatJsonApiErrors(data.errors));
+      this.throwError(new Error(this.formatJsonApiErrors(data.errors)));
     }
 
     return options.deserialize ? this.deserialize(data) : data;
   }
 
   async getResourceCollection(type, options) {
-    var _options8, _options9, _options10;
+    var _options20, _options21, _options22;
 
     options = _extends({
       withAuth: this.withAuth,
       deserialize: true
     }, options);
-    const apiPath = await this.getEntryForResourceType(type, ((_options8 = options) == null ? void 0 : _options8.locale) !== ((_options9 = options) == null ? void 0 : _options9.defaultLocale) ? options.locale : undefined);
-    const url = this.buildUrl(apiPath, _extends({}, (_options10 = options) == null ? void 0 : _options10.params));
+    const apiPath = await this.getEntryForResourceType(type, ((_options20 = options) == null ? void 0 : _options20.locale) !== ((_options21 = options) == null ? void 0 : _options21.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(apiPath, _extends({}, (_options22 = options) == null ? void 0 : _options22.params));
+
+    this._debug(`Fetching resource collection of type ${type}`);
+
+    this._debug(url.toString());
+
     const response = await this.fetch(url.toString(), {
       withAuth: options.withAuth
     });
+
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
     const json = await response.json();
     return options.deserialize ? this.deserialize(json) : json;
   }
 
   async getResourceCollectionFromContext(type, context, options) {
     options = _extends({
-      withAuth: this.withAuth,
       deserialize: true
     }, options);
     return await this.getResourceCollection(type, _extends({}, options, {
       locale: context.locale,
       defaultLocale: context.defaultLocale,
-      withAuth: context.preview || options.withAuth
+      withAuth: this.getAuthFromContextAndOptions(context, options)
     }));
   }
 
@@ -1040,13 +1264,13 @@ class Experiment_DrupalClient {
     }
 
     const paths = await Promise.all(types.map(async function (type) {
-      var _options11, _context$locales;
+      var _options23, _context$locales;
 
       // Use sparse fieldset to expand max size.
       // Note we don't need status filter here since this runs non-authenticated (by default).
       const params = _extends({
         [`fields[${type}]`]: "path"
-      }, (_options11 = options) == null ? void 0 : _options11.params); // Handle localized path aliases
+      }, (_options23 = options) == null ? void 0 : _options23.params); // Handle localized path aliases
 
 
       if (!((_context$locales = context.locales) == null ? void 0 : _context$locales.length)) {
@@ -1122,6 +1346,9 @@ class Experiment_DrupalClient {
     });
 
     if (!(response == null ? void 0 : response.ok)) {
+      // Do not throw errors here.
+      // Otherwise next.js will catch error and throw a 500.
+      // We want a 404.
       return null;
     }
 
@@ -1131,16 +1358,14 @@ class Experiment_DrupalClient {
 
   async translatePathFromContext(context, options) {
     options = _extends({
-      pathPrefix: "/",
-      withAuth: this.withAuth
+      pathPrefix: "/"
     }, options);
     const path = this.getPathFromContext(context, {
       pathPrefix: options.pathPrefix
     });
-    const response = await this.translatePath(path, {
-      withAuth: context.preview || options.withAuth
+    return await this.translatePath(path, {
+      withAuth: this.getAuthFromContextAndOptions(context, options)
     });
-    return response;
   }
 
   getPathFromContext(context, options) {
@@ -1156,7 +1381,7 @@ class Experiment_DrupalClient {
       pathPrefix = `/${context.locale}${pathPrefix}`;
     }
 
-    slug = Array.isArray(slug) ? slug.join("/") : slug; // Handle front page.
+    slug = Array.isArray(slug) ? slug.map(s => encodeURIComponent(s)).join("/") : slug; // Handle front page.
 
     if (!slug) {
       slug = this.frontPage;
@@ -1177,7 +1402,7 @@ class Experiment_DrupalClient {
       });
       return await response.json();
     } catch (error) {
-      throw new Error(`Failed to fetch JSON:API index at ${url.toString()} - ${error.message}`);
+      this.throwError(new Error(`Failed to fetch JSON:API index at ${url.toString()} - ${error.message}`));
     }
   }
 
@@ -1217,75 +1442,55 @@ class Experiment_DrupalClient {
     const {
       slug,
       resourceVersion,
-      secret,
-      locale,
-      defaultLocale
+      plugin
     } = request.query;
 
-    if (secret !== this.previewSecret) {
-      return response.status(401).json({
-        message: (options == null ? void 0 : options.errorMessages.secret) || "Invalid preview secret."
-      });
-    }
-
-    if (!slug) {
-      return response.status(401).end({
-        message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug."
-      });
-    }
-
-    let _options = {
-      isVersionable: !!resourceVersion
-    };
-
-    if (locale && defaultLocale) {
-      // Fix for und locale.
-      const _locale = locale === "und" ? defaultLocale : locale;
-
-      _options = _extends({}, _options, {
-        locale: _locale,
-        defaultLocale: defaultLocale
+    try {
+      // Always clear preview data to handle different scopes.
+      response.clearPreviewData(); // Validate the preview url.
+
+      const validateUrl = this.buildUrl("/next/preview-url");
+      const result = await this.fetch(validateUrl.toString(), {
+        method: "POST",
+        headers: {
+          "Content-Type": "application/json"
+        },
+        body: JSON.stringify(request.query)
       });
-    }
-
-    const entity = await this.getResourceByPath(slug, _extends({
-      withAuth: true
-    }, _options));
-
-    if (!entity || !(entity == null ? void 0 : entity.path)) {
-      throw new Error(`The path attribute is missing for entity with slug ${slug}`);
-    }
 
-    const url = (entity == null ? void 0 : entity.default_langcode) ? entity.path.alias : `/${entity.path.langcode}${entity.path.alias}`;
+      if (!result.ok) {
+        response.statusCode = result.status;
+        return response.json(await result.json());
+      }
 
-    if (!url) {
-      response.status(404).end({
-        message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug"
-      });
-    }
+      const validationPayload = await result.json();
+      response.setPreviewData(_extends({
+        resourceVersion,
+        plugin
+      }, validationPayload)); // Fix issue with cookie.
+      // See https://github.com/vercel/next.js/discussions/32238.
+      // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+
+      if (this.forceIframeSameSiteCookie) {
+        const previous = response.getHeader("Set-Cookie");
+        previous.forEach((cookie, index) => {
+          previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
+        });
+        response.setHeader(`Set-Cookie`, previous);
+      } // We can safely redirect to the slug since this has been validated on the server.
 
-    response.setPreviewData({
-      resourceVersion
-    }); // Fix issue with cookie.
-    // See https://github.com/vercel/next.js/discussions/32238.
-    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
 
-    if (this.forceIframeSameSiteCookie) {
-      const previous = response.getHeader("Set-Cookie");
-      previous.forEach((cookie, index) => {
-        previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
+      response.writeHead(307, {
+        Location: slug
       });
-      response.setHeader(`Set-Cookie`, previous);
+      return response.end();
+    } catch (error) {
+      return response.status(422).end();
     }
-
-    response.writeHead(307, {
-      Location: url
-    });
-    return response.end();
   }
 
   async getMenu(name, options) {
-    var _options12;
+    var _options24;
 
     options = _extends({
       withAuth: this.withAuth,
@@ -1304,7 +1509,7 @@ class Experiment_DrupalClient {
       }
     }
 
-    const localePrefix = ((_options12 = options) == null ? void 0 : _options12.locale) && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+    const localePrefix = ((_options24 = options) == null ? void 0 : _options24.locale) && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
     const url = this.buildUrl(`${localePrefix}${this.apiPrefix}/menu_items/${name}`, options.params);
 
     this._debug(`Fetching menu items for ${name}.`);
@@ -1314,6 +1519,11 @@ class Experiment_DrupalClient {
     const response = await this.fetch(url.toString(), {
       withAuth: options.withAuth
     });
+
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
     const data = await response.json();
     const items = options.deserialize ? this.deserialize(data) : data;
     const {
@@ -1345,19 +1555,24 @@ class Experiment_DrupalClient {
   }
 
   async getView(name, options) {
-    var _options13;
+    var _options25;
 
     options = _extends({
       withAuth: this.withAuth,
       deserialize: true,
       params: {}
     }, options);
-    const localePrefix = ((_options13 = options) == null ? void 0 : _options13.locale) && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+    const localePrefix = ((_options25 = options) == null ? void 0 : _options25.locale) && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
     const [viewId, displayId] = name.split("--");
     const url = this.buildUrl(`${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`, options.params);
     const response = await this.fetch(url.toString(), {
       withAuth: options.withAuth
     });
+
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
     const data = await response.json();
     const results = options.deserialize ? this.deserialize(data) : data;
     return {
@@ -1369,17 +1584,22 @@ class Experiment_DrupalClient {
   }
 
   async getSearchIndex(name, options) {
-    var _options14;
+    var _options26;
 
     options = _extends({
       withAuth: this.withAuth,
       deserialize: true
     }, options);
-    const localePrefix = ((_options14 = options) == null ? void 0 : _options14.locale) && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+    const localePrefix = ((_options26 = options) == null ? void 0 : _options26.locale) && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
     const url = this.buildUrl(`${localePrefix}${this.apiPrefix}/index/${name}`, options.params);
     const response = await this.fetch(url.toString(), {
       withAuth: options.withAuth
     });
+
+    if (!(response == null ? void 0 : response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
     const json = await response.json();
     return options.deserialize ? this.deserialize(json) : json;
   }
@@ -1406,20 +1626,26 @@ class Experiment_DrupalClient {
     return url;
   }
 
-  async getAccessToken() {
-    if (this.accessToken) {
+  async getAccessToken(opts) {
+    if (this.accessToken && this.accessTokenScope === (opts == null ? void 0 : opts.scope)) {
       return this.accessToken;
     }
 
-    if (typeof this._auth !== "object") {
-      throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+    if (!(opts == null ? void 0 : opts.clientId) || !(opts == null ? void 0 : opts.clientSecret)) {
+      if (typeof this._auth === "undefined") {
+        throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+      }
     }
 
-    if (!this._auth.clientId || !this._auth.clientSecret) {
+    if (!isClientIdSecretAuth(this._auth) || opts && !isClientIdSecretAuth(opts)) {
       throw new Error(`'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`);
     }
 
-    if (this._token && Date.now() < this.tokenExpiresOn) {
+    const clientId = (opts == null ? void 0 : opts.clientId) || this._auth.clientId;
+    const clientSecret = (opts == null ? void 0 : opts.clientSecret) || this._auth.clientSecret;
+    const url = this.buildUrl((opts == null ? void 0 : opts.url) || this._auth.url || DEFAULT_AUTH_URL);
+
+    if (this.accessTokenScope === (opts == null ? void 0 : opts.scope) && this._token && Date.now() < this.tokenExpiresOn) {
       this._debug(`Using existing access token.`);
 
       return this._token;
@@ -1427,18 +1653,26 @@ class Experiment_DrupalClient {
 
     this._debug(`Fetching new access token.`);
 
-    const basic = Buffer.from(`${this._auth.clientId}:${this._auth.clientSecret}`).toString("base64");
-    const response = await fetch(`${this.baseUrl}${this._auth.url}`, {
+    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString("base64");
+    let body = `grant_type=client_credentials`;
+
+    if (opts == null ? void 0 : opts.scope) {
+      body = `${body}&scope=${opts.scope}`;
+
+      this._debug(`Using scope: ${opts.scope}`);
+    }
+
+    const response = await fetch(url.toString(), {
       method: "POST",
       headers: {
         Authorization: `Basic ${basic}`,
         "Content-Type": "application/x-www-form-urlencoded"
       },
-      body: `grant_type=client_credentials`
+      body
     });
 
     if (!(response == null ? void 0 : response.ok)) {
-      throw new Error(response == null ? void 0 : response.statusText);
+      await this.handleJsonApiErrors(response);
     }
 
     const result = await response.json();
@@ -1446,6 +1680,7 @@ class Experiment_DrupalClient {
     this._debug(result);
 
     this.token = result;
+    this.accessTokenScope = opts == null ? void 0 : opts.scope;
     return result;
   }
 
@@ -1454,7 +1689,7 @@ class Experiment_DrupalClient {
     return this.serializer.deserialize(body, options);
   }
 
-  async formatErrorResponse(response) {
+  async getErrorsFromResponse(response) {
     const type = response.headers.get("content-type");
 
     if (type === "application/json") {
@@ -1471,7 +1706,7 @@ class Experiment_DrupalClient {
       const _error = await response.json();
 
       if (_error == null ? void 0 : (_error$errors = _error.errors) == null ? void 0 : _error$errors.length) {
-        return this.formatJsonApiErrors(_error.errors);
+        return _error.errors;
       }
     }
 
@@ -1491,9 +1726,77 @@ class Experiment_DrupalClient {
 
   _debug(message) {
     !!this.debug && this.logger.debug(message);
+  } // Error handling.
+  // If throwErrors is enable, we show errors in the Next.js overlay.
+  // Otherwise we log the errors even if debugging is turned off.
+  // In production, errors are always logged never thrown.
+
+
+  throwError(error) {
+    if (!this.throwJsonApiErrors) {
+      return this.logger.error(error);
+    }
+
+    throw error;
+  }
+
+  async handleJsonApiErrors(response) {
+    if (!(response == null ? void 0 : response.ok)) {
+      const errors = await this.getErrorsFromResponse(response);
+      throw new JsonApiErrors(errors, response.status);
+    }
+  }
+
+  getAuthFromContextAndOptions(context, options) {
+    var _context$previewData;
+
+    // If not in preview or withAuth is provided, use that.
+    if (!context.preview) {
+      // If we have provided an auth, use that.
+      if (typeof (options == null ? void 0 : options.withAuth) !== "undefined") {
+        return options.withAuth;
+      } // Otherwise we fallback to the global auth.
+
+
+      return this.withAuth;
+    } // If no plugin is provided, return.
+
+
+    const plugin = (_context$previewData = context.previewData) == null ? void 0 : _context$previewData["plugin"];
+
+    if (!plugin) {
+      return null;
+    }
+
+    let withAuth = this._auth;
+
+    if (plugin === "simple_oauth") {
+      var _context$previewData2;
+
+      // If we are using a client id and secret auth, pass the scope.
+      if (isClientIdSecretAuth(withAuth) && ((_context$previewData2 = context.previewData) == null ? void 0 : _context$previewData2["scope"])) {
+        var _context$previewData3;
+
+        withAuth = _extends({}, withAuth, {
+          scope: (_context$previewData3 = context.previewData) == null ? void 0 : _context$previewData3["scope"]
+        });
+      }
+    }
+
+    if (plugin === "jwt") {
+      var _context$previewData4;
+
+      const accessToken = (_context$previewData4 = context.previewData) == null ? void 0 : _context$previewData4["access_token"];
+
+      if (accessToken) {
+        return `Bearer ${accessToken}`;
+      }
+    }
+
+    return withAuth;
   }
 
 }
 
-export { DrupalPreview, Experiment_DrupalClient, PreviewHandler, buildUrl, deserialize, getAccessToken, getJsonApiIndex, getJsonApiPathForResourceType, getMenu, getPathsFromContext, getResource, getResourceByPath, getResourceCollection, getResourceCollectionFromContext, getResourceFromContext, getResourcePreviewUrl, getResourceTypeFromContext, getSearchIndex, getSearchIndexFromContext, getView, syncDrupalPreviewRoutes, translatePath, translatePathFromContext, useMenu };
+export { DrupalClient, DrupalPreview, JsonApiErrors, PreviewHandler, buildUrl, deserialize, getAccessToken, getJsonApiIndex, getJsonApiPathForResourceType, getMenu, getPathsFromContext, getResource, getResourceByPath, getResourceCollection, getResourceCollectionFromContext, getResourceFromContext, getResourcePreviewUrl, getResourceTypeFromContext, getSearchIndex, getSearchIndexFromContext, getView, syncDrupalPreviewRoutes, translatePath, translatePathFromContext, useMenu };
 //# sourceMappingURL=index.modern.js.map
diff --git a/node_modules/next-drupal/dist/index.modern.js.map b/node_modules/next-drupal/dist/index.modern.js.map
index 422ff5f..482e9af 100644
--- a/node_modules/next-drupal/dist/index.modern.js.map
+++ b/node_modules/next-drupal/dist/index.modern.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.modern.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  if (!context.locale && !resource?.default_langcode) {\n    return null\n  }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  Experiment_DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  GetResourcePreviewUrlOptions,\n  JsonApiWithCacheOptions,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nexport class Experiment_DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: Experiment_DrupalClientOptions[\"debug\"]\n\n  frontPage: Experiment_DrupalClientOptions[\"frontPage\"]\n\n  private serializer: Experiment_DrupalClientOptions[\"serializer\"]\n\n  private cache: Experiment_DrupalClientOptions[\"cache\"]\n\n  private logger: Experiment_DrupalClientOptions[\"logger\"]\n\n  private fetcher?: Experiment_DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: Experiment_DrupalClientOptions[\"headers\"]\n\n  private _auth?: Experiment_DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: Experiment_DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: Experiment_DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: Experiment_DrupalClientOptions[\"accessToken\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: Experiment_DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: Experiment_DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: Experiment_DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new Experiment_DrupalClient.\n   *\n   * const client = new Experiment_DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: Experiment_DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: Experiment_DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: Experiment_DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: Experiment_DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      // If a custom auth is provided, use that.\n      if (typeof this._auth === \"function\") {\n        this._debug(`Using custom auth.`)\n\n        init[\"headers\"][\"Authorization\"] = this._auth()\n      } else {\n        // Otherwise use the built-in client_credentials grant.\n        this._debug(`Using default auth (client_credentials).`)\n\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken()\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    const response = await fetch(input, init)\n\n    if (response?.ok) {\n      return response\n    }\n\n    const message = await this.formatErrorResponse(response)\n\n    // Only throw errors in development\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error(message)\n    } else {\n      if (this.debug) {\n        this.logger.error(message)\n      }\n\n      return null\n    }\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n    }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const previewData = context.previewData as { resourceVersion?: string }\n\n    const resource = await this.getResourceByPath<T>(path, {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    })\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          throw new Error(error.message)\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      throw new Error(this.formatJsonApiErrors(data.errors))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options.withAuth,\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    const response = await this.translatePath(path, {\n      withAuth: context.preview || options.withAuth,\n    })\n\n    return response\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      throw new Error(\n        `Failed to fetch JSON:API index at ${url.toString()} - ${error.message}`\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, secret, locale, defaultLocale } =\n      request.query\n\n    if (secret !== this.previewSecret) {\n      return response.status(401).json({\n        message: options?.errorMessages.secret || \"Invalid preview secret.\",\n      })\n    }\n\n    if (!slug) {\n      return response\n        .status(401)\n        .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n    }\n\n    let _options: GetResourcePreviewUrlOptions = {\n      isVersionable: !!resourceVersion,\n    }\n\n    if (locale && defaultLocale) {\n      // Fix for und locale.\n      const _locale = locale === \"und\" ? defaultLocale : locale\n\n      _options = {\n        ..._options,\n        locale: _locale as string,\n        defaultLocale: defaultLocale as string,\n      }\n    }\n\n    const entity = await this.getResourceByPath(slug as string, {\n      withAuth: true,\n      ..._options,\n    })\n\n    if (!entity || !entity?.path) {\n      throw new Error(\n        `The path attribute is missing for entity with slug ${slug}`\n      )\n    }\n\n    const url = entity?.default_langcode\n      ? entity.path.alias\n      : `/${entity.path.langcode}${entity.path.alias}`\n\n    if (!url) {\n      response\n        .status(404)\n        .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n    }\n\n    response.setPreviewData({\n      resourceVersion,\n    })\n\n    // Fix issue with cookie.\n    // See https://github.com/vercel/next.js/discussions/32238.\n    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n    if (this.forceIframeSameSiteCookie) {\n      const previous = response.getHeader(\"Set-Cookie\") as string[]\n      previous.forEach((cookie, index) => {\n        previous[index] = cookie.replace(\"SameSite=Lax\", \"SameSite=None;Secure\")\n      })\n      response.setHeader(`Set-Cookie`, previous)\n    }\n\n    response.writeHead(307, { Location: url })\n\n    return response.end()\n  }\n\n  async getMenu<T extends DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<{\n    id: string\n    results: T\n    meta: JsonApiResponse[\"meta\"]\n    links: JsonApiResponse[\"links\"]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(): Promise<AccessToken> {\n    if (this.accessToken) {\n      return this.accessToken\n    }\n\n    if (typeof this._auth !== \"object\") {\n      throw new Error(\n        \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n      )\n    }\n\n    if (!this._auth.clientId || !this._auth.clientSecret) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    if (this._token && Date.now() < this.tokenExpiresOn) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(\n      `${this._auth.clientId}:${this._auth.clientSecret}`\n    ).toString(\"base64\")\n\n    const response = await fetch(`${this.baseUrl}${this._auth.url}`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    })\n\n    if (!response?.ok) {\n      throw new Error(response?.statusText)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async formatErrorResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return this.formatJsonApiErrors(_error.errors)\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n}\n"],"names":["cache","NodeCache","CACHE_KEY","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","access_token","basic","Buffer","from","toString","response","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","ok","Error","statusText","result","json","set","expires_in","JSONAPI_PREFIX","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","options","getJsonApiPathForResourceType","type","locale","index","getJsonApiIndex","links","href","url","buildUrl","buildHeaders","path","params","URL","charAt","search","stringify","accessToken","UNSTABLE_DRUPAL_ACCESS_TOKEN","token","getPathFromContext","context","prefix","slug","Array","isArray","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","tree","buildMenuTree","length","children","filter","link","map","id","getResourceCollection","apiPath","undefined","getResourceCollectionFromContext","getPathsFromContext","types","paths","Promise","all","locales","resources","buildPathsFromResources","flat","flatMap","resource","alias","replace","split","getResourceFromContext","isVersionable","test","previewData","getResourceByPath","resourceVersion","default_langcode","indexOf","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResource","uuid","DrupalPreview","request","PreviewHandler","secret","query","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","getResourcePreviewUrl","setPreviewData","writeHead","Location","entity","langcode","translatePath","translatePathFromContext","getResourceTypeFromContext","jsonapi","resourceName","error","getSearchIndex","getSearchIndexFromContext","getView","viewId","displayId","results","meta","useMenu","router","useRouter","setData","React","setError","isLoading","setIsLoading","fetchMenuItems","logger","log","console","debug","warn","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","Experiment_DrupalClient","constructor","baseUrl","getStaticPathsFromContext","apiPrefix","serializer","frontPage","useDefaultResourceTypeEntry","defaultLogger","withAuth","fetcher","auth","previewSecret","forceIframeSameSiteCookie","_debug","_apiPrefix","clientId","clientSecret","_auth","value","_headers","_token","tokenExpiresOn","Date","now","input","init","formatErrorResponse","NODE_ENV","withCache","cacheKey","getEntryForResourceType","pathPrefix","preview","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","_locale","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","_error","title"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.modern.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/jsonapi-errors.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug)\n    ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n    : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  // if (!context.locale && !resource?.default_langcode) {\n  //   return null\n  // }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import { JsonApiError } from \"./types\"\n\nexport class JsonApiErrors extends Error {\n  errors: JsonApiError[] | string\n  statusCode: number\n\n  constructor(errors: JsonApiError[], statusCode: number) {\n    super()\n\n    this.errors = errors\n    this.statusCode = statusCode\n    this.message = JsonApiErrors.formatMessage(errors)\n  }\n\n  private static formatMessage(errors) {\n    if (typeof errors === \"string\") {\n      return errors\n    }\n\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  JsonApiWithCacheOptions,\n  JsonApiCreateResourceBody,\n  JsonApiUpdateResourceBody,\n  DrupalClientAuthUsernamePassword,\n  DrupalClientAuthAccessToken,\n  DrupalClientAuthClientIdSecret,\n  JsonApiCreateFileResourceBody,\n  DrupalView,\n  DrupalFile,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\nimport { JsonApiErrors } from \"./jsonapi-errors\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nfunction isBasicAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthUsernamePassword {\n  return (\n    (auth as DrupalClientAuthUsernamePassword)?.username !== undefined ||\n    (auth as DrupalClientAuthUsernamePassword)?.password !== undefined\n  )\n}\n\nfunction isAccessTokenAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthAccessToken {\n  return (auth as DrupalClientAuthAccessToken)?.access_token !== undefined\n}\n\nfunction isClientIdSecretAuth(\n  auth: DrupalClient[\"auth\"]\n): auth is DrupalClientAuthClientIdSecret {\n  return (\n    (auth as DrupalClientAuthClientIdSecret)?.clientId !== undefined ||\n    (auth as DrupalClientAuthClientIdSecret)?.clientSecret !== undefined\n  )\n}\n\nexport class DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: DrupalClientOptions[\"debug\"]\n\n  frontPage: DrupalClientOptions[\"frontPage\"]\n\n  private serializer: DrupalClientOptions[\"serializer\"]\n\n  private cache: DrupalClientOptions[\"cache\"]\n\n  private throwJsonApiErrors?: DrupalClientOptions[\"throwJsonApiErrors\"]\n\n  private logger: DrupalClientOptions[\"logger\"]\n\n  private fetcher?: DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: DrupalClientOptions[\"headers\"]\n\n  private _auth?: DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: DrupalClientOptions[\"accessToken\"]\n\n  private accessTokenScope?: DrupalClientOptions[\"accessTokenScope\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new DrupalClient.\n   *\n   * const client = new DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n      throwJsonApiErrors = true,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n    this.throwJsonApiErrors = throwJsonApiErrors\n\n    // Do not throw errors in production.\n    if (process.env.NODE_ENV === \"production\") {\n      this.throwJsonApiErrors = false\n    }\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (isBasicAuth(auth)) {\n        if (!auth.username || !auth.password) {\n          throw new Error(\n            `'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (isAccessTokenAuth(auth)) {\n        if (!auth.access_token || !auth.token_type) {\n          throw new Error(\n            `'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      credentials: \"include\",\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    // Using the auth set on the client.\n    // TODO: Abstract this to a re-usable.\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      if (init.withAuth === true) {\n        if (typeof this._auth === \"undefined\") {\n          throw new Error(\n            \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n          )\n        }\n\n        // By default, if withAuth is set to true, we use the auth configured\n        // in the client constructor.\n        if (typeof this._auth === \"function\") {\n          this._debug(`Using custom auth callback.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth()\n        } else if (typeof this._auth === \"string\") {\n          this._debug(`Using custom authorization header.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth\n        } else if (typeof this._auth === \"object\") {\n          this._debug(`Using custom auth credentials.`)\n\n          if (isBasicAuth(this._auth)) {\n            const basic = Buffer.from(\n              `${this._auth.username}:${this._auth.password}`\n            ).toString(\"base64\")\n\n            init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n          } else if (isClientIdSecretAuth(this._auth)) {\n            // Use the built-in client_credentials grant.\n            this._debug(`Using default auth (client_credentials).`)\n\n            // Fetch an access token and add it to the request.\n            // Access token can be fetched from cache or using a custom auth method.\n            const token = await this.getAccessToken(this._auth)\n            if (token) {\n              init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n            }\n          } else if (isAccessTokenAuth(this._auth)) {\n            init[\"headers\"][\n              \"Authorization\"\n            ] = `${this._auth.token_type} ${this._auth.access_token}`\n          }\n        }\n      } else if (typeof init.withAuth === \"string\") {\n        this._debug(`Using custom authorization header.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth\n      } else if (typeof init.withAuth === \"function\") {\n        this._debug(`Using custom authorization callback.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth()\n      } else if (isBasicAuth(init.withAuth)) {\n        this._debug(`Using basic authorization header`)\n\n        const basic = Buffer.from(\n          `${init.withAuth.username}:${init.withAuth.password}`\n        ).toString(\"base64\")\n\n        init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n      } else if (isClientIdSecretAuth(init.withAuth)) {\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken(init.withAuth)\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      } else if (isAccessTokenAuth(init.withAuth)) {\n        init[\"headers\"][\n          \"Authorization\"\n        ] = `${init.withAuth.token_type} ${init.withAuth.access_token}`\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    return await fetch(input, init)\n  }\n\n  async createResource<T extends JsonApiResource>(\n    type: string,\n    body: JsonApiCreateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, options?.params)\n\n    this._debug(`Creating resource of type ${type}.`)\n    this._debug(url.toString())\n\n    // Add type to body.\n    body.data.type = type\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async createFileResource<T = DrupalFile>(\n    type: string,\n    body: JsonApiCreateFileResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const hostType = body?.data?.attributes?.type\n\n    const apiPath = await this.getEntryForResourceType(\n      hostType,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(\n      `${apiPath}/${body.data.attributes.field}`,\n      options?.params\n    )\n\n    this._debug(`Creating file resource for media of type ${type}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Accept: \"application/vnd.api+json\",\n        \"Content-Disposition\": `file; filename=\"${body.data.attributes.filename}\"`,\n      },\n      body: body.data.attributes.file,\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async updateResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    body: JsonApiUpdateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Updating resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    // Update body.\n    body.data.type = type\n    body.data.id = uuid\n\n    const response = await this.fetch(url.toString(), {\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async deleteResource(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<boolean> {\n    options = {\n      withAuth: true,\n      params: {},\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Deleting resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"DELETE\",\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    return response.status === 204\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    const previewData = context.previewData as {\n      resourceVersion?: string\n    }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n      params: {},\n      ...options,\n    }\n\n    const _options = {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    }\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n\n      // Given we already have the path info, we can skip subrequests and just make a simple\n      // request to the Drupal site to get the entity.\n      if (input.entity?.uuid) {\n        return await this.getResource<T>(type, input.entity.uuid, _options)\n      }\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const resource = await this.getResourceByPath<T>(path, _options)\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          this.throwError(new Error(error.message))\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      this.throwError(new Error(this.formatJsonApiErrors(data.errors)))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    this._debug(`Fetching resource collection of type ${type}`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      // Do not throw errors here.\n      // Otherwise next.js will catch error and throw a 500.\n      // We want a 404.\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    return await this.translatePath(path, {\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug)\n      ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n      : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      this.throwError(\n        new Error(\n          `Failed to fetch JSON:API index at ${url.toString()} - ${\n            error.message\n          }`\n        )\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, plugin } = request.query\n\n    try {\n      // Always clear preview data to handle different scopes.\n      response.clearPreviewData()\n\n      // Validate the preview url.\n      const validateUrl = this.buildUrl(\"/next/preview-url\")\n      const result = await this.fetch(validateUrl.toString(), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(request.query),\n      })\n\n      if (!result.ok) {\n        response.statusCode = result.status\n\n        return response.json(await result.json())\n      }\n\n      const validationPayload = await result.json()\n\n      response.setPreviewData({\n        resourceVersion,\n        plugin,\n        ...validationPayload,\n      })\n\n      // Fix issue with cookie.\n      // See https://github.com/vercel/next.js/discussions/32238.\n      // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n      if (this.forceIframeSameSiteCookie) {\n        const previous = response.getHeader(\"Set-Cookie\") as string[]\n        previous.forEach((cookie, index) => {\n          previous[index] = cookie.replace(\n            \"SameSite=Lax\",\n            \"SameSite=None;Secure\"\n          )\n        })\n        response.setHeader(`Set-Cookie`, previous)\n      }\n\n      // We can safely redirect to the slug since this has been validated on the server.\n      response.writeHead(307, { Location: slug })\n\n      return response.end()\n    } catch (error) {\n      return response.status(422).end()\n    }\n  }\n\n  async getMenu<T = DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T = JsonApiResource>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<DrupalView<T>> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(\n    opts?: DrupalClientAuthClientIdSecret\n  ): Promise<AccessToken> {\n    if (this.accessToken && this.accessTokenScope === opts?.scope) {\n      return this.accessToken\n    }\n\n    if (!opts?.clientId || !opts?.clientSecret) {\n      if (typeof this._auth === \"undefined\") {\n        throw new Error(\n          \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n        )\n      }\n    }\n\n    if (\n      !isClientIdSecretAuth(this._auth) ||\n      (opts && !isClientIdSecretAuth(opts))\n    ) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    const clientId = opts?.clientId || this._auth.clientId\n    const clientSecret = opts?.clientSecret || this._auth.clientSecret\n    const url = this.buildUrl(opts?.url || this._auth.url || DEFAULT_AUTH_URL)\n\n    if (\n      this.accessTokenScope === opts?.scope &&\n      this._token &&\n      Date.now() < this.tokenExpiresOn\n    ) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString(\"base64\")\n\n    let body = `grant_type=client_credentials`\n\n    if (opts?.scope) {\n      body = `${body}&scope=${opts.scope}`\n\n      this._debug(`Using scope: ${opts.scope}`)\n    }\n\n    const response = await fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    this.accessTokenScope = opts?.scope\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async getErrorsFromResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return _error.errors\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n\n  // Error handling.\n  // If throwErrors is enable, we show errors in the Next.js overlay.\n  // Otherwise we log the errors even if debugging is turned off.\n  // In production, errors are always logged never thrown.\n  private throwError(error: Error) {\n    if (!this.throwJsonApiErrors) {\n      return this.logger.error(error)\n    }\n\n    throw error\n  }\n\n  private async handleJsonApiErrors(response: Response) {\n    if (!response?.ok) {\n      const errors = await this.getErrorsFromResponse(response)\n      throw new JsonApiErrors(errors, response.status)\n    }\n  }\n\n  private getAuthFromContextAndOptions(\n    context: GetStaticPropsContext,\n    options: JsonApiWithAuthOptions\n  ) {\n    // If not in preview or withAuth is provided, use that.\n    if (!context.preview) {\n      // If we have provided an auth, use that.\n      if (typeof options?.withAuth !== \"undefined\") {\n        return options.withAuth\n      }\n\n      // Otherwise we fallback to the global auth.\n      return this.withAuth\n    }\n\n    // If no plugin is provided, return.\n    const plugin = context.previewData?.[\"plugin\"]\n    if (!plugin) {\n      return null\n    }\n\n    let withAuth = this._auth\n\n    if (plugin === \"simple_oauth\") {\n      // If we are using a client id and secret auth, pass the scope.\n      if (isClientIdSecretAuth(withAuth) && context.previewData?.[\"scope\"]) {\n        withAuth = {\n          ...withAuth,\n          scope: context.previewData?.[\"scope\"],\n        }\n      }\n    }\n\n    if (plugin === \"jwt\") {\n      const accessToken = context.previewData?.[\"access_token\"]\n\n      if (accessToken) {\n        return `Bearer ${accessToken}`\n      }\n    }\n\n    return withAuth\n  }\n}\n"],"names":["cache","NodeCache","CACHE_KEY","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","access_token","basic","Buffer","from","toString","response","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","ok","Error","statusText","result","json","set","expires_in","JSONAPI_PREFIX","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","options","getJsonApiPathForResourceType","type","locale","index","getJsonApiIndex","links","href","url","buildUrl","buildHeaders","path","params","URL","charAt","search","stringify","accessToken","UNSTABLE_DRUPAL_ACCESS_TOKEN","token","getPathFromContext","context","prefix","slug","Array","isArray","map","s","encodeURIComponent","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","tree","buildMenuTree","length","children","filter","link","id","getResourceCollection","apiPath","undefined","getResourceCollectionFromContext","getPathsFromContext","types","paths","Promise","all","locales","resources","buildPathsFromResources","flat","flatMap","resource","alias","replace","split","getResourceFromContext","isVersionable","test","previewData","getResourceByPath","resourceVersion","indexOf","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResource","uuid","DrupalPreview","request","PreviewHandler","secret","query","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","getResourcePreviewUrl","setPreviewData","writeHead","Location","entity","default_langcode","langcode","translatePath","translatePathFromContext","getResourceTypeFromContext","jsonapi","resourceName","error","getSearchIndex","getSearchIndexFromContext","getView","viewId","displayId","results","meta","useMenu","router","useRouter","setData","React","setError","isLoading","setIsLoading","fetchMenuItems","logger","log","console","debug","warn","JsonApiErrors","constructor","statusCode","formatMessage","title","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","isBasicAuth","auth","username","password","isAccessTokenAuth","isClientIdSecretAuth","clientId","clientSecret","DrupalClient","baseUrl","getStaticPathsFromContext","apiPrefix","serializer","frontPage","useDefaultResourceTypeEntry","defaultLogger","withAuth","fetcher","previewSecret","forceIframeSameSiteCookie","throwJsonApiErrors","NODE_ENV","_debug","_apiPrefix","token_type","_auth","value","_headers","_token","tokenExpiresOn","Date","now","input","init","createResource","getEntryForResourceType","handleJsonApiErrors","createFileResource","hostType","attributes","field","filename","file","updateResource","deleteResource","withCache","cacheKey","pathPrefix","getAuthFromContextAndOptions","throwError","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","preview","plugin","clearPreviewData","validateUrl","validationPayload","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","opts","accessTokenScope","scope","getErrorsFromResponse","_error"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-drupal/dist/index.modern.mjs b/node_modules/next-drupal/dist/index.modern.mjs
new file mode 100644
index 0000000..1373015
--- /dev/null
+++ b/node_modules/next-drupal/dist/index.modern.mjs
@@ -0,0 +1,1793 @@
+import NodeCache from 'node-cache';
+import Jsona from 'jsona';
+import { stringify } from 'qs';
+import * as React from 'react';
+import { useRouter } from 'next/router';
+
+const cache = new NodeCache();
+
+const CACHE_KEY = "NEXT_DRUPAL_ACCESS_TOKEN";
+async function getAccessToken() {
+  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {
+    return null;
+  }
+
+  const cached = cache.get(CACHE_KEY);
+
+  if (cached != null && cached.access_token) {
+    return cached;
+  }
+
+  const basic = Buffer.from(`${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`).toString("base64");
+  const response = await fetch(`${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`, {
+    method: "POST",
+    headers: {
+      Authorization: `Basic ${basic}`,
+      "Content-Type": "application/x-www-form-urlencoded"
+    },
+    body: `grant_type=client_credentials`
+  });
+
+  if (!response.ok) {
+    throw new Error(response.statusText);
+  }
+
+  const result = await response.json();
+  cache.set(CACHE_KEY, result, result.expires_in);
+  return result;
+}
+
+function _extends() {
+  _extends = Object.assign || function (target) {
+    for (var i = 1; i < arguments.length; i++) {
+      var source = arguments[i];
+
+      for (var key in source) {
+        if (Object.prototype.hasOwnProperty.call(source, key)) {
+          target[key] = source[key];
+        }
+      }
+    }
+
+    return target;
+  };
+
+  return _extends.apply(this, arguments);
+}
+
+function _objectWithoutPropertiesLoose(source, excluded) {
+  if (source == null) return {};
+  var target = {};
+  var sourceKeys = Object.keys(source);
+  var key, i;
+
+  for (i = 0; i < sourceKeys.length; i++) {
+    key = sourceKeys[i];
+    if (excluded.indexOf(key) >= 0) continue;
+    target[key] = source[key];
+  }
+
+  return target;
+}
+
+const JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || "/jsonapi";
+const dataFormatter = new Jsona();
+function deserialize(body, options) {
+  if (!body) return null;
+  return dataFormatter.deserialize(body, options);
+}
+async function getJsonApiPathForResourceType(type, locale) {
+  var _index$links$type;
+
+  const index = await getJsonApiIndex(locale);
+  return index == null ? void 0 : (_index$links$type = index.links[type]) == null ? void 0 : _index$links$type.href;
+}
+async function getJsonApiIndex(locale, options) {
+  const url = buildUrl(locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`); // As per https://www.drupal.org/node/2984034 /jsonapi is public.
+  // We only call buildHeaders if accessToken or locale is explicitly set.
+  // This is for rare cases where /jsonapi might be protected.
+
+  const response = await fetch(url.toString(), {
+    headers: locale || options ? await buildHeaders(options) : {
+      "Content-Type": "application/json"
+    }
+  });
+
+  if (!response.ok) {
+    throw new Error(response.statusText);
+  }
+
+  return await response.json();
+}
+function buildUrl(path, params) {
+  const url = new URL(path.charAt(0) === "/" ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}` : path);
+
+  if (params) {
+    // Use instead URLSearchParams for nested params.
+    url.search = stringify(params);
+  }
+
+  return url;
+}
+async function buildHeaders({
+  accessToken,
+  headers = {
+    "Content-Type": "application/json"
+  }
+} = {}) {
+  // This allows an access_token (preferrably long-lived) to be set directly on the env.
+  // This reduces the number of OAuth call to the Drupal server.
+  // Intentionally marked as unstable for now.
+  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {
+    headers["Authorization"] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`;
+    return headers;
+  }
+
+  const token = accessToken || (await getAccessToken());
+
+  if (token) {
+    headers["Authorization"] = `Bearer ${token.access_token}`;
+  }
+
+  return headers;
+}
+function getPathFromContext(context, prefix = "") {
+  let {
+    slug
+  } = context.params;
+  slug = Array.isArray(slug) ? slug.map(s => encodeURIComponent(s)).join("/") : slug; // Handle locale.
+
+  if (context.locale && context.locale !== context.defaultLocale) {
+    slug = `/${context.locale}/${slug}`;
+  }
+
+  return !slug ? process.env.DRUPAL_FRONT_PAGE : prefix ? `${prefix}/${slug}` : slug;
+}
+function syncDrupalPreviewRoutes(path) {
+  if (window && window.top !== window.self) {
+    window.parent.postMessage({
+      type: "NEXT_DRUPAL_ROUTE_SYNC",
+      path
+    }, process.env.NEXT_PUBLIC_DRUPAL_BASE_URL);
+  }
+}
+
+async function getMenu(name, options) {
+  var _options;
+
+  options = _extends({
+    deserialize: true
+  }, options);
+  const localePrefix = (_options = options) != null && _options.locale && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`);
+  const response = await fetch(url.toString(), {
+    headers: await buildHeaders(options)
+  });
+
+  if (!response.ok) {
+    throw new Error(response.statusText);
+  }
+
+  const data = await response.json();
+  const items = options.deserialize ? deserialize(data) : data;
+  const {
+    items: tree
+  } = buildMenuTree(items);
+  return {
+    items,
+    tree
+  };
+}
+
+function buildMenuTree(links, parent = "") {
+  if (!(links != null && links.length)) {
+    return {
+      items: []
+    };
+  }
+
+  const children = links.filter(link => link.parent === parent);
+  return children.length ? {
+    items: children.map(link => _extends({}, link, buildMenuTree(links, link.id)))
+  } : {};
+}
+
+async function getResourceCollection(type, options) {
+  var _options, _options2, _options3;
+
+  options = _extends({
+    deserialize: true
+  }, options);
+  const apiPath = await getJsonApiPathForResourceType(type, ((_options = options) == null ? void 0 : _options.locale) !== ((_options2 = options) == null ? void 0 : _options2.defaultLocale) ? options.locale : undefined);
+
+  if (!apiPath) {
+    throw new Error(`Error: resource of type ${type} not found.`);
+  }
+
+  const url = buildUrl(apiPath, _extends({}, (_options3 = options) == null ? void 0 : _options3.params));
+  const response = await fetch(url.toString(), {
+    headers: await buildHeaders(options)
+  });
+
+  if (!response.ok) {
+    throw new Error(response.statusText);
+  }
+
+  const json = await response.json();
+  return options.deserialize ? deserialize(json) : json;
+}
+async function getResourceCollectionFromContext(type, context, options) {
+  options = _extends({
+    deserialize: true
+  }, options); // // Filter out unpublished entities.
+  // if (!context.preview) {
+  //   options.params = {
+  //     "filter[status]": "1",
+  //     ...options.params,
+  //   }
+  // }
+
+  return await getResourceCollection(type, _extends({}, options, {
+    locale: context.locale,
+    defaultLocale: context.defaultLocale
+  }));
+}
+
+async function getPathsFromContext(types, context, options = {}) {
+  if (typeof types === "string") {
+    types = [types];
+  }
+
+  const paths = await Promise.all(types.map(async type => {
+    var _context$locales;
+
+    // Use sparse fieldset to expand max size.
+    options.params = _extends({
+      [`fields[${type}]`]: "path"
+    }, options == null ? void 0 : options.params); // const paths = await Promise.all(
+    //   context.locales.map(async (locale) => {
+    //     const resources = await getResourceCollection(type, {
+    //       deserialize: true,
+    //       locale,
+    //       defaultLocale: context.defaultLocale,
+    //       ...options,
+    //     })
+    //     return buildPathsFromResources(resources, locale)
+    //   })
+    // )
+    // return paths.flat()
+    // Handle localized path aliases
+
+    if (!((_context$locales = context.locales) != null && _context$locales.length)) {
+      const resources = await getResourceCollection(type, _extends({
+        deserialize: true
+      }, options));
+      return buildPathsFromResources(resources);
+    }
+
+    const paths = await Promise.all(context.locales.map(async locale => {
+      const resources = await getResourceCollection(type, _extends({
+        deserialize: true,
+        locale,
+        defaultLocale: context.defaultLocale
+      }, options));
+      return buildPathsFromResources(resources, locale);
+    }));
+    return paths.flat();
+  }));
+  return paths.flat();
+}
+
+function buildPathsFromResources(resources, locale) {
+  return resources == null ? void 0 : resources.flatMap(resource => {
+    var _resource$path, _resource$path2;
+
+    const slug = (resource == null ? void 0 : (_resource$path = resource.path) == null ? void 0 : _resource$path.alias) === process.env.DRUPAL_FRONT_PAGE ? "/" : resource == null ? void 0 : (_resource$path2 = resource.path) == null ? void 0 : _resource$path2.alias;
+    const path = {
+      params: {
+        slug: `${slug == null ? void 0 : slug.replace(/^\/|\/$/g, "")}`.split("/")
+      }
+    };
+
+    if (locale) {
+      path["locale"] = locale;
+    }
+
+    return path;
+  });
+}
+
+const _excluded$1 = ["resourceVersion"];
+async function getResourceFromContext(type, context, options) {
+  var _options, _options2;
+
+  options = _extends({
+    deserialize: true,
+    // Add support for revisions for node by default.
+    // TODO: Make this required before stable?
+    isVersionable: /^node--/.test(type)
+  }, options);
+  const path = getPathFromContext(context, (_options = options) == null ? void 0 : _options.prefix); // Filter out unpublished entities.
+  // if (!context.preview) {
+  //   options.params = {
+  //     "filter[status]": "1",
+  //     ...options?.params,
+  //   }
+  // }
+
+  const previewData = context.previewData;
+  const resource = await getResourceByPath(path, {
+    deserialize: options.deserialize,
+    isVersionable: options.isVersionable,
+    locale: context.locale,
+    defaultLocale: context.defaultLocale,
+    params: _extends({
+      resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
+    }, (_options2 = options) == null ? void 0 : _options2.params)
+  }); // If no locale is passed, skip entity if not default_langcode.
+  // This happens because decoupled_router will still translate the path
+  // to a resource.
+  // TODO: Figure out if we want this behavior.
+  // For now this causes a bug where a non-i18n sites builds (ISR) pages for
+  // localized pages.
+  // if (!context.locale && !resource?.default_langcode) {
+  //   return null
+  // }
+
+  return resource;
+}
+async function getResourceByPath(path, options) {
+  var _json$resolvedResourc;
+
+  options = _extends({
+    deserialize: true,
+    isVersionable: false,
+    params: {}
+  }, options);
+
+  if (!path) {
+    return null;
+  }
+
+  if (options.locale && options.defaultLocale && path.indexOf(options.locale) !== 1) {
+    path = path === "/" ? path : path.replace(/^\/+/, "");
+    path = getPathFromContext({
+      params: {
+        slug: [path]
+      },
+      locale: options.locale,
+      defaultLocale: options.defaultLocale
+    });
+  }
+
+  const _options$params = options.params,
+        {
+    resourceVersion = "rel:latest-version"
+  } = _options$params,
+        params = _objectWithoutPropertiesLoose(_options$params, _excluded$1);
+
+  if (options.isVersionable) {
+    params.resourceVersion = resourceVersion;
+  }
+
+  const resourceParams = stringify(params);
+  const payload = [{
+    requestId: "router",
+    action: "view",
+    uri: `/router/translate-path?path=${path}&_format=json`,
+    headers: {
+      Accept: "application/vnd.api+json"
+    }
+  }, {
+    requestId: "resolvedResource",
+    action: "view",
+    uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,
+    waitFor: ["router"]
+  }]; // Localized subrequests.
+  // I was hoping we would not need this but it seems like subrequests is not properly
+  // setting the jsonapi locale from a translated path.
+
+  let subrequestsPath = "/subrequests";
+
+  if (options.locale && options.defaultLocale && options.locale !== options.defaultLocale) {
+    subrequestsPath = `/${options.locale}/subrequests`;
+  }
+
+  const url = buildUrl(subrequestsPath, {
+    _format: "json"
+  });
+  const response = await fetch(url.toString(), {
+    method: "POST",
+    credentials: "include",
+    headers: await buildHeaders(options),
+    redirect: "follow",
+    body: JSON.stringify(payload)
+  });
+
+  if (!response.ok) {
+    throw new Error(response.statusText);
+  }
+
+  const json = await response.json();
+
+  if (!json["resolvedResource#uri{0}"]) {
+    return null;
+  }
+
+  const data = JSON.parse((_json$resolvedResourc = json["resolvedResource#uri{0}"]) == null ? void 0 : _json$resolvedResourc.body);
+
+  if (data.errors) {
+    throw new Error(data.errors[0].detail);
+  }
+
+  return options.deserialize ? deserialize(data) : data;
+}
+async function getResource(type, uuid, options) {
+  var _options3, _options4, _options5;
+
+  options = _extends({
+    deserialize: true,
+    params: {}
+  }, options);
+  const apiPath = await getJsonApiPathForResourceType(type, ((_options3 = options) == null ? void 0 : _options3.locale) !== ((_options4 = options) == null ? void 0 : _options4.defaultLocale) ? options.locale : undefined);
+
+  if (!apiPath) {
+    throw new Error(`Error: resource of type ${type} not found.`);
+  }
+
+  const url = buildUrl(`${apiPath}/${uuid}`, _extends({}, (_options5 = options) == null ? void 0 : _options5.params));
+  const response = await fetch(url.toString(), {
+    headers: await buildHeaders(options)
+  });
+
+  if (!response.ok) {
+    throw new Error(response.statusText);
+  }
+
+  const json = await response.json();
+  return options.deserialize ? deserialize(json) : json;
+}
+
+function DrupalPreview(options) {
+  return (request, response) => PreviewHandler(request, response, options);
+}
+async function PreviewHandler(request, response, options) {
+  const {
+    slug,
+    resourceVersion,
+    secret,
+    locale,
+    defaultLocale
+  } = request.query;
+
+  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {
+    return response.status(401).json({
+      message: (options == null ? void 0 : options.errorMessages.secret) || "Invalid preview secret."
+    });
+  }
+
+  if (!slug) {
+    return response.status(401).end({
+      message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug."
+    });
+  }
+
+  let _options = {
+    isVersionable: typeof resourceVersion !== "undefined"
+  };
+
+  if (locale && defaultLocale) {
+    _options = _extends({}, _options, {
+      locale: locale,
+      defaultLocale: defaultLocale
+    });
+  }
+
+  const url = await getResourcePreviewUrl(slug, _options);
+
+  if (!url) {
+    response.status(404).end({
+      message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug"
+    });
+  }
+
+  response.setPreviewData({
+    resourceVersion
+  });
+  response.writeHead(307, {
+    Location: url
+  });
+  return response.end();
+}
+async function getResourcePreviewUrl(slug, options) {
+  const entity = await getResourceByPath(slug, options);
+
+  if (!entity) {
+    return null;
+  }
+
+  if (!(entity != null && entity.path)) {
+    throw new Error(`Error: the path attribute is missing for entity type ${entity.type}`);
+  }
+
+  return entity != null && entity.default_langcode ? entity.path.alias : `/${entity.path.langcode}${entity.path.alias}`;
+}
+
+async function translatePath(path, options) {
+  const url = buildUrl("/router/translate-path", {
+    path
+  });
+  const response = await fetch(url.toString(), {
+    headers: await buildHeaders(options)
+  });
+
+  if (!response.ok) {
+    return null;
+  }
+
+  const json = await response.json();
+  return json;
+}
+async function translatePathFromContext(context, options) {
+  options = _extends({
+    prefix: ""
+  }, options);
+  const path = getPathFromContext(context, options.prefix);
+  const response = await translatePath(path, {
+    accessToken: options.accessToken
+  });
+  return response;
+}
+
+async function getResourceTypeFromContext(context, options) {
+  try {
+    const response = await translatePathFromContext(context, options);
+    return response.jsonapi.resourceName;
+  } catch (error) {
+    return null;
+  }
+}
+
+async function getSearchIndex(name, options) {
+  var _options;
+
+  options = _extends({
+    deserialize: true
+  }, options);
+  const localePrefix = (_options = options) != null && _options.locale && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params);
+  const response = await fetch(url.toString(), {
+    headers: await buildHeaders(options)
+  });
+
+  if (!response.ok) {
+    throw new Error(response.statusText);
+  }
+
+  const json = await response.json();
+  return options.deserialize ? deserialize(json) : json;
+}
+async function getSearchIndexFromContext(name, context, options) {
+  options = _extends({
+    deserialize: true
+  }, options);
+  return await getSearchIndex(name, _extends({}, options, {
+    locale: context.locale,
+    defaultLocale: context.defaultLocale
+  }));
+}
+
+async function getView(name, options) {
+  var _options;
+
+  options = _extends({
+    deserialize: true
+  }, options);
+  const localePrefix = (_options = options) != null && _options.locale && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+  const [viewId, displayId] = name.split("--");
+  const url = buildUrl(`${localePrefix}/jsonapi/views/${viewId}/${displayId}`, options.params);
+  const response = await fetch(url.toString(), {
+    headers: await buildHeaders(options)
+  });
+
+  if (!response.ok) {
+    throw new Error(response.statusText);
+  }
+
+  const data = await response.json();
+  const results = options.deserialize ? deserialize(data) : data;
+  return {
+    results,
+    meta: data.meta,
+    links: data.links
+  };
+}
+
+function useMenu(name) {
+  const router = useRouter();
+  const [data, setData] = React.useState(null);
+  const [error, setError] = React.useState(null);
+  const [isLoading, setIsLoading] = React.useState(false);
+  React.useEffect(() => {
+    const fetchMenuItems = async () => {
+      setIsLoading(true);
+
+      try {
+        const data = await getMenu(name, {
+          locale: router.locale,
+          defaultLocale: router.defaultLocale
+        });
+        setData(data);
+        setIsLoading(false);
+      } catch (error) {
+        setError(error);
+        setIsLoading(false);
+      }
+    };
+
+    fetchMenuItems();
+  }, [router.locale]);
+  return _extends({}, data, {
+    error,
+    isLoading
+  });
+}
+
+// Default logger. Uses console.
+const logger = {
+  log(message) {
+    console.log(`[next-drupal][log]:`, message);
+  },
+
+  debug(message) {
+    console.debug(`[next-drupal][debug]:`, message);
+  },
+
+  warn(message) {
+    console.warn(`[next-drupal][debug]:`, message);
+  },
+
+  error(message) {
+    console.error(`[next-drupal][error]:`, message);
+  }
+
+};
+
+class JsonApiErrors extends Error {
+  constructor(errors, statusCode) {
+    super();
+    this.errors = void 0;
+    this.statusCode = void 0;
+    this.errors = errors;
+    this.statusCode = statusCode;
+    this.message = JsonApiErrors.formatMessage(errors);
+  }
+
+  static formatMessage(errors) {
+    if (typeof errors === "string") {
+      return errors;
+    }
+
+    const [error] = errors;
+    let message = `${error.status} ${error.title}`;
+
+    if (error.detail) {
+      message += `\n${error.detail}`;
+    }
+
+    return message;
+  }
+
+}
+
+const _excluded = ["resourceVersion"];
+const DEFAULT_API_PREFIX = "/jsonapi";
+const DEFAULT_FRONT_PAGE = "/home";
+const DEFAULT_WITH_AUTH = false; // From simple_oauth.
+
+const DEFAULT_AUTH_URL = "/oauth/token"; // See https://jsonapi.org/format/#content-negotiation.
+
+const DEFAULT_HEADERS = {
+  "Content-Type": "application/vnd.api+json",
+  Accept: "application/vnd.api+json"
+};
+
+function isBasicAuth(auth) {
+  return (auth == null ? void 0 : auth.username) !== undefined || (auth == null ? void 0 : auth.password) !== undefined;
+}
+
+function isAccessTokenAuth(auth) {
+  return (auth == null ? void 0 : auth.access_token) !== undefined;
+}
+
+function isClientIdSecretAuth(auth) {
+  return (auth == null ? void 0 : auth.clientId) !== undefined || (auth == null ? void 0 : auth.clientSecret) !== undefined;
+}
+
+class DrupalClient {
+  /**
+   * Instantiates a new DrupalClient.
+   *
+   * const client = new DrupalClient(baseUrl)
+   *
+   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.
+   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.
+   */
+  constructor(baseUrl, options = {}) {
+    this.baseUrl = void 0;
+    this.debug = void 0;
+    this.frontPage = void 0;
+    this.serializer = void 0;
+    this.cache = void 0;
+    this.throwJsonApiErrors = void 0;
+    this.logger = void 0;
+    this.fetcher = void 0;
+    this._headers = void 0;
+    this._auth = void 0;
+    this._apiPrefix = void 0;
+    this.useDefaultResourceTypeEntry = void 0;
+    this._token = void 0;
+    this.accessToken = void 0;
+    this.tokenExpiresOn = void 0;
+    this.withAuth = void 0;
+    this.previewSecret = void 0;
+    this.forceIframeSameSiteCookie = void 0;
+    this.getPathsFromContext = this.getStaticPathsFromContext;
+
+    if (!baseUrl || typeof baseUrl !== "string") {
+      throw new Error("The 'baseUrl' param is required.");
+    }
+
+    const {
+      apiPrefix = DEFAULT_API_PREFIX,
+      serializer = new Jsona(),
+      cache = null,
+      debug = false,
+      frontPage = DEFAULT_FRONT_PAGE,
+      useDefaultResourceTypeEntry = false,
+      headers = DEFAULT_HEADERS,
+      logger: logger$1 = logger,
+      withAuth = DEFAULT_WITH_AUTH,
+      fetcher,
+      auth,
+      previewSecret,
+      accessToken,
+      forceIframeSameSiteCookie = false,
+      throwJsonApiErrors = true
+    } = options;
+    this.baseUrl = baseUrl;
+    this.apiPrefix = apiPrefix;
+    this.serializer = serializer;
+    this.frontPage = frontPage;
+    this.debug = debug;
+    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry;
+    this.fetcher = fetcher;
+    this.auth = auth;
+    this.headers = headers;
+    this.logger = logger$1;
+    this.withAuth = withAuth;
+    this.previewSecret = previewSecret;
+    this.cache = cache;
+    this.accessToken = accessToken;
+    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie;
+    this.throwJsonApiErrors = throwJsonApiErrors; // Do not throw errors in production.
+
+    if (process.env.NODE_ENV === "production") {
+      this.throwJsonApiErrors = false;
+    }
+
+    this._debug("Debug mode is on.");
+  }
+
+  set apiPrefix(apiPrefix) {
+    this._apiPrefix = apiPrefix.charAt(0) === "/" ? apiPrefix : `/${apiPrefix}`;
+  }
+
+  get apiPrefix() {
+    return this._apiPrefix;
+  }
+
+  set auth(auth) {
+    if (typeof auth === "object") {
+      if (isBasicAuth(auth)) {
+        if (!auth.username || !auth.password) {
+          throw new Error(`'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`);
+        }
+      } else if (isAccessTokenAuth(auth)) {
+        if (!auth.access_token || !auth.token_type) {
+          throw new Error(`'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`);
+        }
+      } else if (!auth.clientId || !auth.clientSecret) {
+        throw new Error(`'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`);
+      }
+
+      auth = _extends({
+        url: DEFAULT_AUTH_URL
+      }, auth);
+    }
+
+    this._auth = auth;
+  }
+
+  set headers(value) {
+    this._headers = value;
+  }
+
+  set token(token) {
+    this._token = token;
+    this.tokenExpiresOn = Date.now() + token.expires_in * 1000;
+  }
+  /* eslint-disable @typescript-eslint/no-explicit-any */
+
+
+  async fetch(input, init) {
+    var _init, _init2;
+
+    init = _extends({}, init, {
+      credentials: "include",
+      headers: _extends({}, this._headers, (_init = init) == null ? void 0 : _init.headers)
+    }); // Using the auth set on the client.
+    // TODO: Abstract this to a re-usable.
+
+    if ((_init2 = init) != null && _init2.withAuth) {
+      this._debug(`Using authenticated request.`);
+
+      if (init.withAuth === true) {
+        if (typeof this._auth === "undefined") {
+          throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+        } // By default, if withAuth is set to true, we use the auth configured
+        // in the client constructor.
+
+
+        if (typeof this._auth === "function") {
+          this._debug(`Using custom auth callback.`);
+
+          init["headers"]["Authorization"] = this._auth();
+        } else if (typeof this._auth === "string") {
+          this._debug(`Using custom authorization header.`);
+
+          init["headers"]["Authorization"] = this._auth;
+        } else if (typeof this._auth === "object") {
+          this._debug(`Using custom auth credentials.`);
+
+          if (isBasicAuth(this._auth)) {
+            const basic = Buffer.from(`${this._auth.username}:${this._auth.password}`).toString("base64");
+            init["headers"]["Authorization"] = `Basic ${basic}`;
+          } else if (isClientIdSecretAuth(this._auth)) {
+            // Use the built-in client_credentials grant.
+            this._debug(`Using default auth (client_credentials).`); // Fetch an access token and add it to the request.
+            // Access token can be fetched from cache or using a custom auth method.
+
+
+            const token = await this.getAccessToken(this._auth);
+
+            if (token) {
+              init["headers"]["Authorization"] = `Bearer ${token.access_token}`;
+            }
+          } else if (isAccessTokenAuth(this._auth)) {
+            init["headers"]["Authorization"] = `${this._auth.token_type} ${this._auth.access_token}`;
+          }
+        }
+      } else if (typeof init.withAuth === "string") {
+        this._debug(`Using custom authorization header.`);
+
+        init["headers"]["Authorization"] = init.withAuth;
+      } else if (typeof init.withAuth === "function") {
+        this._debug(`Using custom authorization callback.`);
+
+        init["headers"]["Authorization"] = init.withAuth();
+      } else if (isBasicAuth(init.withAuth)) {
+        this._debug(`Using basic authorization header`);
+
+        const basic = Buffer.from(`${init.withAuth.username}:${init.withAuth.password}`).toString("base64");
+        init["headers"]["Authorization"] = `Basic ${basic}`;
+      } else if (isClientIdSecretAuth(init.withAuth)) {
+        // Fetch an access token and add it to the request.
+        // Access token can be fetched from cache or using a custom auth method.
+        const token = await this.getAccessToken(init.withAuth);
+
+        if (token) {
+          init["headers"]["Authorization"] = `Bearer ${token.access_token}`;
+        }
+      } else if (isAccessTokenAuth(init.withAuth)) {
+        init["headers"]["Authorization"] = `${init.withAuth.token_type} ${init.withAuth.access_token}`;
+      }
+    }
+
+    if (this.fetcher) {
+      this._debug(`Using custom fetcher.`);
+
+      return await this.fetcher(input, init);
+    }
+
+    this._debug(`Using default fetch (polyfilled by Next.js).`);
+
+    return await fetch(input, init);
+  }
+
+  async createResource(type, body, options) {
+    var _options2, _options3, _options4;
+
+    options = _extends({
+      deserialize: true,
+      withAuth: true
+    }, options);
+    const apiPath = await this.getEntryForResourceType(type, ((_options2 = options) == null ? void 0 : _options2.locale) !== ((_options3 = options) == null ? void 0 : _options3.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(apiPath, (_options4 = options) == null ? void 0 : _options4.params);
+
+    this._debug(`Creating resource of type ${type}.`);
+
+    this._debug(url.toString()); // Add type to body.
+
+
+    body.data.type = type;
+    const response = await this.fetch(url.toString(), {
+      method: "POST",
+      body: JSON.stringify(body),
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const json = await response.json();
+    return options.deserialize ? this.deserialize(json) : json;
+  }
+
+  async createFileResource(type, body, options) {
+    var _body$data, _body$data$attributes, _options5, _options6, _options7;
+
+    options = _extends({
+      deserialize: true,
+      withAuth: true
+    }, options);
+    const hostType = body == null ? void 0 : (_body$data = body.data) == null ? void 0 : (_body$data$attributes = _body$data.attributes) == null ? void 0 : _body$data$attributes.type;
+    const apiPath = await this.getEntryForResourceType(hostType, ((_options5 = options) == null ? void 0 : _options5.locale) !== ((_options6 = options) == null ? void 0 : _options6.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(`${apiPath}/${body.data.attributes.field}`, (_options7 = options) == null ? void 0 : _options7.params);
+
+    this._debug(`Creating file resource for media of type ${type}.`);
+
+    this._debug(url.toString());
+
+    const response = await this.fetch(url.toString(), {
+      method: "POST",
+      headers: {
+        "Content-Type": "application/octet-stream",
+        Accept: "application/vnd.api+json",
+        "Content-Disposition": `file; filename="${body.data.attributes.filename}"`
+      },
+      body: body.data.attributes.file,
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const json = await response.json();
+    return options.deserialize ? this.deserialize(json) : json;
+  }
+
+  async updateResource(type, uuid, body, options) {
+    var _options8, _options9, _options10;
+
+    options = _extends({
+      deserialize: true,
+      withAuth: true
+    }, options);
+    const apiPath = await this.getEntryForResourceType(type, ((_options8 = options) == null ? void 0 : _options8.locale) !== ((_options9 = options) == null ? void 0 : _options9.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(`${apiPath}/${uuid}`, (_options10 = options) == null ? void 0 : _options10.params);
+
+    this._debug(`Updating resource of type ${type} with id ${uuid}.`);
+
+    this._debug(url.toString()); // Update body.
+
+
+    body.data.type = type;
+    body.data.id = uuid;
+    const response = await this.fetch(url.toString(), {
+      method: "PATCH",
+      body: JSON.stringify(body),
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const json = await response.json();
+    return options.deserialize ? this.deserialize(json) : json;
+  }
+
+  async deleteResource(type, uuid, options) {
+    var _options11, _options12, _options13;
+
+    options = _extends({
+      withAuth: true,
+      params: {}
+    }, options);
+    const apiPath = await this.getEntryForResourceType(type, ((_options11 = options) == null ? void 0 : _options11.locale) !== ((_options12 = options) == null ? void 0 : _options12.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(`${apiPath}/${uuid}`, (_options13 = options) == null ? void 0 : _options13.params);
+
+    this._debug(`Deleting resource of type ${type} with id ${uuid}.`);
+
+    this._debug(url.toString());
+
+    const response = await this.fetch(url.toString(), {
+      method: "DELETE",
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    return response.status === 204;
+  }
+
+  async getResource(type, uuid, options) {
+    var _options14, _options15, _options16;
+
+    options = _extends({
+      deserialize: true,
+      withAuth: this.withAuth,
+      withCache: false,
+      params: {}
+    }, options);
+
+    if (options.withCache) {
+      const cached = await this.cache.get(options.cacheKey);
+
+      if (cached) {
+        this._debug(`Returning cached resource ${type} with id ${uuid}`);
+
+        const _json = JSON.parse(cached);
+
+        return options.deserialize ? this.deserialize(_json) : _json;
+      }
+    }
+
+    const apiPath = await this.getEntryForResourceType(type, ((_options14 = options) == null ? void 0 : _options14.locale) !== ((_options15 = options) == null ? void 0 : _options15.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(`${apiPath}/${uuid}`, (_options16 = options) == null ? void 0 : _options16.params);
+
+    this._debug(`Fetching resource ${type} with id ${uuid}.`);
+
+    this._debug(url.toString());
+
+    const response = await this.fetch(url.toString(), {
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const json = await response.json();
+
+    if (options.withCache) {
+      await this.cache.set(options.cacheKey, JSON.stringify(json));
+    }
+
+    return options.deserialize ? this.deserialize(json) : json;
+  }
+
+  async getResourceFromContext(input, context, options) {
+    var _options17, _options18, _options19;
+
+    const type = typeof input === "string" ? input : input.jsonapi.resourceName;
+    const previewData = context.previewData;
+    options = _extends({
+      // Add support for revisions for node by default.
+      // TODO: Make this required before stable?
+      isVersionable: /^node--/.test(type),
+      deserialize: true,
+      pathPrefix: "/",
+      withAuth: this.withAuth,
+      params: {}
+    }, options);
+    const _options = {
+      deserialize: options.deserialize,
+      isVersionable: options.isVersionable,
+      locale: context.locale,
+      defaultLocale: context.defaultLocale,
+      withAuth: context.preview || ((_options17 = options) == null ? void 0 : _options17.withAuth),
+      params: _extends({
+        resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
+      }, (_options18 = options) == null ? void 0 : _options18.params)
+    };
+
+    if (typeof input !== "string") {
+      var _input$entity;
+
+      // Fix for subrequests and translation.
+      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
+      // @shadcn, note to self:
+      // Given an entity at /example with no translation.
+      // When we try to translate /es/example, decoupled router will properly
+      // translate to the untranslated version and set the locale to es.
+      // However a subrequests to /es/subrequests for decoupled router will fail.
+      if (context.locale && input.entity.langcode !== context.locale) {
+        context.locale = input.entity.langcode;
+      } // Given we already have the path info, we can skip subrequests and just make a simple
+      // request to the Drupal site to get the entity.
+
+
+      if ((_input$entity = input.entity) != null && _input$entity.uuid) {
+        return await this.getResource(type, input.entity.uuid, _options);
+      }
+    }
+
+    const path = this.getPathFromContext(context, {
+      pathPrefix: (_options19 = options) == null ? void 0 : _options19.pathPrefix
+    });
+    const resource = await this.getResourceByPath(path, _options); // If no locale is passed, skip entity if not default_langcode.
+    // This happens because decoupled_router will still translate the path
+    // to a resource.
+    // TODO: Figure out if we want this behavior.
+    // For now this causes a bug where a non-i18n sites builds (ISR) pages for
+    // localized pages.
+    // if (!context.locale && !resource?.default_langcode) {
+    //   return null
+    // }
+
+    return resource;
+  }
+
+  async getResourceByPath(path, options) {
+    var _json$resolvedResourc, _json$resolvedResourc2;
+
+    options = _extends({
+      deserialize: true,
+      isVersionable: false,
+      withAuth: this.withAuth,
+      params: {}
+    }, options);
+
+    if (!path) {
+      return null;
+    }
+
+    if (options.locale && options.defaultLocale && path.indexOf(options.locale) !== 1) {
+      path = path === "/" ? path : path.replace(/^\/+/, "");
+      path = this.getPathFromContext({
+        params: {
+          slug: [path]
+        },
+        locale: options.locale,
+        defaultLocale: options.defaultLocale
+      });
+    } // If a resourceVersion is provided, assume entity type is versionable.
+
+
+    if (options.params.resourceVersion) {
+      options.isVersionable = true;
+    }
+
+    const _options$params = options.params,
+          {
+      resourceVersion = "rel:latest-version"
+    } = _options$params,
+          params = _objectWithoutPropertiesLoose(_options$params, _excluded);
+
+    if (options.isVersionable) {
+      params.resourceVersion = resourceVersion;
+    }
+
+    const resourceParams = stringify(params); // We are intentionally not using translatePath here.
+    // We want a single request using subrequests.
+
+    const payload = [{
+      requestId: "router",
+      action: "view",
+      uri: `/router/translate-path?path=${path}&_format=json`,
+      headers: {
+        Accept: "application/vnd.api+json"
+      }
+    }, {
+      requestId: "resolvedResource",
+      action: "view",
+      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,
+      waitFor: ["router"]
+    }]; // Localized subrequests.
+    // I was hoping we would not need this but it seems like subrequests is not properly
+    // setting the jsonapi locale from a translated path.
+    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
+
+    let subrequestsPath = "/subrequests";
+
+    if (options.locale && options.defaultLocale && options.locale !== options.defaultLocale) {
+      subrequestsPath = `/${options.locale}/subrequests`;
+    }
+
+    const url = this.buildUrl(subrequestsPath, {
+      _format: "json"
+    });
+    const response = await this.fetch(url.toString(), {
+      method: "POST",
+      credentials: "include",
+      redirect: "follow",
+      body: JSON.stringify(payload),
+      withAuth: options.withAuth
+    });
+    const json = await response.json();
+
+    if (!(json != null && (_json$resolvedResourc = json["resolvedResource#uri{0}"]) != null && _json$resolvedResourc.body)) {
+      var _json$router;
+
+      if (json != null && (_json$router = json.router) != null && _json$router.body) {
+        const error = JSON.parse(json.router.body);
+
+        if (error != null && error.message) {
+          this.throwError(new Error(error.message));
+        }
+      }
+
+      return null;
+    }
+
+    const data = JSON.parse((_json$resolvedResourc2 = json["resolvedResource#uri{0}"]) == null ? void 0 : _json$resolvedResourc2.body);
+
+    if (data.errors) {
+      this.throwError(new Error(this.formatJsonApiErrors(data.errors)));
+    }
+
+    return options.deserialize ? this.deserialize(data) : data;
+  }
+
+  async getResourceCollection(type, options) {
+    var _options20, _options21, _options22;
+
+    options = _extends({
+      withAuth: this.withAuth,
+      deserialize: true
+    }, options);
+    const apiPath = await this.getEntryForResourceType(type, ((_options20 = options) == null ? void 0 : _options20.locale) !== ((_options21 = options) == null ? void 0 : _options21.defaultLocale) ? options.locale : undefined);
+    const url = this.buildUrl(apiPath, _extends({}, (_options22 = options) == null ? void 0 : _options22.params));
+
+    this._debug(`Fetching resource collection of type ${type}`);
+
+    this._debug(url.toString());
+
+    const response = await this.fetch(url.toString(), {
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const json = await response.json();
+    return options.deserialize ? this.deserialize(json) : json;
+  }
+
+  async getResourceCollectionFromContext(type, context, options) {
+    options = _extends({
+      withAuth: this.withAuth,
+      deserialize: true
+    }, options);
+    return await this.getResourceCollection(type, _extends({}, options, {
+      locale: context.locale,
+      defaultLocale: context.defaultLocale,
+      withAuth: context.preview || options.withAuth
+    }));
+  }
+
+  async getStaticPathsFromContext(types, context, options) {
+    var _this = this;
+
+    options = _extends({
+      withAuth: this.withAuth,
+      pathPrefix: "/",
+      params: {}
+    }, options);
+
+    if (typeof types === "string") {
+      types = [types];
+    }
+
+    const paths = await Promise.all(types.map(async function (type) {
+      var _options23, _context$locales;
+
+      // Use sparse fieldset to expand max size.
+      // Note we don't need status filter here since this runs non-authenticated (by default).
+      const params = _extends({
+        [`fields[${type}]`]: "path"
+      }, (_options23 = options) == null ? void 0 : _options23.params); // Handle localized path aliases
+
+
+      if (!((_context$locales = context.locales) != null && _context$locales.length)) {
+        const resources = await _this.getResourceCollection(type, {
+          params,
+          withAuth: options.withAuth
+        });
+        return _this.buildStaticPathsFromResources(resources, {
+          pathPrefix: options.pathPrefix
+        });
+      }
+
+      const paths = await Promise.all(context.locales.map(async function (locale) {
+        const resources = await _this.getResourceCollection(type, {
+          deserialize: true,
+          locale,
+          defaultLocale: context.defaultLocale,
+          params,
+          withAuth: options.withAuth
+        });
+        return _this.buildStaticPathsFromResources(resources, {
+          locale,
+          pathPrefix: options.pathPrefix
+        });
+      }));
+      return paths.flat();
+    }));
+    return paths.flat();
+  }
+
+  buildStaticPathsFromResources(resources, options) {
+    const paths = resources == null ? void 0 : resources.flatMap(resource => {
+      var _resource$path, _resource$path2;
+
+      return (resource == null ? void 0 : (_resource$path = resource.path) == null ? void 0 : _resource$path.alias) === this.frontPage ? "/" : resource == null ? void 0 : (_resource$path2 = resource.path) == null ? void 0 : _resource$path2.alias;
+    }).filter(Boolean);
+    return paths != null && paths.length ? this.buildStaticPathsParamsFromPaths(paths, options) : [];
+  }
+
+  buildStaticPathsParamsFromPaths(paths, options) {
+    return paths.flatMap(_path => {
+      _path = _path.replace(/^\/|\/$/g, ""); // Remove pathPrefix.
+
+      if (options != null && options.pathPrefix && options.pathPrefix !== "/") {
+        // Remove leading slash from pathPrefix.
+        const pathPrefix = options.pathPrefix.replace(/^\//, "");
+        _path = _path.replace(`${pathPrefix}/`, "");
+      }
+
+      const path = {
+        params: {
+          slug: _path.split("/")
+        }
+      };
+
+      if (options != null && options.locale) {
+        path["locale"] = options.locale;
+      }
+
+      return path;
+    });
+  }
+
+  async translatePath(path, options) {
+    options = _extends({
+      withAuth: this.withAuth
+    }, options);
+    const url = this.buildUrl("/router/translate-path", {
+      path
+    });
+    const response = await this.fetch(url.toString(), {
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      // Do not throw errors here.
+      // Otherwise next.js will catch error and throw a 500.
+      // We want a 404.
+      return null;
+    }
+
+    const json = await response.json();
+    return json;
+  }
+
+  async translatePathFromContext(context, options) {
+    options = _extends({
+      pathPrefix: "/",
+      withAuth: this.withAuth
+    }, options);
+    const path = this.getPathFromContext(context, {
+      pathPrefix: options.pathPrefix
+    });
+    const response = await this.translatePath(path, {
+      withAuth: context.preview || options.withAuth
+    });
+    return response;
+  }
+
+  getPathFromContext(context, options) {
+    var _context$params, _options$pathPrefix;
+
+    options = _extends({
+      pathPrefix: "/"
+    }, options);
+    let slug = (_context$params = context.params) == null ? void 0 : _context$params.slug;
+    let pathPrefix = ((_options$pathPrefix = options.pathPrefix) == null ? void 0 : _options$pathPrefix.charAt(0)) === "/" ? options.pathPrefix : `/${options.pathPrefix}`; // Handle locale.
+
+    if (context.locale && context.locale !== context.defaultLocale) {
+      pathPrefix = `/${context.locale}${pathPrefix}`;
+    }
+
+    slug = Array.isArray(slug) ? slug.map(s => encodeURIComponent(s)).join("/") : slug; // Handle front page.
+
+    if (!slug) {
+      slug = this.frontPage;
+      pathPrefix = pathPrefix.replace(/\/$/, "");
+    }
+
+    slug = pathPrefix.slice(-1) !== "/" && slug.charAt(0) !== "/" ? `/${slug}` : slug;
+    return `${pathPrefix}${slug}`;
+  }
+
+  async getIndex(locale) {
+    const url = this.buildUrl(locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix);
+
+    try {
+      const response = await this.fetch(url.toString(), {
+        // As per https://www.drupal.org/node/2984034 /jsonapi is public.
+        withAuth: false
+      });
+      return await response.json();
+    } catch (error) {
+      this.throwError(new Error(`Failed to fetch JSON:API index at ${url.toString()} - ${error.message}`));
+    }
+  }
+
+  async getEntryForResourceType(type, locale) {
+    var _index$links;
+
+    if (this.useDefaultResourceTypeEntry) {
+      const [id, bundle] = type.split("--");
+      return `${this.baseUrl}${this.apiPrefix}/` + (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`);
+    }
+
+    const index = await this.getIndex(locale);
+    const link = (_index$links = index.links) == null ? void 0 : _index$links[type];
+
+    if (!link) {
+      throw new Error(`Resource of type '${type}' not found.`);
+    }
+
+    const {
+      href
+    } = link; // Fix for missing locale in JSON:API index.
+    // This fix ensures the locale is included in the resouce link.
+
+    if (locale) {
+      const pattern = `^\\/${locale}\\/`;
+      const path = href.replace(this.baseUrl, "");
+
+      if (!new RegExp(pattern, "i").test(path)) {
+        return `${this.baseUrl}/${locale}${path}`;
+      }
+    }
+
+    return href;
+  }
+
+  async preview(request, response, options) {
+    var _entity$path;
+
+    const {
+      slug,
+      resourceVersion,
+      secret,
+      locale,
+      defaultLocale
+    } = request.query;
+
+    if (secret !== this.previewSecret) {
+      return response.status(401).json((options == null ? void 0 : options.errorMessages.secret) || "Invalid preview secret.");
+    }
+
+    if (!slug) {
+      return response.status(401).end((options == null ? void 0 : options.errorMessages.slug) || "Invalid slug.");
+    }
+
+    let _options = {
+      isVersionable: !!resourceVersion
+    };
+
+    if (locale && defaultLocale) {
+      // Fix for und locale.
+      const _locale = locale === "und" ? defaultLocale : locale;
+
+      _options = _extends({}, _options, {
+        locale: _locale,
+        defaultLocale: defaultLocale
+      });
+    }
+
+    const entity = await this.getResourceByPath(slug, _extends({
+      withAuth: true
+    }, _options));
+    const missingEntityErrorMessage = `The entity with slug ${slug} coud not be found. If the entity exists on your Drupal site, make sure the proper permissions are configured so that Next.js can access it.`;
+    const missingPathAliasErrorMessage = `The path alias is missing for entity with slug ${slug}.`;
+
+    if (!entity) {
+      this.throwError(new Error(missingEntityErrorMessage));
+      return response.status(404).end(missingEntityErrorMessage);
+    }
+
+    if (!(entity != null && (_entity$path = entity.path) != null && _entity$path.alias)) {
+      this.throwError(new Error(missingPathAliasErrorMessage));
+      return response.status(404).end(missingPathAliasErrorMessage);
+    }
+
+    const url = entity.default_langcode ? entity == null ? void 0 : entity.path.alias : `/${entity.path.langcode}${entity.path.alias}`;
+
+    if (!url) {
+      return response.status(404).end((options == null ? void 0 : options.errorMessages.slug) || "Invalid slug");
+    }
+
+    response.setPreviewData({
+      resourceVersion
+    }); // Fix issue with cookie.
+    // See https://github.com/vercel/next.js/discussions/32238.
+    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+
+    if (this.forceIframeSameSiteCookie) {
+      const previous = response.getHeader("Set-Cookie");
+      previous.forEach((cookie, index) => {
+        previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
+      });
+      response.setHeader(`Set-Cookie`, previous);
+    }
+
+    response.writeHead(307, {
+      Location: url
+    });
+    return response.end();
+  }
+
+  async getMenu(name, options) {
+    var _options24;
+
+    options = _extends({
+      withAuth: this.withAuth,
+      deserialize: true,
+      params: {},
+      withCache: false
+    }, options);
+
+    if (options.withCache) {
+      const cached = await this.cache.get(options.cacheKey);
+
+      if (cached) {
+        this._debug(`Returning cached menu items for ${name}`);
+
+        return JSON.parse(cached);
+      }
+    }
+
+    const localePrefix = (_options24 = options) != null && _options24.locale && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+    const url = this.buildUrl(`${localePrefix}${this.apiPrefix}/menu_items/${name}`, options.params);
+
+    this._debug(`Fetching menu items for ${name}.`);
+
+    this._debug(url.toString());
+
+    const response = await this.fetch(url.toString(), {
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const data = await response.json();
+    const items = options.deserialize ? this.deserialize(data) : data;
+    const {
+      items: tree
+    } = this.buildMenuTree(items);
+    const menu = {
+      items,
+      tree
+    };
+
+    if (options.withCache) {
+      await this.cache.set(options.cacheKey, JSON.stringify(menu));
+    }
+
+    return menu;
+  }
+
+  buildMenuTree(links, parent = "") {
+    if (!(links != null && links.length)) {
+      return {
+        items: []
+      };
+    }
+
+    const children = links.filter(link => (link == null ? void 0 : link.parent) === parent);
+    return children.length ? {
+      items: children.map(link => _extends({}, link, this.buildMenuTree(links, link.id)))
+    } : {};
+  }
+
+  async getView(name, options) {
+    var _options25;
+
+    options = _extends({
+      withAuth: this.withAuth,
+      deserialize: true,
+      params: {}
+    }, options);
+    const localePrefix = (_options25 = options) != null && _options25.locale && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+    const [viewId, displayId] = name.split("--");
+    const url = this.buildUrl(`${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`, options.params);
+    const response = await this.fetch(url.toString(), {
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const data = await response.json();
+    const results = options.deserialize ? this.deserialize(data) : data;
+    return {
+      id: name,
+      results,
+      meta: data.meta,
+      links: data.links
+    };
+  }
+
+  async getSearchIndex(name, options) {
+    var _options26;
+
+    options = _extends({
+      withAuth: this.withAuth,
+      deserialize: true
+    }, options);
+    const localePrefix = (_options26 = options) != null && _options26.locale && options.locale !== options.defaultLocale ? `/${options.locale}` : "";
+    const url = this.buildUrl(`${localePrefix}${this.apiPrefix}/index/${name}`, options.params);
+    const response = await this.fetch(url.toString(), {
+      withAuth: options.withAuth
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const json = await response.json();
+    return options.deserialize ? this.deserialize(json) : json;
+  }
+
+  async getSearchIndexFromContext(name, context, options) {
+    return await this.getSearchIndex(name, _extends({}, options, {
+      locale: context.locale,
+      defaultLocale: context.defaultLocale
+    }));
+  }
+
+  buildUrl(path, params) {
+    const url = new URL(path.charAt(0) === "/" ? `${this.baseUrl}${path}` : path);
+
+    if (typeof params === "object" && "getQueryObject" in params) {
+      params = params.getQueryObject();
+    }
+
+    if (params) {
+      // Used instead URLSearchParams for nested params.
+      url.search = stringify(params);
+    }
+
+    return url;
+  }
+
+  async getAccessToken(opts) {
+    if (this.accessToken) {
+      return this.accessToken;
+    }
+
+    if (!(opts != null && opts.clientId) || !(opts != null && opts.clientSecret)) {
+      if (typeof this._auth === "undefined") {
+        throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+      }
+    }
+
+    if (!isClientIdSecretAuth(this._auth) || opts && !isClientIdSecretAuth(opts)) {
+      throw new Error(`'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`);
+    }
+
+    const clientId = (opts == null ? void 0 : opts.clientId) || this._auth.clientId;
+    const clientSecret = (opts == null ? void 0 : opts.clientSecret) || this._auth.clientSecret;
+    const url = this.buildUrl((opts == null ? void 0 : opts.url) || this._auth.url || DEFAULT_AUTH_URL);
+
+    if (this._token && Date.now() < this.tokenExpiresOn) {
+      this._debug(`Using existing access token.`);
+
+      return this._token;
+    }
+
+    this._debug(`Fetching new access token.`);
+
+    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString("base64");
+    const response = await fetch(url.toString(), {
+      method: "POST",
+      headers: {
+        Authorization: `Basic ${basic}`,
+        "Content-Type": "application/x-www-form-urlencoded"
+      },
+      body: `grant_type=client_credentials`
+    });
+
+    if (!(response != null && response.ok)) {
+      await this.handleJsonApiErrors(response);
+    }
+
+    const result = await response.json();
+
+    this._debug(result);
+
+    this.token = result;
+    return result;
+  }
+
+  deserialize(body, options) {
+    if (!body) return null;
+    return this.serializer.deserialize(body, options);
+  }
+
+  async getErrorsFromResponse(response) {
+    const type = response.headers.get("content-type");
+
+    if (type === "application/json") {
+      const error = await response.json();
+      return error.message;
+    } // Construct error from response.
+    // Check for type to ensure this is a JSON:API formatted error.
+    // See https://jsonapi.org/format/#errors.
+
+
+    if (type === "application/vnd.api+json") {
+      var _error$errors;
+
+      const _error = await response.json();
+
+      if (_error != null && (_error$errors = _error.errors) != null && _error$errors.length) {
+        return _error.errors;
+      }
+    }
+
+    return response.statusText;
+  }
+
+  formatJsonApiErrors(errors) {
+    const [error] = errors;
+    let message = `${error.status} ${error.title}`;
+
+    if (error.detail) {
+      message += `\n${error.detail}`;
+    }
+
+    return message;
+  }
+
+  _debug(message) {
+    !!this.debug && this.logger.debug(message);
+  } // Error handling.
+  // If throwErrors is enable, we show errors in the Next.js overlay.
+  // Otherwise we log the errors even if debugging is turned off.
+  // In production, errors are always logged never thrown.
+
+
+  throwError(error) {
+    if (!this.throwJsonApiErrors) {
+      return this.logger.error(error);
+    }
+
+    throw error;
+  }
+
+  async handleJsonApiErrors(response) {
+    if (!(response != null && response.ok)) {
+      const errors = await this.getErrorsFromResponse(response);
+      throw new JsonApiErrors(errors, response.status);
+    }
+  }
+
+}
+
+export { DrupalClient, DrupalPreview, JsonApiErrors, PreviewHandler, buildUrl, deserialize, getAccessToken, getJsonApiIndex, getJsonApiPathForResourceType, getMenu, getPathsFromContext, getResource, getResourceByPath, getResourceCollection, getResourceCollectionFromContext, getResourceFromContext, getResourcePreviewUrl, getResourceTypeFromContext, getSearchIndex, getSearchIndexFromContext, getView, syncDrupalPreviewRoutes, translatePath, translatePathFromContext, useMenu };
+//# sourceMappingURL=index.modern.mjs.map
diff --git a/node_modules/next-drupal/dist/index.modern.mjs.map b/node_modules/next-drupal/dist/index.modern.mjs.map
new file mode 100644
index 0000000..95e4afb
--- /dev/null
+++ b/node_modules/next-drupal/dist/index.modern.mjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.modern.mjs","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/jsonapi-errors.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug)\n    ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n    : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  // if (!context.locale && !resource?.default_langcode) {\n  //   return null\n  // }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import { JsonApiError } from \"./types\"\n\nexport class JsonApiErrors extends Error {\n  errors: JsonApiError[] | string\n  statusCode: number\n\n  constructor(errors: JsonApiError[], statusCode: number) {\n    super()\n\n    this.errors = errors\n    this.statusCode = statusCode\n    this.message = JsonApiErrors.formatMessage(errors)\n  }\n\n  private static formatMessage(errors) {\n    if (typeof errors === \"string\") {\n      return errors\n    }\n\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  GetResourcePreviewUrlOptions,\n  JsonApiWithCacheOptions,\n  JsonApiCreateResourceBody,\n  JsonApiUpdateResourceBody,\n  DrupalClientAuthUsernamePassword,\n  DrupalClientAuthAccessToken,\n  DrupalClientAuthClientIdSecret,\n  JsonApiCreateFileResourceBody,\n  DrupalView,\n  DrupalFile,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\nimport { JsonApiErrors } from \"./jsonapi-errors\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nfunction isBasicAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthUsernamePassword {\n  return (\n    (auth as DrupalClientAuthUsernamePassword)?.username !== undefined ||\n    (auth as DrupalClientAuthUsernamePassword)?.password !== undefined\n  )\n}\n\nfunction isAccessTokenAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthAccessToken {\n  return (auth as DrupalClientAuthAccessToken)?.access_token !== undefined\n}\n\nfunction isClientIdSecretAuth(\n  auth: DrupalClient[\"auth\"]\n): auth is DrupalClientAuthClientIdSecret {\n  return (\n    (auth as DrupalClientAuthClientIdSecret)?.clientId !== undefined ||\n    (auth as DrupalClientAuthClientIdSecret)?.clientSecret !== undefined\n  )\n}\n\nexport class DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: DrupalClientOptions[\"debug\"]\n\n  frontPage: DrupalClientOptions[\"frontPage\"]\n\n  private serializer: DrupalClientOptions[\"serializer\"]\n\n  private cache: DrupalClientOptions[\"cache\"]\n\n  private throwJsonApiErrors?: DrupalClientOptions[\"throwJsonApiErrors\"]\n\n  private logger: DrupalClientOptions[\"logger\"]\n\n  private fetcher?: DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: DrupalClientOptions[\"headers\"]\n\n  private _auth?: DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: DrupalClientOptions[\"accessToken\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new DrupalClient.\n   *\n   * const client = new DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n      throwJsonApiErrors = true,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n    this.throwJsonApiErrors = throwJsonApiErrors\n\n    // Do not throw errors in production.\n    if (process.env.NODE_ENV === \"production\") {\n      this.throwJsonApiErrors = false\n    }\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (isBasicAuth(auth)) {\n        if (!auth.username || !auth.password) {\n          throw new Error(\n            `'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (isAccessTokenAuth(auth)) {\n        if (!auth.access_token || !auth.token_type) {\n          throw new Error(\n            `'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      credentials: \"include\",\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    // Using the auth set on the client.\n    // TODO: Abstract this to a re-usable.\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      if (init.withAuth === true) {\n        if (typeof this._auth === \"undefined\") {\n          throw new Error(\n            \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n          )\n        }\n\n        // By default, if withAuth is set to true, we use the auth configured\n        // in the client constructor.\n        if (typeof this._auth === \"function\") {\n          this._debug(`Using custom auth callback.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth()\n        } else if (typeof this._auth === \"string\") {\n          this._debug(`Using custom authorization header.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth\n        } else if (typeof this._auth === \"object\") {\n          this._debug(`Using custom auth credentials.`)\n\n          if (isBasicAuth(this._auth)) {\n            const basic = Buffer.from(\n              `${this._auth.username}:${this._auth.password}`\n            ).toString(\"base64\")\n\n            init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n          } else if (isClientIdSecretAuth(this._auth)) {\n            // Use the built-in client_credentials grant.\n            this._debug(`Using default auth (client_credentials).`)\n\n            // Fetch an access token and add it to the request.\n            // Access token can be fetched from cache or using a custom auth method.\n            const token = await this.getAccessToken(this._auth)\n            if (token) {\n              init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n            }\n          } else if (isAccessTokenAuth(this._auth)) {\n            init[\"headers\"][\n              \"Authorization\"\n            ] = `${this._auth.token_type} ${this._auth.access_token}`\n          }\n        }\n      } else if (typeof init.withAuth === \"string\") {\n        this._debug(`Using custom authorization header.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth\n      } else if (typeof init.withAuth === \"function\") {\n        this._debug(`Using custom authorization callback.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth()\n      } else if (isBasicAuth(init.withAuth)) {\n        this._debug(`Using basic authorization header`)\n\n        const basic = Buffer.from(\n          `${init.withAuth.username}:${init.withAuth.password}`\n        ).toString(\"base64\")\n\n        init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n      } else if (isClientIdSecretAuth(init.withAuth)) {\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken(init.withAuth)\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      } else if (isAccessTokenAuth(init.withAuth)) {\n        init[\"headers\"][\n          \"Authorization\"\n        ] = `${init.withAuth.token_type} ${init.withAuth.access_token}`\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    return await fetch(input, init)\n  }\n\n  async createResource<T extends JsonApiResource>(\n    type: string,\n    body: JsonApiCreateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, options?.params)\n\n    this._debug(`Creating resource of type ${type}.`)\n    this._debug(url.toString())\n\n    // Add type to body.\n    body.data.type = type\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async createFileResource<T = DrupalFile>(\n    type: string,\n    body: JsonApiCreateFileResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const hostType = body?.data?.attributes?.type\n\n    const apiPath = await this.getEntryForResourceType(\n      hostType,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(\n      `${apiPath}/${body.data.attributes.field}`,\n      options?.params\n    )\n\n    this._debug(`Creating file resource for media of type ${type}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Accept: \"application/vnd.api+json\",\n        \"Content-Disposition\": `file; filename=\"${body.data.attributes.filename}\"`,\n      },\n      body: body.data.attributes.file,\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async updateResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    body: JsonApiUpdateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Updating resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    // Update body.\n    body.data.type = type\n    body.data.id = uuid\n\n    const response = await this.fetch(url.toString(), {\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async deleteResource(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<boolean> {\n    options = {\n      withAuth: true,\n      params: {},\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Deleting resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"DELETE\",\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    return response.status === 204\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    const previewData = context.previewData as { resourceVersion?: string }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    const _options = {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    }\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n\n      // Given we already have the path info, we can skip subrequests and just make a simple\n      // request to the Drupal site to get the entity.\n      if (input.entity?.uuid) {\n        return await this.getResource<T>(type, input.entity.uuid, _options)\n      }\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const resource = await this.getResourceByPath<T>(path, _options)\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          this.throwError(new Error(error.message))\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      this.throwError(new Error(this.formatJsonApiErrors(data.errors)))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    this._debug(`Fetching resource collection of type ${type}`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options.withAuth,\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      // Do not throw errors here.\n      // Otherwise next.js will catch error and throw a 500.\n      // We want a 404.\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    const response = await this.translatePath(path, {\n      withAuth: context.preview || options.withAuth,\n    })\n\n    return response\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug)\n      ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n      : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      this.throwError(\n        new Error(\n          `Failed to fetch JSON:API index at ${url.toString()} - ${\n            error.message\n          }`\n        )\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, secret, locale, defaultLocale } =\n      request.query\n\n    if (secret !== this.previewSecret) {\n      return response\n        .status(401)\n        .json(options?.errorMessages.secret || \"Invalid preview secret.\")\n    }\n\n    if (!slug) {\n      return response\n        .status(401)\n        .end(options?.errorMessages.slug || \"Invalid slug.\")\n    }\n\n    let _options: GetResourcePreviewUrlOptions = {\n      isVersionable: !!resourceVersion,\n    }\n\n    if (locale && defaultLocale) {\n      // Fix for und locale.\n      const _locale = locale === \"und\" ? defaultLocale : locale\n\n      _options = {\n        ..._options,\n        locale: _locale as string,\n        defaultLocale: defaultLocale as string,\n      }\n    }\n\n    const entity = await this.getResourceByPath(slug as string, {\n      withAuth: true,\n      ..._options,\n    })\n\n    const missingEntityErrorMessage = `The entity with slug ${slug} coud not be found. If the entity exists on your Drupal site, make sure the proper permissions are configured so that Next.js can access it.`\n    const missingPathAliasErrorMessage = `The path alias is missing for entity with slug ${slug}.`\n\n    if (!entity) {\n      this.throwError(new Error(missingEntityErrorMessage))\n\n      return response.status(404).end(missingEntityErrorMessage)\n    }\n\n    if (!entity?.path?.alias) {\n      this.throwError(new Error(missingPathAliasErrorMessage))\n\n      return response.status(404).end(missingPathAliasErrorMessage)\n    }\n\n    const url = entity.default_langcode\n      ? entity?.path.alias\n      : `/${entity.path.langcode}${entity.path.alias}`\n\n    if (!url) {\n      return response\n        .status(404)\n        .end(options?.errorMessages.slug || \"Invalid slug\")\n    }\n\n    response.setPreviewData({\n      resourceVersion,\n    })\n\n    // Fix issue with cookie.\n    // See https://github.com/vercel/next.js/discussions/32238.\n    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n    if (this.forceIframeSameSiteCookie) {\n      const previous = response.getHeader(\"Set-Cookie\") as string[]\n      previous.forEach((cookie, index) => {\n        previous[index] = cookie.replace(\"SameSite=Lax\", \"SameSite=None;Secure\")\n      })\n      response.setHeader(`Set-Cookie`, previous)\n    }\n\n    response.writeHead(307, { Location: url })\n\n    return response.end()\n  }\n\n  async getMenu<T = DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T = JsonApiResource>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<DrupalView<T>> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(opts?: {\n    clientId: string\n    clientSecret: string\n    url?: string\n  }): Promise<AccessToken> {\n    if (this.accessToken) {\n      return this.accessToken\n    }\n\n    if (!opts?.clientId || !opts?.clientSecret) {\n      if (typeof this._auth === \"undefined\") {\n        throw new Error(\n          \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n        )\n      }\n    }\n\n    if (\n      !isClientIdSecretAuth(this._auth) ||\n      (opts && !isClientIdSecretAuth(opts))\n    ) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    const clientId = opts?.clientId || this._auth.clientId\n    const clientSecret = opts?.clientSecret || this._auth.clientSecret\n    const url = this.buildUrl(opts?.url || this._auth.url || DEFAULT_AUTH_URL)\n\n    if (this._token && Date.now() < this.tokenExpiresOn) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString(\"base64\")\n\n    const response = await fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async getErrorsFromResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return _error.errors\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n\n  // Error handling.\n  // If throwErrors is enable, we show errors in the Next.js overlay.\n  // Otherwise we log the errors even if debugging is turned off.\n  // In production, errors are always logged never thrown.\n  private throwError(error: Error) {\n    if (!this.throwJsonApiErrors) {\n      return this.logger.error(error)\n    }\n\n    throw error\n  }\n\n  private async handleJsonApiErrors(response: Response) {\n    if (!response?.ok) {\n      const errors = await this.getErrorsFromResponse(response)\n      throw new JsonApiErrors(errors, response.status)\n    }\n  }\n}\n"],"names":["cache","NodeCache","CACHE_KEY","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","access_token","basic","Buffer","from","toString","response","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","ok","Error","statusText","result","json","set","expires_in","JSONAPI_PREFIX","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","options","getJsonApiPathForResourceType","type","locale","index","getJsonApiIndex","links","href","url","buildUrl","buildHeaders","path","params","URL","charAt","search","stringify","accessToken","UNSTABLE_DRUPAL_ACCESS_TOKEN","token","getPathFromContext","context","prefix","slug","Array","isArray","map","s","encodeURIComponent","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","tree","buildMenuTree","length","children","filter","link","id","getResourceCollection","apiPath","undefined","getResourceCollectionFromContext","getPathsFromContext","types","paths","Promise","all","locales","resources","buildPathsFromResources","flat","flatMap","resource","alias","replace","split","getResourceFromContext","isVersionable","test","previewData","getResourceByPath","resourceVersion","indexOf","_excluded","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResource","uuid","DrupalPreview","request","PreviewHandler","secret","query","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","getResourcePreviewUrl","setPreviewData","writeHead","Location","entity","default_langcode","langcode","translatePath","translatePathFromContext","getResourceTypeFromContext","jsonapi","resourceName","error","getSearchIndex","getSearchIndexFromContext","getView","viewId","displayId","results","meta","useMenu","router","useRouter","setData","React","useState","setError","isLoading","setIsLoading","useEffect","fetchMenuItems","logger","log","console","debug","warn","JsonApiErrors","constructor","statusCode","formatMessage","title","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","isBasicAuth","auth","username","password","isAccessTokenAuth","isClientIdSecretAuth","clientId","clientSecret","DrupalClient","baseUrl","frontPage","serializer","throwJsonApiErrors","fetcher","_headers","_auth","_apiPrefix","useDefaultResourceTypeEntry","_token","tokenExpiresOn","withAuth","previewSecret","forceIframeSameSiteCookie","getStaticPathsFromContext","apiPrefix","defaultLogger","NODE_ENV","_debug","token_type","value","Date","now","input","init","createResource","getEntryForResourceType","handleJsonApiErrors","createFileResource","hostType","attributes","field","filename","file","updateResource","deleteResource","withCache","cacheKey","pathPrefix","preview","throwError","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","_locale","missingEntityErrorMessage","missingPathAliasErrorMessage","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","opts","getErrorsFromResponse","_error"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-drupal/dist/index.umd.js b/node_modules/next-drupal/dist/index.umd.js
index 6e60a88..be4b1c9 100644
--- a/node_modules/next-drupal/dist/index.umd.js
+++ b/node_modules/next-drupal/dist/index.umd.js
@@ -78,6 +78,96 @@
     return _extends.apply(this, arguments);
   }
 
+  function _inheritsLoose(subClass, superClass) {
+    subClass.prototype = Object.create(superClass.prototype);
+    subClass.prototype.constructor = subClass;
+    subClass.__proto__ = superClass;
+  }
+
+  function _getPrototypeOf(o) {
+    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
+      return o.__proto__ || Object.getPrototypeOf(o);
+    };
+    return _getPrototypeOf(o);
+  }
+
+  function _setPrototypeOf(o, p) {
+    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
+      o.__proto__ = p;
+      return o;
+    };
+
+    return _setPrototypeOf(o, p);
+  }
+
+  function _isNativeReflectConstruct() {
+    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
+    if (Reflect.construct.sham) return false;
+    if (typeof Proxy === "function") return true;
+
+    try {
+      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
+      return true;
+    } catch (e) {
+      return false;
+    }
+  }
+
+  function _construct(Parent, args, Class) {
+    if (_isNativeReflectConstruct()) {
+      _construct = Reflect.construct;
+    } else {
+      _construct = function _construct(Parent, args, Class) {
+        var a = [null];
+        a.push.apply(a, args);
+        var Constructor = Function.bind.apply(Parent, a);
+        var instance = new Constructor();
+        if (Class) _setPrototypeOf(instance, Class.prototype);
+        return instance;
+      };
+    }
+
+    return _construct.apply(null, arguments);
+  }
+
+  function _isNativeFunction(fn) {
+    return Function.toString.call(fn).indexOf("[native code]") !== -1;
+  }
+
+  function _wrapNativeSuper(Class) {
+    var _cache = typeof Map === "function" ? new Map() : undefined;
+
+    _wrapNativeSuper = function _wrapNativeSuper(Class) {
+      if (Class === null || !_isNativeFunction(Class)) return Class;
+
+      if (typeof Class !== "function") {
+        throw new TypeError("Super expression must either be null or a function");
+      }
+
+      if (typeof _cache !== "undefined") {
+        if (_cache.has(Class)) return _cache.get(Class);
+
+        _cache.set(Class, Wrapper);
+      }
+
+      function Wrapper() {
+        return _construct(Class, arguments, _getPrototypeOf(this).constructor);
+      }
+
+      Wrapper.prototype = Object.create(Class.prototype, {
+        constructor: {
+          value: Wrapper,
+          enumerable: false,
+          writable: true,
+          configurable: true
+        }
+      });
+      return _setPrototypeOf(Wrapper, Class);
+    };
+
+    return _wrapNativeSuper(Class);
+  }
+
   function _objectWithoutPropertiesLoose(source, excluded) {
     if (source == null) return {};
     var target = {};
@@ -186,7 +276,9 @@
     }
 
     var slug = context.params.slug;
-    slug = Array.isArray(slug) ? slug.join("/") : slug; // Handle locale.
+    slug = Array.isArray(slug) ? slug.map(function (s) {
+      return encodeURIComponent(s);
+    }).join("/") : slug; // Handle locale.
 
     if (context.locale && context.locale !== context.defaultLocale) {
       slug = "/" + context.locale + "/" + slug;
@@ -574,14 +666,15 @@
         params: _extends({
           resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
         }, (_options2 = options) == null ? void 0 : _options2.params)
-      })).then(function (resource) {
-        return !context.locale && !(resource == null ? void 0 : resource.default_langcode) ? null : resource;
-      }); // If no locale is passed, skip entity if not default_langcode.
+      })); // If no locale is passed, skip entity if not default_langcode.
       // This happens because decoupled_router will still translate the path
       // to a resource.
       // TODO: Figure out if we want this behavior.
       // For now this causes a bug where a non-i18n sites builds (ISR) pages for
       // localized pages.
+      // if (!context.locale && !resource?.default_langcode) {
+      //   return null
+      // }
     } catch (e) {
       return Promise.reject(e);
     }
@@ -881,6 +974,37 @@
     }
   };
 
+  var JsonApiErrors = /*#__PURE__*/function (_Error) {
+    _inheritsLoose(JsonApiErrors, _Error);
+
+    function JsonApiErrors(errors, statusCode) {
+      var _this;
+
+      _this = _Error.call(this) || this;
+      _this.errors = errors;
+      _this.statusCode = statusCode;
+      _this.message = JsonApiErrors.formatMessage(errors);
+      return _this;
+    }
+
+    JsonApiErrors.formatMessage = function formatMessage(errors) {
+      if (typeof errors === "string") {
+        return errors;
+      }
+
+      var error = errors[0];
+      var message = error.status + " " + error.title;
+
+      if (error.detail) {
+        message += "\n" + error.detail;
+      }
+
+      return message;
+    };
+
+    return JsonApiErrors;
+  }( /*#__PURE__*/_wrapNativeSuper(Error));
+
   function _catch$2(body, recover) {
     try {
       var result = body();
@@ -905,16 +1029,29 @@
     "Content-Type": "application/vnd.api+json",
     Accept: "application/vnd.api+json"
   };
-  var Experiment_DrupalClient = /*#__PURE__*/function () {
+
+  function isBasicAuth(auth) {
+    return (auth == null ? void 0 : auth.username) !== undefined || (auth == null ? void 0 : auth.password) !== undefined;
+  }
+
+  function isAccessTokenAuth(auth) {
+    return (auth == null ? void 0 : auth.access_token) !== undefined;
+  }
+
+  function isClientIdSecretAuth(auth) {
+    return (auth == null ? void 0 : auth.clientId) !== undefined || (auth == null ? void 0 : auth.clientSecret) !== undefined;
+  }
+
+  var DrupalClient = /*#__PURE__*/function () {
     /**
-     * Instantiates a new Experiment_DrupalClient.
+     * Instantiates a new DrupalClient.
      *
-     * const client = new Experiment_DrupalClient(baseUrl)
+     * const client = new DrupalClient(baseUrl)
      *
      * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.
      * @param {options} options Options for the client. See Experiment_DrupalClientOptions.
      */
-    function Experiment_DrupalClient(baseUrl, options) {
+    function DrupalClient(baseUrl, options) {
       if (options === void 0) {
         options = {};
       }
@@ -949,7 +1086,9 @@
           previewSecret = _options2.previewSecret,
           accessToken = _options2.accessToken,
           _options2$forceIframe = _options2.forceIframeSameSiteCookie,
-          forceIframeSameSiteCookie = _options2$forceIframe === void 0 ? false : _options2$forceIframe;
+          forceIframeSameSiteCookie = _options2$forceIframe === void 0 ? false : _options2$forceIframe,
+          _options2$throwJsonAp = _options2.throwJsonApiErrors,
+          throwJsonApiErrors = _options2$throwJsonAp === void 0 ? true : _options2$throwJsonAp;
       this.baseUrl = baseUrl;
       this.apiPrefix = apiPrefix;
       this.serializer = serializer;
@@ -965,11 +1104,16 @@
       this.cache = cache;
       this.accessToken = accessToken;
       this.forceIframeSameSiteCookie = forceIframeSameSiteCookie;
+      this.throwJsonApiErrors = throwJsonApiErrors; // Do not throw errors in production.
+
+      if (process.env.NODE_ENV === "production") {
+        this.throwJsonApiErrors = false;
+      }
 
       this._debug("Debug mode is on.");
     }
 
-    var _proto = Experiment_DrupalClient.prototype;
+    var _proto = DrupalClient.prototype;
 
     /* eslint-disable @typescript-eslint/no-explicit-any */
     _proto.fetch = function (_fetch) {
@@ -986,143 +1130,422 @@
       try {
         var _init;
 
-        var _temp6 = function _temp6() {
-          var _exit;
+        var _temp14 = function _temp14(_result2) {
+          var _exit2;
+
+          if (_exit3) return _result2;
 
-          function _temp3(_result) {
-            if (_exit) return _result;
+          function _temp11(_result3) {
+            if (_exit2) return _result3;
 
             _this2._debug("Using default fetch (polyfilled by Next.js).");
 
-            return Promise.resolve(fetch(input, init)).then(function (response) {
-              return (response == null ? void 0 : response.ok) ? response : Promise.resolve(_this2.formatErrorResponse(response)).then(function (message) {
-                if (process.env.NODE_ENV !== "production") {
-                  throw new Error(message);
-                } else {
-                  if (_this2.debug) {
-                    _this2.logger.error(message);
-                  }
-
-                  return null;
-                }
-              });
-            });
+            return Promise.resolve(fetch(input, init));
           }
 
-          var _temp2 = function () {
+          var _temp10 = function () {
             if (_this2.fetcher) {
               _this2._debug("Using custom fetcher.");
 
-              _exit = 1;
+              _exit2 = 1;
               return Promise.resolve(_this2.fetcher(input, init));
             }
           }();
 
-          return _temp2 && _temp2.then ? _temp2.then(_temp3) : _temp3(_temp2);
+          return _temp10 && _temp10.then ? _temp10.then(_temp11) : _temp11(_temp10);
         };
 
+        var _exit3;
+
         var _this2 = this;
 
         init = _extends({}, init, {
+          credentials: "include",
           headers: _extends({}, _this2._headers, (_init = init) == null ? void 0 : _init.headers)
-        });
+        }); // Using the auth set on the client.
+        // TODO: Abstract this to a re-usable.
 
-        var _temp7 = function () {
+        var _temp15 = function () {
           var _init2;
 
           if ((_init2 = init) == null ? void 0 : _init2.withAuth) {
-            _this2._debug("Using authenticated request."); // If a custom auth is provided, use that.
-
-
-            var _temp8 = function () {
-              if (typeof _this2._auth === "function") {
-                _this2._debug("Using custom auth.");
+            _this2._debug("Using authenticated request.");
+
+            return function () {
+              if (init.withAuth === true) {
+                if (typeof _this2._auth === "undefined") {
+                  throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+                } // By default, if withAuth is set to true, we use the auth configured
+                // in the client constructor.
+
+
+                var _temp16 = function () {
+                  if (typeof _this2._auth === "function") {
+                    _this2._debug("Using custom auth callback.");
+
+                    init["headers"]["Authorization"] = _this2._auth();
+                  } else {
+                    var _temp17 = function () {
+                      if (typeof _this2._auth === "string") {
+                        _this2._debug("Using custom authorization header.");
+
+                        init["headers"]["Authorization"] = _this2._auth;
+                      } else {
+                        var _temp18 = function () {
+                          if (typeof _this2._auth === "object") {
+                            _this2._debug("Using custom auth credentials.");
+
+                            var _temp19 = function () {
+                              if (isBasicAuth(_this2._auth)) {
+                                var basic = Buffer.from(_this2._auth.username + ":" + _this2._auth.password).toString("base64");
+                                init["headers"]["Authorization"] = "Basic " + basic;
+                              } else {
+                                var _temp20 = function () {
+                                  if (isClientIdSecretAuth(_this2._auth)) {
+                                    // Use the built-in client_credentials grant.
+                                    _this2._debug("Using default auth (client_credentials)."); // Fetch an access token and add it to the request.
+                                    // Access token can be fetched from cache or using a custom auth method.
+
+
+                                    return Promise.resolve(_this2.getAccessToken(_this2._auth)).then(function (token) {
+                                      if (token) {
+                                        init["headers"]["Authorization"] = "Bearer " + token.access_token;
+                                      }
+                                    });
+                                  } else if (isAccessTokenAuth(_this2._auth)) {
+                                    init["headers"]["Authorization"] = _this2._auth.token_type + " " + _this2._auth.access_token;
+                                  }
+                                }();
+
+                                if (_temp20 && _temp20.then) return _temp20.then(function () {});
+                              }
+                            }();
+
+                            if (_temp19 && _temp19.then) return _temp19.then(function () {});
+                          }
+                        }();
+
+                        if (_temp18 && _temp18.then) return _temp18.then(function () {});
+                      }
+                    }();
+
+                    if (_temp17 && _temp17.then) return _temp17.then(function () {});
+                  }
+                }();
 
-                init["headers"]["Authorization"] = _this2._auth();
+                if (_temp16 && _temp16.then) return _temp16.then(function () {});
               } else {
-                // Otherwise use the built-in client_credentials grant.
-                _this2._debug("Using default auth (client_credentials)."); // Fetch an access token and add it to the request.
-                // Access token can be fetched from cache or using a custom auth method.
-
-
-                return Promise.resolve(_this2.getAccessToken()).then(function (token) {
-                  if (token) {
-                    init["headers"]["Authorization"] = "Bearer " + token.access_token;
+                var _temp21 = function () {
+                  if (typeof init.withAuth === "string") {
+                    _this2._debug("Using custom authorization header.");
+
+                    init["headers"]["Authorization"] = init.withAuth;
+                  } else {
+                    var _temp22 = function () {
+                      if (typeof init.withAuth === "function") {
+                        _this2._debug("Using custom authorization callback.");
+
+                        init["headers"]["Authorization"] = init.withAuth();
+                      } else {
+                        var _temp23 = function () {
+                          if (isBasicAuth(init.withAuth)) {
+                            _this2._debug("Using basic authorization header");
+
+                            var basic = Buffer.from(init.withAuth.username + ":" + init.withAuth.password).toString("base64");
+                            init["headers"]["Authorization"] = "Basic " + basic;
+                          } else {
+                            var _temp24 = function () {
+                              if (isClientIdSecretAuth(init.withAuth)) {
+                                // Fetch an access token and add it to the request.
+                                // Access token can be fetched from cache or using a custom auth method.
+                                return Promise.resolve(_this2.getAccessToken(init.withAuth)).then(function (token) {
+                                  if (token) {
+                                    init["headers"]["Authorization"] = "Bearer " + token.access_token;
+                                  }
+                                });
+                              } else if (isAccessTokenAuth(init.withAuth)) {
+                                init["headers"]["Authorization"] = init.withAuth.token_type + " " + init.withAuth.access_token;
+                              }
+                            }();
+
+                            if (_temp24 && _temp24.then) return _temp24.then(function () {});
+                          }
+                        }();
+
+                        if (_temp23 && _temp23.then) return _temp23.then(function () {});
+                      }
+                    }();
+
+                    if (_temp22 && _temp22.then) return _temp22.then(function () {});
                   }
-                });
+                }();
+
+                if (_temp21 && _temp21.then) return _temp21.then(function () {});
               }
             }();
-
-            if (_temp8 && _temp8.then) return _temp8.then(function () {});
           }
         }();
 
-        return Promise.resolve(_temp7 && _temp7.then ? _temp7.then(_temp6) : _temp6(_temp7));
+        return Promise.resolve(_temp15 && _temp15.then ? _temp15.then(_temp14) : _temp14(_temp15));
       } catch (e) {
         return Promise.reject(e);
       }
     });
 
+    _proto.createResource = function createResource(type, body, options) {
+      try {
+        var _options3, _options4;
+
+        var _this4 = this;
+
+        options = _extends({
+          deserialize: true,
+          withAuth: true
+        }, options);
+        return Promise.resolve(_this4.getEntryForResourceType(type, ((_options3 = options) == null ? void 0 : _options3.locale) !== ((_options4 = options) == null ? void 0 : _options4.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+          var _options5;
+
+          var url = _this4.buildUrl(apiPath, (_options5 = options) == null ? void 0 : _options5.params);
+
+          _this4._debug("Creating resource of type " + type + ".");
+
+          _this4._debug(url.toString()); // Add type to body.
+
+
+          body.data.type = type;
+          return Promise.resolve(_this4.fetch(url.toString(), {
+            method: "POST",
+            body: JSON.stringify(body),
+            withAuth: options.withAuth
+          })).then(function (response) {
+            function _temp26() {
+              return Promise.resolve(response.json()).then(function (json) {
+                return options.deserialize ? _this4.deserialize(json) : json;
+              });
+            }
+
+            var _temp25 = function () {
+              if (!(response == null ? void 0 : response.ok)) {
+                return Promise.resolve(_this4.handleJsonApiErrors(response)).then(function () {});
+              }
+            }();
+
+            return _temp25 && _temp25.then ? _temp25.then(_temp26) : _temp26(_temp25);
+          });
+        });
+      } catch (e) {
+        return Promise.reject(e);
+      }
+    };
+
+    _proto.createFileResource = function createFileResource(type, body, options) {
+      try {
+        var _body$data, _body$data$attributes, _options6, _options7;
+
+        var _this6 = this;
+
+        options = _extends({
+          deserialize: true,
+          withAuth: true
+        }, options);
+        var hostType = body == null ? void 0 : (_body$data = body.data) == null ? void 0 : (_body$data$attributes = _body$data.attributes) == null ? void 0 : _body$data$attributes.type;
+        return Promise.resolve(_this6.getEntryForResourceType(hostType, ((_options6 = options) == null ? void 0 : _options6.locale) !== ((_options7 = options) == null ? void 0 : _options7.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+          var _options8;
+
+          var url = _this6.buildUrl(apiPath + "/" + body.data.attributes.field, (_options8 = options) == null ? void 0 : _options8.params);
+
+          _this6._debug("Creating file resource for media of type " + type + ".");
+
+          _this6._debug(url.toString());
+
+          return Promise.resolve(_this6.fetch(url.toString(), {
+            method: "POST",
+            headers: {
+              "Content-Type": "application/octet-stream",
+              Accept: "application/vnd.api+json",
+              "Content-Disposition": "file; filename=\"" + body.data.attributes.filename + "\""
+            },
+            body: body.data.attributes.file,
+            withAuth: options.withAuth
+          })).then(function (response) {
+            function _temp28() {
+              return Promise.resolve(response.json()).then(function (json) {
+                return options.deserialize ? _this6.deserialize(json) : json;
+              });
+            }
+
+            var _temp27 = function () {
+              if (!(response == null ? void 0 : response.ok)) {
+                return Promise.resolve(_this6.handleJsonApiErrors(response)).then(function () {});
+              }
+            }();
+
+            return _temp27 && _temp27.then ? _temp27.then(_temp28) : _temp28(_temp27);
+          });
+        });
+      } catch (e) {
+        return Promise.reject(e);
+      }
+    };
+
+    _proto.updateResource = function updateResource(type, uuid, body, options) {
+      try {
+        var _options9, _options10;
+
+        var _this8 = this;
+
+        options = _extends({
+          deserialize: true,
+          withAuth: true
+        }, options);
+        return Promise.resolve(_this8.getEntryForResourceType(type, ((_options9 = options) == null ? void 0 : _options9.locale) !== ((_options10 = options) == null ? void 0 : _options10.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+          var _options11;
+
+          var url = _this8.buildUrl(apiPath + "/" + uuid, (_options11 = options) == null ? void 0 : _options11.params);
+
+          _this8._debug("Updating resource of type " + type + " with id " + uuid + ".");
+
+          _this8._debug(url.toString()); // Update body.
+
+
+          body.data.type = type;
+          body.data.id = uuid;
+          return Promise.resolve(_this8.fetch(url.toString(), {
+            method: "PATCH",
+            body: JSON.stringify(body),
+            withAuth: options.withAuth
+          })).then(function (response) {
+            function _temp30() {
+              return Promise.resolve(response.json()).then(function (json) {
+                return options.deserialize ? _this8.deserialize(json) : json;
+              });
+            }
+
+            var _temp29 = function () {
+              if (!(response == null ? void 0 : response.ok)) {
+                return Promise.resolve(_this8.handleJsonApiErrors(response)).then(function () {});
+              }
+            }();
+
+            return _temp29 && _temp29.then ? _temp29.then(_temp30) : _temp30(_temp29);
+          });
+        });
+      } catch (e) {
+        return Promise.reject(e);
+      }
+    };
+
+    _proto.deleteResource = function deleteResource(type, uuid, options) {
+      try {
+        var _options12, _options13;
+
+        var _this10 = this;
+
+        options = _extends({
+          withAuth: true,
+          params: {}
+        }, options);
+        return Promise.resolve(_this10.getEntryForResourceType(type, ((_options12 = options) == null ? void 0 : _options12.locale) !== ((_options13 = options) == null ? void 0 : _options13.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+          var _options14;
+
+          var url = _this10.buildUrl(apiPath + "/" + uuid, (_options14 = options) == null ? void 0 : _options14.params);
+
+          _this10._debug("Deleting resource of type " + type + " with id " + uuid + ".");
+
+          _this10._debug(url.toString());
+
+          return Promise.resolve(_this10.fetch(url.toString(), {
+            method: "DELETE",
+            withAuth: options.withAuth
+          })).then(function (response) {
+            function _temp32() {
+              return response.status === 204;
+            }
+
+            var _temp31 = function () {
+              if (!(response == null ? void 0 : response.ok)) {
+                return Promise.resolve(_this10.handleJsonApiErrors(response)).then(function () {});
+              }
+            }();
+
+            return _temp31 && _temp31.then ? _temp31.then(_temp32) : _temp32(_temp31);
+          });
+        });
+      } catch (e) {
+        return Promise.reject(e);
+      }
+    };
+
     _proto.getResource = function getResource(type, uuid, options) {
       try {
-        var _temp13 = function _temp13(_result2) {
-          var _options3, _options4;
+        var _temp39 = function _temp39(_result4) {
+          var _options15, _options16;
 
-          return _exit3 ? _result2 : Promise.resolve(_this4.getEntryForResourceType(type, ((_options3 = options) == null ? void 0 : _options3.locale) !== ((_options4 = options) == null ? void 0 : _options4.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
-            var _options5;
+          return _exit5 ? _result4 : Promise.resolve(_this12.getEntryForResourceType(type, ((_options15 = options) == null ? void 0 : _options15.locale) !== ((_options16 = options) == null ? void 0 : _options16.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+            var _options17;
 
-            var url = _this4.buildUrl(apiPath + "/" + uuid, (_options5 = options) == null ? void 0 : _options5.params);
+            var url = _this12.buildUrl(apiPath + "/" + uuid, (_options17 = options) == null ? void 0 : _options17.params);
 
-            _this4._debug("Fetching resource " + type + " with id " + uuid + ".");
+            _this12._debug("Fetching resource " + type + " with id " + uuid + ".");
 
-            _this4._debug(url.toString());
+            _this12._debug(url.toString());
 
-            return Promise.resolve(_this4.fetch(url.toString(), {
+            return Promise.resolve(_this12.fetch(url.toString(), {
               withAuth: options.withAuth
             })).then(function (response) {
-              return Promise.resolve(response.json()).then(function (json) {
-                function _temp10() {
-                  return options.deserialize ? _this4.deserialize(json) : json;
-                }
-
-                var _temp9 = function () {
-                  if (options.withCache) {
-                    return Promise.resolve(_this4.cache.set(options.cacheKey, JSON.stringify(json))).then(function () {});
+              function _temp36() {
+                return Promise.resolve(response.json()).then(function (json) {
+                  function _temp34() {
+                    return options.deserialize ? _this12.deserialize(json) : json;
                   }
-                }();
 
-                return _temp9 && _temp9.then ? _temp9.then(_temp10) : _temp10(_temp9);
-              });
+                  var _temp33 = function () {
+                    if (options.withCache) {
+                      return Promise.resolve(_this12.cache.set(options.cacheKey, JSON.stringify(json))).then(function () {});
+                    }
+                  }();
+
+                  return _temp33 && _temp33.then ? _temp33.then(_temp34) : _temp34(_temp33);
+                });
+              }
+
+              var _temp35 = function () {
+                if (!(response == null ? void 0 : response.ok)) {
+                  return Promise.resolve(_this12.handleJsonApiErrors(response)).then(function () {});
+                }
+              }();
+
+              return _temp35 && _temp35.then ? _temp35.then(_temp36) : _temp36(_temp35);
             });
           });
         };
 
-        var _exit3;
+        var _exit5;
 
-        var _this4 = this;
+        var _this12 = this;
 
         options = _extends({
           deserialize: true,
-          withAuth: _this4.withAuth,
+          withAuth: _this12.withAuth,
           withCache: false,
           params: {}
         }, options);
 
-        var _temp14 = function () {
+        var _temp40 = function () {
           if (options.withCache) {
-            return Promise.resolve(_this4.cache.get(options.cacheKey)).then(function (cached) {
+            return Promise.resolve(_this12.cache.get(options.cacheKey)).then(function (cached) {
               if (cached) {
-                _this4._debug("Returning cached resource " + type + " with id " + uuid);
+                _this12._debug("Returning cached resource " + type + " with id " + uuid);
 
                 var json = JSON.parse(cached);
-                _exit3 = 1;
-                return options.deserialize ? _this4.deserialize(json) : json;
+                _exit5 = 1;
+                return options.deserialize ? _this12.deserialize(json) : json;
               }
             });
           }
         }();
 
-        return Promise.resolve(_temp14 && _temp14.then ? _temp14.then(_temp13) : _temp13(_temp14));
+        return Promise.resolve(_temp40 && _temp40.then ? _temp40.then(_temp39) : _temp39(_temp40));
       } catch (e) {
         return Promise.reject(e);
       }
@@ -1130,58 +1553,81 @@
 
     _proto.getResourceFromContext = function getResourceFromContext(input, context, options) {
       try {
-        var _options6, _options7, _options8;
+        var _options19, _options20;
 
-        var _this6 = this;
+        var _temp43 = function _temp43(_result6) {
+          var _options18;
 
-        var type = typeof input === "string" ? input : input.jsonapi.resourceName;
+          if (_exit7) return _result6;
 
-        if (typeof input !== "string") {
-          // Fix for subrequests and translation.
-          // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
-          // @shadcn, note to self:
-          // Given an entity at /example with no translation.
-          // When we try to translate /es/example, decoupled router will properly
-          // translate to the untranslated version and set the locale to es.
-          // However a subrequests to /es/subrequests for decoupled router will fail.
-          if (context.locale && input.entity.langcode !== context.locale) {
-            context.locale = input.entity.langcode;
-          }
-        }
+          var path = _this14.getPathFromContext(context, {
+            pathPrefix: (_options18 = options) == null ? void 0 : _options18.pathPrefix
+          });
+
+          return Promise.resolve(_this14.getResourceByPath(path, _options)); // If no locale is passed, skip entity if not default_langcode.
+          // This happens because decoupled_router will still translate the path
+          // to a resource.
+          // TODO: Figure out if we want this behavior.
+          // For now this causes a bug where a non-i18n sites builds (ISR) pages for
+          // localized pages.
+          // if (!context.locale && !resource?.default_langcode) {
+          //   return null
+          // }
+        };
 
+        var _exit7;
+
+        var _this14 = this;
+
+        var type = typeof input === "string" ? input : input.jsonapi.resourceName;
+        var previewData = context.previewData;
         options = _extends({
           // Add support for revisions for node by default.
           // TODO: Make this required before stable?
           isVersionable: /^node--/.test(type),
           deserialize: true,
           pathPrefix: "/",
-          withAuth: _this6.withAuth,
+          withAuth: _this14.getAuthFromContextAndOptions(context, options),
           params: {}
         }, options);
-
-        var path = _this6.getPathFromContext(context, {
-          pathPrefix: (_options6 = options) == null ? void 0 : _options6.pathPrefix
-        });
-
-        var previewData = context.previewData;
-        return Promise.resolve(_this6.getResourceByPath(path, {
+        var _options = {
           deserialize: options.deserialize,
           isVersionable: options.isVersionable,
           locale: context.locale,
           defaultLocale: context.defaultLocale,
-          withAuth: context.preview || ((_options7 = options) == null ? void 0 : _options7.withAuth),
+          withAuth: (_options19 = options) == null ? void 0 : _options19.withAuth,
           params: _extends({
             resourceVersion: previewData == null ? void 0 : previewData.resourceVersion
-          }, (_options8 = options) == null ? void 0 : _options8.params)
-        })); // If no locale is passed, skip entity if not default_langcode.
-        // This happens because decoupled_router will still translate the path
-        // to a resource.
-        // TODO: Figure out if we want this behavior.
-        // For now this causes a bug where a non-i18n sites builds (ISR) pages for
-        // localized pages.
-        // if (!context.locale && !resource?.default_langcode) {
-        //   return null
-        // }
+          }, (_options20 = options) == null ? void 0 : _options20.params)
+        };
+
+        var _temp44 = function () {
+          if (typeof input !== "string") {
+            // Fix for subrequests and translation.
+            // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
+            // @shadcn, note to self:
+            // Given an entity at /example with no translation.
+            // When we try to translate /es/example, decoupled router will properly
+            // translate to the untranslated version and set the locale to es.
+            // However a subrequests to /es/subrequests for decoupled router will fail.
+            if (context.locale && input.entity.langcode !== context.locale) {
+              context.locale = input.entity.langcode;
+            } // Given we already have the path info, we can skip subrequests and just make a simple
+            // request to the Drupal site to get the entity.
+
+
+            return function () {
+              var _input$entity;
+
+              if ((_input$entity = input.entity) == null ? void 0 : _input$entity.uuid) {
+                _exit7 = 1;
+                return Promise.resolve(_this14.getResource(type, input.entity.uuid, _options));
+              }
+            }();
+          }
+        }();
+
+        return Promise.resolve(_temp44 && _temp44.then ? _temp44.then(_temp43) : _temp43(_temp44));
       } catch (e) {
         return Promise.reject(e);
       }
@@ -1189,12 +1635,12 @@
 
     _proto.getResourceByPath = function getResourceByPath(path, options) {
       try {
-        var _this8 = this;
+        var _this16 = this;
 
         options = _extends({
           deserialize: true,
           isVersionable: false,
-          withAuth: _this8.withAuth,
+          withAuth: _this16.withAuth,
           params: {}
         }, options);
 
@@ -1204,7 +1650,7 @@
 
         if (options.locale && options.defaultLocale && path.indexOf(options.locale) !== 1) {
           path = path === "/" ? path : path.replace(/^\/+/, "");
-          path = _this8.getPathFromContext({
+          path = _this16.getPathFromContext({
             params: {
               slug: [path]
             },
@@ -1253,11 +1699,11 @@
           subrequestsPath = "/" + options.locale + "/subrequests";
         }
 
-        var url = _this8.buildUrl(subrequestsPath, {
+        var url = _this16.buildUrl(subrequestsPath, {
           _format: "json"
         });
 
-        return Promise.resolve(_this8.fetch(url.toString(), {
+        return Promise.resolve(_this16.fetch(url.toString(), {
           method: "POST",
           credentials: "include",
           redirect: "follow",
@@ -1274,7 +1720,7 @@
                 var error = JSON.parse(json.router.body);
 
                 if (error == null ? void 0 : error.message) {
-                  throw new Error(error.message);
+                  _this16.throwError(new Error(error.message));
                 }
               }
 
@@ -1284,10 +1730,10 @@
             var data = JSON.parse((_json$resolvedResourc2 = json["resolvedResource#uri{0}"]) == null ? void 0 : _json$resolvedResourc2.body);
 
             if (data.errors) {
-              throw new Error(_this8.formatJsonApiErrors(data.errors));
+              _this16.throwError(new Error(_this16.formatJsonApiErrors(data.errors)));
             }
 
-            return options.deserialize ? _this8.deserialize(data) : data;
+            return options.deserialize ? _this16.deserialize(data) : data;
           });
         });
       } catch (e) {
@@ -1297,25 +1743,39 @@
 
     _proto.getResourceCollection = function getResourceCollection(type, options) {
       try {
-        var _options9, _options10;
+        var _options21, _options22;
 
-        var _this10 = this;
+        var _this18 = this;
 
         options = _extends({
-          withAuth: _this10.withAuth,
+          withAuth: _this18.withAuth,
           deserialize: true
         }, options);
-        return Promise.resolve(_this10.getEntryForResourceType(type, ((_options9 = options) == null ? void 0 : _options9.locale) !== ((_options10 = options) == null ? void 0 : _options10.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
-          var _options11;
+        return Promise.resolve(_this18.getEntryForResourceType(type, ((_options21 = options) == null ? void 0 : _options21.locale) !== ((_options22 = options) == null ? void 0 : _options22.defaultLocale) ? options.locale : undefined)).then(function (apiPath) {
+          var _options23;
 
-          var url = _this10.buildUrl(apiPath, _extends({}, (_options11 = options) == null ? void 0 : _options11.params));
+          var url = _this18.buildUrl(apiPath, _extends({}, (_options23 = options) == null ? void 0 : _options23.params));
 
-          return Promise.resolve(_this10.fetch(url.toString(), {
+          _this18._debug("Fetching resource collection of type " + type);
+
+          _this18._debug(url.toString());
+
+          return Promise.resolve(_this18.fetch(url.toString(), {
             withAuth: options.withAuth
           })).then(function (response) {
-            return Promise.resolve(response.json()).then(function (json) {
-              return options.deserialize ? _this10.deserialize(json) : json;
-            });
+            function _temp46() {
+              return Promise.resolve(response.json()).then(function (json) {
+                return options.deserialize ? _this18.deserialize(json) : json;
+              });
+            }
+
+            var _temp45 = function () {
+              if (!(response == null ? void 0 : response.ok)) {
+                return Promise.resolve(_this18.handleJsonApiErrors(response)).then(function () {});
+              }
+            }();
+
+            return _temp45 && _temp45.then ? _temp45.then(_temp46) : _temp46(_temp45);
           });
         });
       } catch (e) {
@@ -1325,16 +1785,15 @@
 
     _proto.getResourceCollectionFromContext = function getResourceCollectionFromContext(type, context, options) {
       try {
-        var _this12 = this;
+        var _this20 = this;
 
         options = _extends({
-          withAuth: _this12.withAuth,
           deserialize: true
         }, options);
-        return Promise.resolve(_this12.getResourceCollection(type, _extends({}, options, {
+        return Promise.resolve(_this20.getResourceCollection(type, _extends({}, options, {
           locale: context.locale,
           defaultLocale: context.defaultLocale,
-          withAuth: context.preview || options.withAuth
+          withAuth: _this20.getAuthFromContextAndOptions(context, options)
         })));
       } catch (e) {
         return Promise.reject(e);
@@ -1343,10 +1802,10 @@
 
     _proto.getStaticPathsFromContext = function getStaticPathsFromContext(types, context, options) {
       try {
-        var _this14 = this;
+        var _this22 = this;
 
         options = _extends({
-          withAuth: _this14.withAuth,
+          withAuth: _this22.withAuth,
           pathPrefix: "/",
           params: {}
         }, options);
@@ -1357,19 +1816,19 @@
 
         return Promise.resolve(Promise.all(types.map(function (type) {
           try {
-            var _extends2, _options12;
+            var _extends2, _options24;
 
-            var _temp17 = function _temp17(_result3) {
-              return _exit5 ? _result3 : Promise.resolve(Promise.all(context.locales.map(function (locale) {
+            var _temp49 = function _temp49(_result7) {
+              return _exit9 ? _result7 : Promise.resolve(Promise.all(context.locales.map(function (locale) {
                 try {
-                  return Promise.resolve(_this14.getResourceCollection(type, {
+                  return Promise.resolve(_this22.getResourceCollection(type, {
                     deserialize: true,
                     locale: locale,
                     defaultLocale: context.defaultLocale,
                     params: params,
                     withAuth: options.withAuth
                   })).then(function (resources) {
-                    return _this14.buildStaticPathsFromResources(resources, {
+                    return _this22.buildStaticPathsFromResources(resources, {
                       locale: locale,
                       pathPrefix: options.pathPrefix
                     });
@@ -1382,30 +1841,30 @@
               });
             };
 
-            var _exit5;
+            var _exit9;
 
             // Use sparse fieldset to expand max size.
             // Note we don't need status filter here since this runs non-authenticated (by default).
-            var params = _extends((_extends2 = {}, _extends2["fields[" + type + "]"] = "path", _extends2), (_options12 = options) == null ? void 0 : _options12.params); // Handle localized path aliases
+            var params = _extends((_extends2 = {}, _extends2["fields[" + type + "]"] = "path", _extends2), (_options24 = options) == null ? void 0 : _options24.params); // Handle localized path aliases
 
 
-            var _temp18 = function () {
+            var _temp50 = function () {
               var _context$locales;
 
               if (!((_context$locales = context.locales) == null ? void 0 : _context$locales.length)) {
-                return Promise.resolve(_this14.getResourceCollection(type, {
+                return Promise.resolve(_this22.getResourceCollection(type, {
                   params: params,
                   withAuth: options.withAuth
                 })).then(function (resources) {
-                  _exit5 = 1;
-                  return _this14.buildStaticPathsFromResources(resources, {
+                  _exit9 = 1;
+                  return _this22.buildStaticPathsFromResources(resources, {
                     pathPrefix: options.pathPrefix
                   });
                 });
               }
             }();
 
-            return Promise.resolve(_temp18 && _temp18.then ? _temp18.then(_temp17) : _temp17(_temp18));
+            return Promise.resolve(_temp50 && _temp50.then ? _temp50.then(_temp49) : _temp49(_temp50));
           } catch (e) {
             return Promise.reject(e);
           }
@@ -1418,12 +1877,12 @@
     };
 
     _proto.buildStaticPathsFromResources = function buildStaticPathsFromResources(resources, options) {
-      var _this15 = this;
+      var _this23 = this;
 
       var paths = resources == null ? void 0 : resources.flatMap(function (resource) {
         var _resource$path, _resource$path2;
 
-        return (resource == null ? void 0 : (_resource$path = resource.path) == null ? void 0 : _resource$path.alias) === _this15.frontPage ? "/" : resource == null ? void 0 : (_resource$path2 = resource.path) == null ? void 0 : _resource$path2.alias;
+        return (resource == null ? void 0 : (_resource$path = resource.path) == null ? void 0 : _resource$path.alias) === _this23.frontPage ? "/" : resource == null ? void 0 : (_resource$path2 = resource.path) == null ? void 0 : _resource$path2.alias;
       }).filter(Boolean);
       return (paths == null ? void 0 : paths.length) ? this.buildStaticPathsParamsFromPaths(paths, options) : [];
     };
@@ -1454,17 +1913,17 @@
 
     _proto.translatePath = function translatePath(path, options) {
       try {
-        var _this17 = this;
+        var _this25 = this;
 
         options = _extends({
-          withAuth: _this17.withAuth
+          withAuth: _this25.withAuth
         }, options);
 
-        var url = _this17.buildUrl("/router/translate-path", {
+        var url = _this25.buildUrl("/router/translate-path", {
           path: path
         });
 
-        return Promise.resolve(_this17.fetch(url.toString(), {
+        return Promise.resolve(_this25.fetch(url.toString(), {
           withAuth: options.withAuth
         })).then(function (response) {
           return (response == null ? void 0 : response.ok) ? Promise.resolve(response.json()) : null;
@@ -1476,19 +1935,18 @@
 
     _proto.translatePathFromContext = function translatePathFromContext(context, options) {
       try {
-        var _this19 = this;
+        var _this27 = this;
 
         options = _extends({
-          pathPrefix: "/",
-          withAuth: _this19.withAuth
+          pathPrefix: "/"
         }, options);
 
-        var path = _this19.getPathFromContext(context, {
+        var path = _this27.getPathFromContext(context, {
           pathPrefix: options.pathPrefix
         });
 
-        return Promise.resolve(_this19.translatePath(path, {
-          withAuth: context.preview || options.withAuth
+        return Promise.resolve(_this27.translatePath(path, {
+          withAuth: _this27.getAuthFromContextAndOptions(context, options)
         }));
       } catch (e) {
         return Promise.reject(e);
@@ -1508,7 +1966,9 @@
         pathPrefix = "/" + context.locale + pathPrefix;
       }
 
-      slug = Array.isArray(slug) ? slug.join("/") : slug; // Handle front page.
+      slug = Array.isArray(slug) ? slug.map(function (s) {
+        return encodeURIComponent(s);
+      }).join("/") : slug; // Handle front page.
 
       if (!slug) {
         slug = this.frontPage;
@@ -1521,19 +1981,19 @@
 
     _proto.getIndex = function getIndex(locale) {
       try {
-        var _this21 = this;
+        var _this29 = this;
 
-        var url = _this21.buildUrl(locale ? "/" + locale + _this21.apiPrefix : _this21.apiPrefix);
+        var url = _this29.buildUrl(locale ? "/" + locale + _this29.apiPrefix : _this29.apiPrefix);
 
         return Promise.resolve(_catch$2(function () {
-          return Promise.resolve(_this21.fetch(url.toString(), {
+          return Promise.resolve(_this29.fetch(url.toString(), {
             // As per https://www.drupal.org/node/2984034 /jsonapi is public.
             withAuth: false
           })).then(function (response) {
             return Promise.resolve(response.json());
           });
         }, function (error) {
-          throw new Error("Failed to fetch JSON:API index at " + url.toString() + " - " + error.message);
+          _this29.throwError(new Error("Failed to fetch JSON:API index at " + url.toString() + " - " + error.message));
         }));
       } catch (e) {
         return Promise.reject(e);
@@ -1542,17 +2002,17 @@
 
     _proto.getEntryForResourceType = function getEntryForResourceType(type, locale) {
       try {
-        var _this23 = this;
+        var _this31 = this;
 
-        if (_this23.useDefaultResourceTypeEntry) {
+        if (_this31.useDefaultResourceTypeEntry) {
           var _type$split = type.split("--"),
               id = _type$split[0],
               bundle = _type$split[1];
 
-          return Promise.resolve("" + _this23.baseUrl + _this23.apiPrefix + "/" + (locale ? locale + "/" + id + "/" + bundle : id + "/" + bundle));
+          return Promise.resolve("" + _this31.baseUrl + _this31.apiPrefix + "/" + (locale ? locale + "/" + id + "/" + bundle : id + "/" + bundle));
         }
 
-        return Promise.resolve(_this23.getIndex(locale)).then(function (index) {
+        return Promise.resolve(_this31.getIndex(locale)).then(function (index) {
           var _index$links;
 
           var link = (_index$links = index.links) == null ? void 0 : _index$links[type];
@@ -1566,10 +2026,10 @@
 
           if (locale) {
             var pattern = "^\\/" + locale + "\\/";
-            var path = href.replace(_this23.baseUrl, "");
+            var path = href.replace(_this31.baseUrl, "");
 
             if (!new RegExp(pattern, "i").test(path)) {
-              return _this23.baseUrl + "/" + locale + path;
+              return _this31.baseUrl + "/" + locale + path;
             }
           }
 
@@ -1582,75 +2042,68 @@
 
     _proto.preview = function preview(request, response, options) {
       try {
-        var _this25 = this;
+        var _this33 = this;
 
         var _request$query = request.query,
             slug = _request$query.slug,
             resourceVersion = _request$query.resourceVersion,
-            secret = _request$query.secret,
-            locale = _request$query.locale,
-            defaultLocale = _request$query.defaultLocale;
-
-        if (secret !== _this25.previewSecret) {
-          return Promise.resolve(response.status(401).json({
-            message: (options == null ? void 0 : options.errorMessages.secret) || "Invalid preview secret."
-          }));
-        }
-
-        if (!slug) {
-          return Promise.resolve(response.status(401).end({
-            message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug."
-          }));
-        }
-
-        var _options = {
-          isVersionable: !!resourceVersion
-        };
-
-        if (locale && defaultLocale) {
-          // Fix for und locale.
-          var _locale = locale === "und" ? defaultLocale : locale;
-
-          _options = _extends({}, _options, {
-            locale: _locale,
-            defaultLocale: defaultLocale
-          });
-        }
+            plugin = _request$query.plugin;
+        return Promise.resolve(_catch$2(function () {
+          // Always clear preview data to handle different scopes.
+          response.clearPreviewData(); // Validate the preview url.
 
-        return Promise.resolve(_this25.getResourceByPath(slug, _extends({
-          withAuth: true
-        }, _options))).then(function (entity) {
-          if (!entity || !(entity == null ? void 0 : entity.path)) {
-            throw new Error("The path attribute is missing for entity with slug " + slug);
-          }
+          var validateUrl = _this33.buildUrl("/next/preview-url");
 
-          var url = (entity == null ? void 0 : entity.default_langcode) ? entity.path.alias : "/" + entity.path.langcode + entity.path.alias;
+          return Promise.resolve(_this33.fetch(validateUrl.toString(), {
+            method: "POST",
+            headers: {
+              "Content-Type": "application/json"
+            },
+            body: JSON.stringify(request.query)
+          })).then(function (result) {
+            var _exit10;
+
+            function _temp52(_result9) {
+              return _exit10 ? _result9 : Promise.resolve(result.json()).then(function (validationPayload) {
+                response.setPreviewData(_extends({
+                  resourceVersion: resourceVersion,
+                  plugin: plugin
+                }, validationPayload)); // Fix issue with cookie.
+                // See https://github.com/vercel/next.js/discussions/32238.
+                // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+
+                if (_this33.forceIframeSameSiteCookie) {
+                  var previous = response.getHeader("Set-Cookie");
+                  previous.forEach(function (cookie, index) {
+                    previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
+                  });
+                  response.setHeader("Set-Cookie", previous);
+                } // We can safely redirect to the slug since this has been validated on the server.
 
-          if (!url) {
-            response.status(404).end({
-              message: (options == null ? void 0 : options.errorMessages.slug) || "Invalid slug"
-            });
-          }
 
-          response.setPreviewData({
-            resourceVersion: resourceVersion
-          }); // Fix issue with cookie.
-          // See https://github.com/vercel/next.js/discussions/32238.
-          // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+                response.writeHead(307, {
+                  Location: slug
+                });
+                return response.end();
+              });
+            }
 
-          if (_this25.forceIframeSameSiteCookie) {
-            var previous = response.getHeader("Set-Cookie");
-            previous.forEach(function (cookie, index) {
-              previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure");
-            });
-            response.setHeader("Set-Cookie", previous);
-          }
+            var _temp51 = function () {
+              if (!result.ok) {
+                response.statusCode = result.status;
+                _exit10 = 1;
+                var _json2 = response.json;
+                return Promise.resolve(result.json()).then(function (_result$json) {
+                  return _json2.call(response, _result$json);
+                });
+              }
+            }();
 
-          response.writeHead(307, {
-            Location: url
+            return _temp51 && _temp51.then ? _temp51.then(_temp52) : _temp52(_temp51);
           });
-          return response.end();
-        });
+        }, function () {
+          return response.status(422).end();
+        }));
       } catch (e) {
         return Promise.reject(e);
       }
@@ -1658,77 +2111,87 @@
 
     _proto.getMenu = function getMenu(name, options) {
       try {
-        var _temp22 = function _temp22(_result4) {
-          var _options13;
+        var _temp58 = function _temp58(_result10) {
+          var _options25;
 
-          if (_exit7) return _result4;
-          var localePrefix = ((_options13 = options) == null ? void 0 : _options13.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+          if (_exit12) return _result10;
+          var localePrefix = ((_options25 = options) == null ? void 0 : _options25.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
-          var url = _this27.buildUrl("" + localePrefix + _this27.apiPrefix + "/menu_items/" + name, options.params);
+          var url = _this35.buildUrl("" + localePrefix + _this35.apiPrefix + "/menu_items/" + name, options.params);
 
-          _this27._debug("Fetching menu items for " + name + ".");
+          _this35._debug("Fetching menu items for " + name + ".");
 
-          _this27._debug(url.toString());
+          _this35._debug(url.toString());
 
-          return Promise.resolve(_this27.fetch(url.toString(), {
+          return Promise.resolve(_this35.fetch(url.toString(), {
             withAuth: options.withAuth
           })).then(function (response) {
-            return Promise.resolve(response.json()).then(function (data) {
-              var items = options.deserialize ? _this27.deserialize(data) : data;
+            function _temp55() {
+              return Promise.resolve(response.json()).then(function (data) {
+                var items = options.deserialize ? _this35.deserialize(data) : data;
 
-              var _this27$buildMenuTree = _this27.buildMenuTree(items),
-                  tree = _this27$buildMenuTree.items;
+                var _this35$buildMenuTree = _this35.buildMenuTree(items),
+                    tree = _this35$buildMenuTree.items;
 
-              var menu = {
-                items: items,
-                tree: tree
-              };
+                var menu = {
+                  items: items,
+                  tree: tree
+                };
 
-              var _temp19 = function () {
-                if (options.withCache) {
-                  return Promise.resolve(_this27.cache.set(options.cacheKey, JSON.stringify(menu))).then(function () {});
-                }
-              }();
+                var _temp53 = function () {
+                  if (options.withCache) {
+                    return Promise.resolve(_this35.cache.set(options.cacheKey, JSON.stringify(menu))).then(function () {});
+                  }
+                }();
 
-              return _temp19 && _temp19.then ? _temp19.then(function () {
-                return menu;
-              }) : menu;
-            });
+                return _temp53 && _temp53.then ? _temp53.then(function () {
+                  return menu;
+                }) : menu;
+              });
+            }
+
+            var _temp54 = function () {
+              if (!(response == null ? void 0 : response.ok)) {
+                return Promise.resolve(_this35.handleJsonApiErrors(response)).then(function () {});
+              }
+            }();
+
+            return _temp54 && _temp54.then ? _temp54.then(_temp55) : _temp55(_temp54);
           });
         };
 
-        var _exit7;
+        var _exit12;
 
-        var _this27 = this;
+        var _this35 = this;
 
         options = _extends({
-          withAuth: _this27.withAuth,
+          withAuth: _this35.withAuth,
           deserialize: true,
           params: {},
           withCache: false
         }, options);
 
-        var _temp23 = function () {
+        var _temp59 = function () {
           if (options.withCache) {
-            return Promise.resolve(_this27.cache.get(options.cacheKey)).then(function (cached) {
+            return Promise.resolve(_this35.cache.get(options.cacheKey)).then(function (cached) {
               if (cached) {
-                _this27._debug("Returning cached menu items for " + name);
+                _this35._debug("Returning cached menu items for " + name);
 
-                _exit7 = 1;
+                _exit12 = 1;
                 return JSON.parse(cached);
               }
             });
           }
         }();
 
-        return Promise.resolve(_temp23 && _temp23.then ? _temp23.then(_temp22) : _temp22(_temp23));
+        return Promise.resolve(_temp59 && _temp59.then ? _temp59.then(_temp58) : _temp58(_temp59));
       } catch (e) {
         return Promise.reject(e);
       }
     };
 
     _proto.buildMenuTree = function buildMenuTree(links, parent) {
-      var _this28 = this;
+      var _this36 = this;
 
       if (parent === void 0) {
         parent = "";
@@ -1745,42 +2208,52 @@
       });
       return children.length ? {
         items: children.map(function (link) {
-          return _extends({}, link, _this28.buildMenuTree(links, link.id));
+          return _extends({}, link, _this36.buildMenuTree(links, link.id));
         })
       } : {};
     };
 
     _proto.getView = function getView(name, options) {
       try {
-        var _options14;
+        var _options26;
 
-        var _this30 = this;
+        var _this38 = this;
 
         options = _extends({
-          withAuth: _this30.withAuth,
+          withAuth: _this38.withAuth,
           deserialize: true,
           params: {}
         }, options);
-        var localePrefix = ((_options14 = options) == null ? void 0 : _options14.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+        var localePrefix = ((_options26 = options) == null ? void 0 : _options26.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
         var _name$split = name.split("--"),
             viewId = _name$split[0],
             displayId = _name$split[1];
 
-        var url = _this30.buildUrl("" + localePrefix + _this30.apiPrefix + "/views/" + viewId + "/" + displayId, options.params);
+        var url = _this38.buildUrl("" + localePrefix + _this38.apiPrefix + "/views/" + viewId + "/" + displayId, options.params);
 
-        return Promise.resolve(_this30.fetch(url.toString(), {
+        return Promise.resolve(_this38.fetch(url.toString(), {
           withAuth: options.withAuth
         })).then(function (response) {
-          return Promise.resolve(response.json()).then(function (data) {
-            var results = options.deserialize ? _this30.deserialize(data) : data;
-            return {
-              id: name,
-              results: results,
-              meta: data.meta,
-              links: data.links
-            };
-          });
+          function _temp61() {
+            return Promise.resolve(response.json()).then(function (data) {
+              var results = options.deserialize ? _this38.deserialize(data) : data;
+              return {
+                id: name,
+                results: results,
+                meta: data.meta,
+                links: data.links
+              };
+            });
+          }
+
+          var _temp60 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this38.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp60 && _temp60.then ? _temp60.then(_temp61) : _temp61(_temp60);
         });
       } catch (e) {
         return Promise.reject(e);
@@ -1789,24 +2262,34 @@
 
     _proto.getSearchIndex = function getSearchIndex(name, options) {
       try {
-        var _options15;
+        var _options27;
 
-        var _this32 = this;
+        var _this40 = this;
 
         options = _extends({
-          withAuth: _this32.withAuth,
+          withAuth: _this40.withAuth,
           deserialize: true
         }, options);
-        var localePrefix = ((_options15 = options) == null ? void 0 : _options15.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
+        var localePrefix = ((_options27 = options) == null ? void 0 : _options27.locale) && options.locale !== options.defaultLocale ? "/" + options.locale : "";
 
-        var url = _this32.buildUrl("" + localePrefix + _this32.apiPrefix + "/index/" + name, options.params);
+        var url = _this40.buildUrl("" + localePrefix + _this40.apiPrefix + "/index/" + name, options.params);
 
-        return Promise.resolve(_this32.fetch(url.toString(), {
+        return Promise.resolve(_this40.fetch(url.toString(), {
           withAuth: options.withAuth
         })).then(function (response) {
-          return Promise.resolve(response.json()).then(function (json) {
-            return options.deserialize ? _this32.deserialize(json) : json;
-          });
+          function _temp63() {
+            return Promise.resolve(response.json()).then(function (json) {
+              return options.deserialize ? _this40.deserialize(json) : json;
+            });
+          }
+
+          var _temp62 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this40.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
+
+          return _temp62 && _temp62.then ? _temp62.then(_temp63) : _temp63(_temp62);
         });
       } catch (e) {
         return Promise.reject(e);
@@ -1815,9 +2298,9 @@
 
     _proto.getSearchIndexFromContext = function getSearchIndexFromContext(name, context, options) {
       try {
-        var _this34 = this;
+        var _this42 = this;
 
-        return Promise.resolve(_this34.getSearchIndex(name, _extends({}, options, {
+        return Promise.resolve(_this42.getSearchIndex(name, _extends({}, options, {
           locale: context.locale,
           defaultLocale: context.defaultLocale
         })));
@@ -1841,49 +2324,71 @@
       return url;
     };
 
-    _proto.getAccessToken = function getAccessToken() {
+    _proto.getAccessToken = function getAccessToken(opts) {
       try {
-        var _this36 = this;
+        var _this44 = this;
 
-        if (_this36.accessToken) {
-          return Promise.resolve(_this36.accessToken);
+        if (_this44.accessToken && _this44.accessTokenScope === (opts == null ? void 0 : opts.scope)) {
+          return Promise.resolve(_this44.accessToken);
         }
 
-        if (typeof _this36._auth !== "object") {
-          throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+        if (!(opts == null ? void 0 : opts.clientId) || !(opts == null ? void 0 : opts.clientSecret)) {
+          if (typeof _this44._auth === "undefined") {
+            throw new Error("auth is not configured. See https://next-drupal.org/docs/client/auth");
+          }
         }
 
-        if (!_this36._auth.clientId || !_this36._auth.clientSecret) {
+        if (!isClientIdSecretAuth(_this44._auth) || opts && !isClientIdSecretAuth(opts)) {
           throw new Error("'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth");
         }
 
-        if (_this36._token && Date.now() < _this36.tokenExpiresOn) {
-          _this36._debug("Using existing access token.");
+        var clientId = (opts == null ? void 0 : opts.clientId) || _this44._auth.clientId;
+        var clientSecret = (opts == null ? void 0 : opts.clientSecret) || _this44._auth.clientSecret;
 
-          return Promise.resolve(_this36._token);
+        var url = _this44.buildUrl((opts == null ? void 0 : opts.url) || _this44._auth.url || DEFAULT_AUTH_URL);
+
+        if (_this44.accessTokenScope === (opts == null ? void 0 : opts.scope) && _this44._token && Date.now() < _this44.tokenExpiresOn) {
+          _this44._debug("Using existing access token.");
+
+          return Promise.resolve(_this44._token);
         }
 
-        _this36._debug("Fetching new access token.");
+        _this44._debug("Fetching new access token.");
+
+        var basic = Buffer.from(clientId + ":" + clientSecret).toString("base64");
+        var body = "grant_type=client_credentials";
 
-        var basic = Buffer.from(_this36._auth.clientId + ":" + _this36._auth.clientSecret).toString("base64");
-        return Promise.resolve(fetch("" + _this36.baseUrl + _this36._auth.url, {
+        if (opts == null ? void 0 : opts.scope) {
+          body = body + "&scope=" + opts.scope;
+
+          _this44._debug("Using scope: " + opts.scope);
+        }
+
+        return Promise.resolve(fetch(url.toString(), {
           method: "POST",
           headers: {
             Authorization: "Basic " + basic,
             "Content-Type": "application/x-www-form-urlencoded"
           },
-          body: "grant_type=client_credentials"
+          body: body
         })).then(function (response) {
-          if (!(response == null ? void 0 : response.ok)) {
-            throw new Error(response == null ? void 0 : response.statusText);
+          function _temp65() {
+            return Promise.resolve(response.json()).then(function (result) {
+              _this44._debug(result);
+
+              _this44.token = result;
+              _this44.accessTokenScope = opts == null ? void 0 : opts.scope;
+              return result;
+            });
           }
 
-          return Promise.resolve(response.json()).then(function (result) {
-            _this36._debug(result);
+          var _temp64 = function () {
+            if (!(response == null ? void 0 : response.ok)) {
+              return Promise.resolve(_this44.handleJsonApiErrors(response)).then(function () {});
+            }
+          }();
 
-            _this36.token = result;
-            return result;
-          });
+          return _temp64 && _temp64.then ? _temp64.then(_temp65) : _temp65(_temp64);
         });
       } catch (e) {
         return Promise.reject(e);
@@ -1895,25 +2400,25 @@
       return this.serializer.deserialize(body, options);
     };
 
-    _proto.formatErrorResponse = function formatErrorResponse(response) {
+    _proto.getErrorsFromResponse = function getErrorsFromResponse(response) {
       try {
-        var _temp28 = function _temp28(_result5) {
-          var _exit9;
+        var _temp70 = function _temp70(_result11) {
+          var _exit14;
 
-          if (_exit10) return _result5;
+          if (_exit15) return _result11;
 
-          function _temp25(_result6) {
-            return _exit9 ? _result6 : response.statusText;
+          function _temp67(_result12) {
+            return _exit14 ? _result12 : response.statusText;
           }
 
-          var _temp24 = function () {
+          var _temp66 = function () {
             if (type === "application/vnd.api+json") {
               return Promise.resolve(response.json()).then(function (_error) {
                 var _error$errors;
 
                 if (_error == null ? void 0 : (_error$errors = _error.errors) == null ? void 0 : _error$errors.length) {
-                  _exit9 = 1;
-                  return _this38.formatJsonApiErrors(_error.errors);
+                  _exit14 = 1;
+                  return _error.errors;
                 }
               });
             }
@@ -1922,25 +2427,23 @@
           // Construct error from response.
           // Check for type to ensure this is a JSON:API formatted error.
           // See https://jsonapi.org/format/#errors.
-          return _temp24 && _temp24.then ? _temp24.then(_temp25) : _temp25(_temp24);
+          return _temp66 && _temp66.then ? _temp66.then(_temp67) : _temp67(_temp66);
         };
 
-        var _exit10;
-
-        var _this38 = this;
+        var _exit15;
 
         var type = response.headers.get("content-type");
 
-        var _temp29 = function () {
+        var _temp71 = function () {
           if (type === "application/json") {
             return Promise.resolve(response.json()).then(function (error) {
-              _exit10 = 1;
+              _exit15 = 1;
               return error.message;
             });
           }
         }();
 
-        return Promise.resolve(_temp29 && _temp29.then ? _temp29.then(_temp28) : _temp28(_temp29));
+        return Promise.resolve(_temp71 && _temp71.then ? _temp71.then(_temp70) : _temp70(_temp71));
       } catch (e) {
         return Promise.reject(e);
       }
@@ -1959,9 +2462,86 @@
 
     _proto._debug = function _debug(message) {
       !!this.debug && this.logger.debug(message);
+    } // Error handling.
+    // If throwErrors is enable, we show errors in the Next.js overlay.
+    // Otherwise we log the errors even if debugging is turned off.
+    // In production, errors are always logged never thrown.
+    ;
+
+    _proto.throwError = function throwError(error) {
+      if (!this.throwJsonApiErrors) {
+        return this.logger.error(error);
+      }
+
+      throw error;
+    };
+
+    _proto.handleJsonApiErrors = function handleJsonApiErrors(response) {
+      try {
+        var _this46 = this;
+
+        return Promise.resolve(function () {
+          if (!(response == null ? void 0 : response.ok)) {
+            return Promise.resolve(_this46.getErrorsFromResponse(response)).then(function (errors) {
+              throw new JsonApiErrors(errors, response.status);
+            });
+          }
+        }());
+      } catch (e) {
+        return Promise.reject(e);
+      }
     };
 
-    _createClass(Experiment_DrupalClient, [{
+    _proto.getAuthFromContextAndOptions = function getAuthFromContextAndOptions(context, options) {
+      var _context$previewData;
+
+      // If not in preview or withAuth is provided, use that.
+      if (!context.preview) {
+        // If we have provided an auth, use that.
+        if (typeof (options == null ? void 0 : options.withAuth) !== "undefined") {
+          return options.withAuth;
+        } // Otherwise we fallback to the global auth.
+
+
+        return this.withAuth;
+      } // If no plugin is provided, return.
+
+
+      var plugin = (_context$previewData = context.previewData) == null ? void 0 : _context$previewData["plugin"];
+
+      if (!plugin) {
+        return null;
+      }
+
+      var withAuth = this._auth;
+
+      if (plugin === "simple_oauth") {
+        var _context$previewData2;
+
+        // If we are using a client id and secret auth, pass the scope.
+        if (isClientIdSecretAuth(withAuth) && ((_context$previewData2 = context.previewData) == null ? void 0 : _context$previewData2["scope"])) {
+          var _context$previewData3;
+
+          withAuth = _extends({}, withAuth, {
+            scope: (_context$previewData3 = context.previewData) == null ? void 0 : _context$previewData3["scope"]
+          });
+        }
+      }
+
+      if (plugin === "jwt") {
+        var _context$previewData4;
+
+        var accessToken = (_context$previewData4 = context.previewData) == null ? void 0 : _context$previewData4["access_token"];
+
+        if (accessToken) {
+          return "Bearer " + accessToken;
+        }
+      }
+
+      return withAuth;
+    };
+
+    _createClass(DrupalClient, [{
       key: "apiPrefix",
       set: function set(apiPrefix) {
         this._apiPrefix = apiPrefix.charAt(0) === "/" ? apiPrefix : "/" + apiPrefix;
@@ -1973,7 +2553,15 @@
       key: "auth",
       set: function set(auth) {
         if (typeof auth === "object") {
-          if (!auth.clientId || !auth.clientSecret) {
+          if (isBasicAuth(auth)) {
+            if (!auth.username || !auth.password) {
+              throw new Error("'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth");
+            }
+          } else if (isAccessTokenAuth(auth)) {
+            if (!auth.access_token || !auth.token_type) {
+              throw new Error("'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth");
+            }
+          } else if (!auth.clientId || !auth.clientSecret) {
             throw new Error("'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth");
           }
 
@@ -1997,11 +2585,12 @@
       }
     }]);
 
-    return Experiment_DrupalClient;
+    return DrupalClient;
   }();
 
+  exports.DrupalClient = DrupalClient;
   exports.DrupalPreview = DrupalPreview;
-  exports.Experiment_DrupalClient = Experiment_DrupalClient;
+  exports.JsonApiErrors = JsonApiErrors;
   exports.PreviewHandler = PreviewHandler;
   exports.buildUrl = buildUrl;
   exports.deserialize = deserialize;
diff --git a/node_modules/next-drupal/dist/index.umd.js.map b/node_modules/next-drupal/dist/index.umd.js.map
index d01cdcd..8869e89 100644
--- a/node_modules/next-drupal/dist/index.umd.js.map
+++ b/node_modules/next-drupal/dist/index.umd.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.umd.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  if (!context.locale && !resource?.default_langcode) {\n    return null\n  }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  Experiment_DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  GetResourcePreviewUrlOptions,\n  JsonApiWithCacheOptions,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nexport class Experiment_DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: Experiment_DrupalClientOptions[\"debug\"]\n\n  frontPage: Experiment_DrupalClientOptions[\"frontPage\"]\n\n  private serializer: Experiment_DrupalClientOptions[\"serializer\"]\n\n  private cache: Experiment_DrupalClientOptions[\"cache\"]\n\n  private logger: Experiment_DrupalClientOptions[\"logger\"]\n\n  private fetcher?: Experiment_DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: Experiment_DrupalClientOptions[\"headers\"]\n\n  private _auth?: Experiment_DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: Experiment_DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: Experiment_DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: Experiment_DrupalClientOptions[\"accessToken\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: Experiment_DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: Experiment_DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: Experiment_DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new Experiment_DrupalClient.\n   *\n   * const client = new Experiment_DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: Experiment_DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: Experiment_DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: Experiment_DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: Experiment_DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      // If a custom auth is provided, use that.\n      if (typeof this._auth === \"function\") {\n        this._debug(`Using custom auth.`)\n\n        init[\"headers\"][\"Authorization\"] = this._auth()\n      } else {\n        // Otherwise use the built-in client_credentials grant.\n        this._debug(`Using default auth (client_credentials).`)\n\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken()\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    const response = await fetch(input, init)\n\n    if (response?.ok) {\n      return response\n    }\n\n    const message = await this.formatErrorResponse(response)\n\n    // Only throw errors in development\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error(message)\n    } else {\n      if (this.debug) {\n        this.logger.error(message)\n      }\n\n      return null\n    }\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n    }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const previewData = context.previewData as { resourceVersion?: string }\n\n    const resource = await this.getResourceByPath<T>(path, {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    })\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          throw new Error(error.message)\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      throw new Error(this.formatJsonApiErrors(data.errors))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: context.preview || options.withAuth,\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      withAuth: this.withAuth,\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    const response = await this.translatePath(path, {\n      withAuth: context.preview || options.withAuth,\n    })\n\n    return response\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      throw new Error(\n        `Failed to fetch JSON:API index at ${url.toString()} - ${error.message}`\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, secret, locale, defaultLocale } =\n      request.query\n\n    if (secret !== this.previewSecret) {\n      return response.status(401).json({\n        message: options?.errorMessages.secret || \"Invalid preview secret.\",\n      })\n    }\n\n    if (!slug) {\n      return response\n        .status(401)\n        .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n    }\n\n    let _options: GetResourcePreviewUrlOptions = {\n      isVersionable: !!resourceVersion,\n    }\n\n    if (locale && defaultLocale) {\n      // Fix for und locale.\n      const _locale = locale === \"und\" ? defaultLocale : locale\n\n      _options = {\n        ..._options,\n        locale: _locale as string,\n        defaultLocale: defaultLocale as string,\n      }\n    }\n\n    const entity = await this.getResourceByPath(slug as string, {\n      withAuth: true,\n      ..._options,\n    })\n\n    if (!entity || !entity?.path) {\n      throw new Error(\n        `The path attribute is missing for entity with slug ${slug}`\n      )\n    }\n\n    const url = entity?.default_langcode\n      ? entity.path.alias\n      : `/${entity.path.langcode}${entity.path.alias}`\n\n    if (!url) {\n      response\n        .status(404)\n        .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n    }\n\n    response.setPreviewData({\n      resourceVersion,\n    })\n\n    // Fix issue with cookie.\n    // See https://github.com/vercel/next.js/discussions/32238.\n    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n    if (this.forceIframeSameSiteCookie) {\n      const previous = response.getHeader(\"Set-Cookie\") as string[]\n      previous.forEach((cookie, index) => {\n        previous[index] = cookie.replace(\"SameSite=Lax\", \"SameSite=None;Secure\")\n      })\n      response.setHeader(`Set-Cookie`, previous)\n    }\n\n    response.writeHead(307, { Location: url })\n\n    return response.end()\n  }\n\n  async getMenu<T extends DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<{\n    id: string\n    results: T\n    meta: JsonApiResponse[\"meta\"]\n    links: JsonApiResponse[\"links\"]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(): Promise<AccessToken> {\n    if (this.accessToken) {\n      return this.accessToken\n    }\n\n    if (typeof this._auth !== \"object\") {\n      throw new Error(\n        \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n      )\n    }\n\n    if (!this._auth.clientId || !this._auth.clientSecret) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    if (this._token && Date.now() < this.tokenExpiresOn) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(\n      `${this._auth.clientId}:${this._auth.clientSecret}`\n    ).toString(\"base64\")\n\n    const response = await fetch(`${this.baseUrl}${this._auth.url}`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    })\n\n    if (!response?.ok) {\n      throw new Error(response?.statusText)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async formatErrorResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return this.formatJsonApiErrors(_error.errors)\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n}\n"],"names":["cache","NodeCache","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","CACHE_KEY","access_token","basic","Buffer","from","toString","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","response","ok","Error","statusText","json","result","set","expires_in","buildHeaders","accessToken","token","UNSTABLE_DRUPAL_ACCESS_TOKEN","getJsonApiIndex","locale","options","url","buildUrl","JSONAPI_PREFIX","getJsonApiPathForResourceType","type","index","links","href","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","path","params","URL","charAt","search","stringify","getPathFromContext","context","prefix","slug","Array","isArray","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","buildMenuTree","tree","length","children","filter","link","map","id","getResourceCollectionFromContext","getResourceCollection","undefined","apiPath","getPathsFromContext","types","Promise","all","locales","resources","buildPathsFromResources","paths","flat","flatMap","resource","alias","replace","split","getResource","uuid","getResourceByPath","isVersionable","indexOf","resourceVersion","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResourceFromContext","test","previewData","default_langcode","getResourcePreviewUrl","entity","langcode","PreviewHandler","request","query","secret","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","setPreviewData","writeHead","Location","DrupalPreview","translatePathFromContext","translatePath","getResourceTypeFromContext","jsonapi","resourceName","getSearchIndexFromContext","getSearchIndex","getView","viewId","displayId","results","meta","useMenu","router","useRouter","React","setData","error","setError","isLoading","setIsLoading","fetchMenuItems","logger","log","console","debug","warn","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","Experiment_DrupalClient","baseUrl","getStaticPathsFromContext","apiPrefix","serializer","frontPage","useDefaultResourceTypeEntry","defaultLogger","withAuth","fetcher","auth","previewSecret","forceIframeSameSiteCookie","_debug","input","init","formatErrorResponse","NODE_ENV","_headers","_auth","getEntryForResourceType","withCache","cacheKey","pathPrefix","preview","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","_locale","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","clientId","clientSecret","_token","Date","now","tokenExpiresOn","_error","title","_apiPrefix","value"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.umd.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/translate-path.ts","../src/get-resource-type.ts","../src/get-search-index.ts","../src/get-view.ts","../src/use-menu.tsx","../src/logger.ts","../src/jsonapi-errors.ts","../src/client.ts"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n  // We only call buildHeaders if accessToken or locale is explicitly set.\n  // This is for rare cases where /jsonapi might be protected.\n  const response = await fetch(url.toString(), {\n    headers:\n      locale || options\n        ? await buildHeaders(options)\n        : {\n            \"Content-Type\": \"application/json\",\n          },\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  // This allows an access_token (preferrably long-lived) to be set directly on the env.\n  // This reduces the number of OAuth call to the Drupal server.\n  // Intentionally marked as unstable for now.\n  if (process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN) {\n    headers[\n      \"Authorization\"\n    ] = `Bearer ${process.env.UNSTABLE_DRUPAL_ACCESS_TOKEN}`\n\n    return headers\n  }\n\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug)\n    ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n    : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu<T extends DrupalMenuLinkContent>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: T[]\n  tree: T[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  if (!links?.length) {\n    return {\n      items: [],\n    }\n  }\n\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { stringify } from \"qs\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  // if (!context.locale && !resource?.default_langcode) {\n  //   return null\n  // }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n  if (options.isVersionable) {\n    params.resourceVersion = resourceVersion\n  }\n\n  const resourceParams = stringify(params)\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, DrupalTranslatedPath } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function translatePath(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<DrupalTranslatedPath> {\n  const url = buildUrl(\"/router/translate-path\", {\n    path,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    return null\n  }\n\n  const json = await response.json()\n\n  return json\n}\n\nexport async function translatePathFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<DrupalTranslatedPath> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const path = getPathFromContext(context, options.prefix)\n\n  const response = await translatePath(path, {\n    accessToken: options.accessToken,\n  })\n\n  return response\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { translatePathFromContext } from \"./translate-path\"\nimport { AccessToken } from \"./types\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  try {\n    const response = await translatePathFromContext(context, options)\n\n    return response.jsonapi.resourceName\n  } catch (error) {\n    return null\n  }\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken, JsonApiResource, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getSearchIndex<T = JsonApiResource[]>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/index/${name}`, options.params)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getSearchIndexFromContext<T = JsonApiResource[]>(\n  name: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  return await getSearchIndex<T>(name, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu<T extends DrupalMenuLinkContent>(\n  name: string\n): {\n  items: T[]\n  tree: T[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: T[]\n    tree: T[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu<T>(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n","import { Logger } from \".\"\n\n// Default logger. Uses console.\nexport const logger: Logger = {\n  log(message) {\n    console.log(`[next-drupal][log]:`, message)\n  },\n  debug(message) {\n    console.debug(`[next-drupal][debug]:`, message)\n  },\n  warn(message) {\n    console.warn(`[next-drupal][debug]:`, message)\n  },\n  error(message) {\n    console.error(`[next-drupal][error]:`, message)\n  },\n}\n","import { JsonApiError } from \"./types\"\n\nexport class JsonApiErrors extends Error {\n  errors: JsonApiError[] | string\n  statusCode: number\n\n  constructor(errors: JsonApiError[], statusCode: number) {\n    super()\n\n    this.errors = errors\n    this.statusCode = statusCode\n    this.message = JsonApiErrors.formatMessage(errors)\n  }\n\n  private static formatMessage(errors) {\n    if (typeof errors === \"string\") {\n      return errors\n    }\n\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n}\n","import type {\n  GetStaticPathsContext,\n  GetStaticPathsResult,\n  GetStaticPropsContext,\n  NextApiRequest,\n  NextApiResponse,\n} from \"next\"\nimport { stringify } from \"qs\"\nimport Jsona from \"jsona\"\n\nimport type {\n  JsonApiResource,\n  Locale,\n  AccessToken,\n  JsonApiResponse,\n  JsonApiWithLocaleOptions,\n  JsonApiParams,\n  DrupalTranslatedPath,\n  DrupalMenuLinkContent,\n  FetchOptions,\n  DrupalClientOptions,\n  BaseUrl,\n  JsonApiWithAuthOptions,\n  PathPrefix,\n  JsonApiResourceWithPath,\n  PathAlias,\n  PreviewOptions,\n  JsonApiWithCacheOptions,\n  JsonApiCreateResourceBody,\n  JsonApiUpdateResourceBody,\n  DrupalClientAuthUsernamePassword,\n  DrupalClientAuthAccessToken,\n  DrupalClientAuthClientIdSecret,\n  JsonApiCreateFileResourceBody,\n  DrupalView,\n  DrupalFile,\n} from \"./types\"\nimport { logger as defaultLogger } from \"./logger\"\nimport { JsonApiErrors } from \"./jsonapi-errors\"\n\nconst DEFAULT_API_PREFIX = \"/jsonapi\"\nconst DEFAULT_FRONT_PAGE = \"/home\"\nconst DEFAULT_WITH_AUTH = false\n\n// From simple_oauth.\nconst DEFAULT_AUTH_URL = \"/oauth/token\"\n\n// See https://jsonapi.org/format/#content-negotiation.\nconst DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/vnd.api+json\",\n  Accept: \"application/vnd.api+json\",\n}\n\nfunction isBasicAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthUsernamePassword {\n  return (\n    (auth as DrupalClientAuthUsernamePassword)?.username !== undefined ||\n    (auth as DrupalClientAuthUsernamePassword)?.password !== undefined\n  )\n}\n\nfunction isAccessTokenAuth(\n  auth: DrupalClientOptions[\"auth\"]\n): auth is DrupalClientAuthAccessToken {\n  return (auth as DrupalClientAuthAccessToken)?.access_token !== undefined\n}\n\nfunction isClientIdSecretAuth(\n  auth: DrupalClient[\"auth\"]\n): auth is DrupalClientAuthClientIdSecret {\n  return (\n    (auth as DrupalClientAuthClientIdSecret)?.clientId !== undefined ||\n    (auth as DrupalClientAuthClientIdSecret)?.clientSecret !== undefined\n  )\n}\n\nexport class DrupalClient {\n  baseUrl: BaseUrl\n\n  debug: DrupalClientOptions[\"debug\"]\n\n  frontPage: DrupalClientOptions[\"frontPage\"]\n\n  private serializer: DrupalClientOptions[\"serializer\"]\n\n  private cache: DrupalClientOptions[\"cache\"]\n\n  private throwJsonApiErrors?: DrupalClientOptions[\"throwJsonApiErrors\"]\n\n  private logger: DrupalClientOptions[\"logger\"]\n\n  private fetcher?: DrupalClientOptions[\"fetcher\"]\n\n  private _headers?: DrupalClientOptions[\"headers\"]\n\n  private _auth?: DrupalClientOptions[\"auth\"]\n\n  private _apiPrefix: DrupalClientOptions[\"apiPrefix\"]\n\n  private useDefaultResourceTypeEntry?: DrupalClientOptions[\"useDefaultResourceTypeEntry\"]\n\n  private _token?: AccessToken\n\n  private accessToken?: DrupalClientOptions[\"accessToken\"]\n\n  private accessTokenScope?: DrupalClientOptions[\"accessTokenScope\"]\n\n  private tokenExpiresOn?: number\n\n  private withAuth?: DrupalClientOptions[\"withAuth\"]\n\n  private previewSecret?: DrupalClientOptions[\"previewSecret\"]\n\n  private forceIframeSameSiteCookie?: DrupalClientOptions[\"forceIframeSameSiteCookie\"]\n\n  /**\n   * Instantiates a new DrupalClient.\n   *\n   * const client = new DrupalClient(baseUrl)\n   *\n   * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.\n   * @param {options} options Options for the client. See Experiment_DrupalClientOptions.\n   */\n  constructor(baseUrl: BaseUrl, options: DrupalClientOptions = {}) {\n    if (!baseUrl || typeof baseUrl !== \"string\") {\n      throw new Error(\"The 'baseUrl' param is required.\")\n    }\n\n    const {\n      apiPrefix = DEFAULT_API_PREFIX,\n      serializer = new Jsona(),\n      cache = null,\n      debug = false,\n      frontPage = DEFAULT_FRONT_PAGE,\n      useDefaultResourceTypeEntry = false,\n      headers = DEFAULT_HEADERS,\n      logger = defaultLogger,\n      withAuth = DEFAULT_WITH_AUTH,\n      fetcher,\n      auth,\n      previewSecret,\n      accessToken,\n      forceIframeSameSiteCookie = false,\n      throwJsonApiErrors = true,\n    } = options\n\n    this.baseUrl = baseUrl\n    this.apiPrefix = apiPrefix\n    this.serializer = serializer\n    this.frontPage = frontPage\n    this.debug = debug\n    this.useDefaultResourceTypeEntry = useDefaultResourceTypeEntry\n    this.fetcher = fetcher\n    this.auth = auth\n    this.headers = headers\n    this.logger = logger\n    this.withAuth = withAuth\n    this.previewSecret = previewSecret\n    this.cache = cache\n    this.accessToken = accessToken\n    this.forceIframeSameSiteCookie = forceIframeSameSiteCookie\n    this.throwJsonApiErrors = throwJsonApiErrors\n\n    // Do not throw errors in production.\n    if (process.env.NODE_ENV === \"production\") {\n      this.throwJsonApiErrors = false\n    }\n\n    this._debug(\"Debug mode is on.\")\n  }\n\n  set apiPrefix(apiPrefix: DrupalClientOptions[\"apiPrefix\"]) {\n    this._apiPrefix = apiPrefix.charAt(0) === \"/\" ? apiPrefix : `/${apiPrefix}`\n  }\n\n  get apiPrefix() {\n    return this._apiPrefix\n  }\n\n  set auth(auth: DrupalClientOptions[\"auth\"]) {\n    if (typeof auth === \"object\") {\n      if (isBasicAuth(auth)) {\n        if (!auth.username || !auth.password) {\n          throw new Error(\n            `'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (isAccessTokenAuth(auth)) {\n        if (!auth.access_token || !auth.token_type) {\n          throw new Error(\n            `'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`\n          )\n        }\n      } else if (!auth.clientId || !auth.clientSecret) {\n        throw new Error(\n          `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`\n        )\n      }\n\n      auth = {\n        url: DEFAULT_AUTH_URL,\n        ...auth,\n      }\n    }\n\n    this._auth = auth\n  }\n\n  set headers(value: DrupalClientOptions[\"headers\"]) {\n    this._headers = value\n  }\n\n  private set token(token: AccessToken) {\n    this._token = token\n    this.tokenExpiresOn = Date.now() + token.expires_in * 1000\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {\n    init = {\n      ...init,\n      credentials: \"include\",\n      headers: {\n        ...this._headers,\n        ...init?.headers,\n      },\n    }\n\n    // Using the auth set on the client.\n    // TODO: Abstract this to a re-usable.\n    if (init?.withAuth) {\n      this._debug(`Using authenticated request.`)\n\n      if (init.withAuth === true) {\n        if (typeof this._auth === \"undefined\") {\n          throw new Error(\n            \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n          )\n        }\n\n        // By default, if withAuth is set to true, we use the auth configured\n        // in the client constructor.\n        if (typeof this._auth === \"function\") {\n          this._debug(`Using custom auth callback.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth()\n        } else if (typeof this._auth === \"string\") {\n          this._debug(`Using custom authorization header.`)\n\n          init[\"headers\"][\"Authorization\"] = this._auth\n        } else if (typeof this._auth === \"object\") {\n          this._debug(`Using custom auth credentials.`)\n\n          if (isBasicAuth(this._auth)) {\n            const basic = Buffer.from(\n              `${this._auth.username}:${this._auth.password}`\n            ).toString(\"base64\")\n\n            init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n          } else if (isClientIdSecretAuth(this._auth)) {\n            // Use the built-in client_credentials grant.\n            this._debug(`Using default auth (client_credentials).`)\n\n            // Fetch an access token and add it to the request.\n            // Access token can be fetched from cache or using a custom auth method.\n            const token = await this.getAccessToken(this._auth)\n            if (token) {\n              init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n            }\n          } else if (isAccessTokenAuth(this._auth)) {\n            init[\"headers\"][\n              \"Authorization\"\n            ] = `${this._auth.token_type} ${this._auth.access_token}`\n          }\n        }\n      } else if (typeof init.withAuth === \"string\") {\n        this._debug(`Using custom authorization header.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth\n      } else if (typeof init.withAuth === \"function\") {\n        this._debug(`Using custom authorization callback.`)\n\n        init[\"headers\"][\"Authorization\"] = init.withAuth()\n      } else if (isBasicAuth(init.withAuth)) {\n        this._debug(`Using basic authorization header`)\n\n        const basic = Buffer.from(\n          `${init.withAuth.username}:${init.withAuth.password}`\n        ).toString(\"base64\")\n\n        init[\"headers\"][\"Authorization\"] = `Basic ${basic}`\n      } else if (isClientIdSecretAuth(init.withAuth)) {\n        // Fetch an access token and add it to the request.\n        // Access token can be fetched from cache or using a custom auth method.\n        const token = await this.getAccessToken(init.withAuth)\n        if (token) {\n          init[\"headers\"][\"Authorization\"] = `Bearer ${token.access_token}`\n        }\n      } else if (isAccessTokenAuth(init.withAuth)) {\n        init[\"headers\"][\n          \"Authorization\"\n        ] = `${init.withAuth.token_type} ${init.withAuth.access_token}`\n      }\n    }\n\n    if (this.fetcher) {\n      this._debug(`Using custom fetcher.`)\n\n      return await this.fetcher(input, init)\n    }\n\n    this._debug(`Using default fetch (polyfilled by Next.js).`)\n\n    return await fetch(input, init)\n  }\n\n  async createResource<T extends JsonApiResource>(\n    type: string,\n    body: JsonApiCreateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, options?.params)\n\n    this._debug(`Creating resource of type ${type}.`)\n    this._debug(url.toString())\n\n    // Add type to body.\n    body.data.type = type\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async createFileResource<T = DrupalFile>(\n    type: string,\n    body: JsonApiCreateFileResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const hostType = body?.data?.attributes?.type\n\n    const apiPath = await this.getEntryForResourceType(\n      hostType,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(\n      `${apiPath}/${body.data.attributes.field}`,\n      options?.params\n    )\n\n    this._debug(`Creating file resource for media of type ${type}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Accept: \"application/vnd.api+json\",\n        \"Content-Disposition\": `file; filename=\"${body.data.attributes.filename}\"`,\n      },\n      body: body.data.attributes.file,\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async updateResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    body: JsonApiUpdateResourceBody,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Updating resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    // Update body.\n    body.data.type = type\n    body.data.id = uuid\n\n    const response = await this.fetch(url.toString(), {\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async deleteResource(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<boolean> {\n    options = {\n      withAuth: true,\n      params: {},\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Deleting resource of type ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      method: \"DELETE\",\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    return response.status === 204\n  }\n\n  async getResource<T extends JsonApiResource>(\n    type: string,\n    uuid: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      withAuth: this.withAuth,\n      withCache: false,\n      params: {},\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached resource ${type} with id ${uuid}`)\n\n        const json = JSON.parse(cached)\n\n        return options.deserialize ? this.deserialize(json) : json\n      }\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)\n\n    this._debug(`Fetching resource ${type} with id ${uuid}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(json))\n    }\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceFromContext<T extends JsonApiResource>(\n    input: string | DrupalTranslatedPath,\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    const type = typeof input === \"string\" ? input : input.jsonapi.resourceName\n\n    const previewData = context.previewData as {\n      resourceVersion?: string\n    }\n\n    options = {\n      // Add support for revisions for node by default.\n      // TODO: Make this required before stable?\n      isVersionable: /^node--/.test(type),\n      deserialize: true,\n      pathPrefix: \"/\",\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n      params: {},\n      ...options,\n    }\n\n    const _options = {\n      deserialize: options.deserialize,\n      isVersionable: options.isVersionable,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: options?.withAuth,\n      params: {\n        resourceVersion: previewData?.resourceVersion,\n        ...options?.params,\n      },\n    }\n\n    if (typeof input !== \"string\") {\n      // Fix for subrequests and translation.\n      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n      // @shadcn, note to self:\n      // Given an entity at /example with no translation.\n      // When we try to translate /es/example, decoupled router will properly\n      // translate to the untranslated version and set the locale to es.\n      // However a subrequests to /es/subrequests for decoupled router will fail.\n      if (context.locale && input.entity.langcode !== context.locale) {\n        context.locale = input.entity.langcode\n      }\n\n      // Given we already have the path info, we can skip subrequests and just make a simple\n      // request to the Drupal site to get the entity.\n      if (input.entity?.uuid) {\n        return await this.getResource<T>(type, input.entity.uuid, _options)\n      }\n    }\n\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options?.pathPrefix,\n    })\n\n    const resource = await this.getResourceByPath<T>(path, _options)\n\n    // If no locale is passed, skip entity if not default_langcode.\n    // This happens because decoupled_router will still translate the path\n    // to a resource.\n    // TODO: Figure out if we want this behavior.\n    // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n    // localized pages.\n    // if (!context.locale && !resource?.default_langcode) {\n    //   return null\n    // }\n\n    return resource\n  }\n\n  async getResourceByPath<T extends JsonApiResource>(\n    path: string,\n    options?: {\n      isVersionable?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      isVersionable: false,\n      withAuth: this.withAuth,\n      params: {},\n      ...options,\n    }\n\n    if (!path) {\n      return null\n    }\n\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      path.indexOf(options.locale) !== 1\n    ) {\n      path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n      path = this.getPathFromContext({\n        params: { slug: [path] },\n        locale: options.locale,\n        defaultLocale: options.defaultLocale,\n      })\n    }\n\n    // If a resourceVersion is provided, assume entity type is versionable.\n    if (options.params.resourceVersion) {\n      options.isVersionable = true\n    }\n\n    const { resourceVersion = \"rel:latest-version\", ...params } = options.params\n\n    if (options.isVersionable) {\n      params.resourceVersion = resourceVersion\n    }\n\n    const resourceParams = stringify(params)\n\n    // We are intentionally not using translatePath here.\n    // We want a single request using subrequests.\n    const payload = [\n      {\n        requestId: \"router\",\n        action: \"view\",\n        uri: `/router/translate-path?path=${path}&_format=json`,\n        headers: { Accept: \"application/vnd.api+json\" },\n      },\n      {\n        requestId: \"resolvedResource\",\n        action: \"view\",\n        uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n        waitFor: [\"router\"],\n      },\n    ]\n\n    // Localized subrequests.\n    // I was hoping we would not need this but it seems like subrequests is not properly\n    // setting the jsonapi locale from a translated path.\n    // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.\n    let subrequestsPath = \"/subrequests\"\n    if (\n      options.locale &&\n      options.defaultLocale &&\n      options.locale !== options.defaultLocale\n    ) {\n      subrequestsPath = `/${options.locale}/subrequests`\n    }\n\n    const url = this.buildUrl(subrequestsPath, {\n      _format: \"json\",\n    })\n\n    const response = await this.fetch(url.toString(), {\n      method: \"POST\",\n      credentials: \"include\",\n      redirect: \"follow\",\n      body: JSON.stringify(payload),\n      withAuth: options.withAuth,\n    })\n\n    const json = await response.json()\n\n    if (!json?.[\"resolvedResource#uri{0}\"]?.body) {\n      if (json?.router?.body) {\n        const error = JSON.parse(json.router.body)\n        if (error?.message) {\n          this.throwError(new Error(error.message))\n        }\n      }\n\n      return null\n    }\n\n    const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n    if (data.errors) {\n      this.throwError(new Error(this.formatJsonApiErrors(data.errors)))\n    }\n\n    return options.deserialize ? this.deserialize(data) : data\n  }\n\n  async getResourceCollection<T = JsonApiResource[]>(\n    type: string,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const apiPath = await this.getEntryForResourceType(\n      type,\n      options?.locale !== options?.defaultLocale ? options.locale : undefined\n    )\n\n    const url = this.buildUrl(apiPath, {\n      ...options?.params,\n    })\n\n    this._debug(`Fetching resource collection of type ${type}`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getResourceCollectionFromContext<T = JsonApiResource[]>(\n    type: string,\n    context: GetStaticPropsContext,\n    options?: {\n      deserialize?: boolean\n    } & JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      deserialize: true,\n      ...options,\n    }\n\n    return await this.getResourceCollection<T>(type, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathsFromContext = this.getStaticPathsFromContext\n\n  async getStaticPathsFromContext(\n    types: string | string[],\n    context: GetStaticPathsContext,\n    options?: {\n      params?: JsonApiParams\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<GetStaticPathsResult<{ slug: string[] }>[\"paths\"]> {\n    options = {\n      withAuth: this.withAuth,\n      pathPrefix: \"/\",\n      params: {},\n      ...options,\n    }\n\n    if (typeof types === \"string\") {\n      types = [types]\n    }\n\n    const paths = await Promise.all(\n      types.map(async (type) => {\n        // Use sparse fieldset to expand max size.\n        // Note we don't need status filter here since this runs non-authenticated (by default).\n        const params = {\n          [`fields[${type}]`]: \"path\",\n          ...options?.params,\n        }\n\n        // Handle localized path aliases\n        if (!context.locales?.length) {\n          const resources = await this.getResourceCollection<\n            JsonApiResourceWithPath[]\n          >(type, {\n            params,\n            withAuth: options.withAuth,\n          })\n\n          return this.buildStaticPathsFromResources(resources, {\n            pathPrefix: options.pathPrefix,\n          })\n        }\n\n        const paths = await Promise.all(\n          context.locales.map(async (locale) => {\n            const resources = await this.getResourceCollection<\n              JsonApiResourceWithPath[]\n            >(type, {\n              deserialize: true,\n              locale,\n              defaultLocale: context.defaultLocale,\n              params,\n              withAuth: options.withAuth,\n            })\n\n            return this.buildStaticPathsFromResources(resources, {\n              locale,\n              pathPrefix: options.pathPrefix,\n            })\n          })\n        )\n\n        return paths.flat()\n      })\n    )\n\n    return paths.flat()\n  }\n\n  buildStaticPathsFromResources(\n    resources: {\n      path: PathAlias\n    }[],\n    options?: {\n      pathPrefix?: PathPrefix\n      locale?: Locale\n    }\n  ) {\n    const paths = resources\n      ?.flatMap((resource) => {\n        return resource?.path?.alias === this.frontPage\n          ? \"/\"\n          : resource?.path?.alias\n      })\n      .filter(Boolean)\n\n    return paths?.length\n      ? this.buildStaticPathsParamsFromPaths(paths, options)\n      : []\n  }\n\n  buildStaticPathsParamsFromPaths(\n    paths: string[],\n    options?: { pathPrefix?: PathPrefix; locale?: Locale }\n  ) {\n    return paths.flatMap((_path) => {\n      _path = _path.replace(/^\\/|\\/$/g, \"\")\n\n      // Remove pathPrefix.\n      if (options?.pathPrefix && options.pathPrefix !== \"/\") {\n        // Remove leading slash from pathPrefix.\n        const pathPrefix = options.pathPrefix.replace(/^\\//, \"\")\n\n        _path = _path.replace(`${pathPrefix}/`, \"\")\n      }\n\n      const path = {\n        params: {\n          slug: _path.split(\"/\"),\n        },\n      }\n\n      if (options?.locale) {\n        path[\"locale\"] = options.locale\n      }\n\n      return path\n    })\n  }\n\n  async translatePath(\n    path: string,\n    options?: JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      withAuth: this.withAuth,\n      ...options,\n    }\n\n    const url = this.buildUrl(\"/router/translate-path\", {\n      path,\n    })\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      // Do not throw errors here.\n      // Otherwise next.js will catch error and throw a 500.\n      // We want a 404.\n      return null\n    }\n\n    const json = await response.json()\n\n    return json\n  }\n\n  async translatePathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    } & JsonApiWithAuthOptions\n  ): Promise<DrupalTranslatedPath> {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n    const path = this.getPathFromContext(context, {\n      pathPrefix: options.pathPrefix,\n    })\n\n    return await this.translatePath(path, {\n      withAuth: this.getAuthFromContextAndOptions(context, options),\n    })\n  }\n\n  getPathFromContext(\n    context: GetStaticPropsContext,\n    options?: {\n      pathPrefix?: PathPrefix\n    }\n  ) {\n    options = {\n      pathPrefix: \"/\",\n      ...options,\n    }\n\n    let slug = context.params?.slug\n\n    let pathPrefix =\n      options.pathPrefix?.charAt(0) === \"/\"\n        ? options.pathPrefix\n        : `/${options.pathPrefix}`\n\n    // Handle locale.\n    if (context.locale && context.locale !== context.defaultLocale) {\n      pathPrefix = `/${context.locale}${pathPrefix}`\n    }\n\n    slug = Array.isArray(slug)\n      ? slug.map((s) => encodeURIComponent(s)).join(\"/\")\n      : slug\n\n    // Handle front page.\n    if (!slug) {\n      slug = this.frontPage\n      pathPrefix = pathPrefix.replace(/\\/$/, \"\")\n    }\n\n    slug =\n      pathPrefix.slice(-1) !== \"/\" && slug.charAt(0) !== \"/\" ? `/${slug}` : slug\n\n    return `${pathPrefix}${slug}`\n  }\n\n  async getIndex(locale?: Locale): Promise<JsonApiResponse> {\n    const url = this.buildUrl(\n      locale ? `/${locale}${this.apiPrefix}` : this.apiPrefix\n    )\n\n    try {\n      const response = await this.fetch(url.toString(), {\n        // As per https://www.drupal.org/node/2984034 /jsonapi is public.\n        withAuth: false,\n      })\n\n      return await response.json()\n    } catch (error) {\n      this.throwError(\n        new Error(\n          `Failed to fetch JSON:API index at ${url.toString()} - ${\n            error.message\n          }`\n        )\n      )\n    }\n  }\n\n  async getEntryForResourceType(\n    type: string,\n    locale?: Locale\n  ): Promise<string> {\n    if (this.useDefaultResourceTypeEntry) {\n      const [id, bundle] = type.split(\"--\")\n      return (\n        `${this.baseUrl}${this.apiPrefix}/` +\n        (locale ? `${locale}/${id}/${bundle}` : `${id}/${bundle}`)\n      )\n    }\n\n    const index = await this.getIndex(locale)\n\n    const link = index.links?.[type] as { href: string }\n\n    if (!link) {\n      throw new Error(`Resource of type '${type}' not found.`)\n    }\n\n    const { href } = link\n\n    // Fix for missing locale in JSON:API index.\n    // This fix ensures the locale is included in the resouce link.\n    if (locale) {\n      const pattern = `^\\\\/${locale}\\\\/`\n      const path = href.replace(this.baseUrl, \"\")\n\n      if (!new RegExp(pattern, \"i\").test(path)) {\n        return `${this.baseUrl}/${locale}${path}`\n      }\n    }\n\n    return href\n  }\n\n  async preview(\n    request?: NextApiRequest,\n    response?: NextApiResponse,\n    options?: PreviewOptions\n  ) {\n    const { slug, resourceVersion, plugin } = request.query\n\n    try {\n      // Always clear preview data to handle different scopes.\n      response.clearPreviewData()\n\n      // Validate the preview url.\n      const validateUrl = this.buildUrl(\"/next/preview-url\")\n      const result = await this.fetch(validateUrl.toString(), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(request.query),\n      })\n\n      if (!result.ok) {\n        response.statusCode = result.status\n\n        return response.json(await result.json())\n      }\n\n      const validationPayload = await result.json()\n\n      response.setPreviewData({\n        resourceVersion,\n        plugin,\n        ...validationPayload,\n      })\n\n      // Fix issue with cookie.\n      // See https://github.com/vercel/next.js/discussions/32238.\n      // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.\n      if (this.forceIframeSameSiteCookie) {\n        const previous = response.getHeader(\"Set-Cookie\") as string[]\n        previous.forEach((cookie, index) => {\n          previous[index] = cookie.replace(\n            \"SameSite=Lax\",\n            \"SameSite=None;Secure\"\n          )\n        })\n        response.setHeader(`Set-Cookie`, previous)\n      }\n\n      // We can safely redirect to the slug since this has been validated on the server.\n      response.writeHead(307, { Location: slug })\n\n      return response.end()\n    } catch (error) {\n      return response.status(422).end()\n    }\n  }\n\n  async getMenu<T = DrupalMenuLinkContent>(\n    name: string,\n    options?: JsonApiWithLocaleOptions &\n      JsonApiWithAuthOptions &\n      JsonApiWithCacheOptions\n  ): Promise<{\n    items: T[]\n    tree: T[]\n  }> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      withCache: false,\n      ...options,\n    }\n\n    if (options.withCache) {\n      const cached = (await this.cache.get(options.cacheKey)) as string\n\n      if (cached) {\n        this._debug(`Returning cached menu items for ${name}`)\n        return JSON.parse(cached)\n      }\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/menu_items/${name}`,\n      options.params\n    )\n\n    this._debug(`Fetching menu items for ${name}.`)\n    this._debug(url.toString())\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const items = options.deserialize ? this.deserialize(data) : data\n\n    const { items: tree } = this.buildMenuTree(items)\n\n    const menu = {\n      items,\n      tree,\n    }\n\n    if (options.withCache) {\n      await this.cache.set(options.cacheKey, JSON.stringify(menu))\n    }\n\n    return menu\n  }\n\n  buildMenuTree(\n    links: DrupalMenuLinkContent[],\n    parent: DrupalMenuLinkContent[\"id\"] = \"\"\n  ) {\n    if (!links?.length) {\n      return {\n        items: [],\n      }\n    }\n\n    const children = links.filter((link) => link?.parent === parent)\n\n    return children.length\n      ? {\n          items: children.map((link) => ({\n            ...link,\n            ...this.buildMenuTree(links, link.id),\n          })),\n        }\n      : {}\n  }\n\n  async getView<T = JsonApiResource>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<DrupalView<T>> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      params: {},\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const [viewId, displayId] = name.split(\"--\")\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/views/${viewId}/${displayId}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const data = await response.json()\n\n    const results = options.deserialize ? this.deserialize(data) : data\n\n    return {\n      id: name,\n      results,\n      meta: data.meta,\n      links: data.links,\n    }\n  }\n\n  async getSearchIndex<T = JsonApiResource[]>(\n    name: string,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    options = {\n      withAuth: this.withAuth,\n      deserialize: true,\n      ...options,\n    }\n\n    const localePrefix =\n      options?.locale && options.locale !== options.defaultLocale\n        ? `/${options.locale}`\n        : \"\"\n\n    const url = this.buildUrl(\n      `${localePrefix}${this.apiPrefix}/index/${name}`,\n      options.params\n    )\n\n    const response = await this.fetch(url.toString(), {\n      withAuth: options.withAuth,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const json = await response.json()\n\n    return options.deserialize ? this.deserialize(json) : json\n  }\n\n  async getSearchIndexFromContext<T = JsonApiResource[]>(\n    name: string,\n    context: GetStaticPropsContext,\n    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions\n  ): Promise<T> {\n    return await this.getSearchIndex<T>(name, {\n      ...options,\n      locale: context.locale,\n      defaultLocale: context.defaultLocale,\n    })\n  }\n\n  buildUrl(\n    path: string,\n    params?: string | Record<string, string> | URLSearchParams | JsonApiParams\n  ): URL {\n    const url = new URL(\n      path.charAt(0) === \"/\" ? `${this.baseUrl}${path}` : path\n    )\n\n    if (typeof params === \"object\" && \"getQueryObject\" in params) {\n      params = params.getQueryObject()\n    }\n\n    if (params) {\n      // Used instead URLSearchParams for nested params.\n      url.search = stringify(params)\n    }\n\n    return url\n  }\n\n  async getAccessToken(\n    opts?: DrupalClientAuthClientIdSecret\n  ): Promise<AccessToken> {\n    if (this.accessToken && this.accessTokenScope === opts?.scope) {\n      return this.accessToken\n    }\n\n    if (!opts?.clientId || !opts?.clientSecret) {\n      if (typeof this._auth === \"undefined\") {\n        throw new Error(\n          \"auth is not configured. See https://next-drupal.org/docs/client/auth\"\n        )\n      }\n    }\n\n    if (\n      !isClientIdSecretAuth(this._auth) ||\n      (opts && !isClientIdSecretAuth(opts))\n    ) {\n      throw new Error(\n        `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`\n      )\n    }\n\n    const clientId = opts?.clientId || this._auth.clientId\n    const clientSecret = opts?.clientSecret || this._auth.clientSecret\n    const url = this.buildUrl(opts?.url || this._auth.url || DEFAULT_AUTH_URL)\n\n    if (\n      this.accessTokenScope === opts?.scope &&\n      this._token &&\n      Date.now() < this.tokenExpiresOn\n    ) {\n      this._debug(`Using existing access token.`)\n      return this._token\n    }\n\n    this._debug(`Fetching new access token.`)\n\n    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString(\"base64\")\n\n    let body = `grant_type=client_credentials`\n\n    if (opts?.scope) {\n      body = `${body}&scope=${opts.scope}`\n\n      this._debug(`Using scope: ${opts.scope}`)\n    }\n\n    const response = await fetch(url.toString(), {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body,\n    })\n\n    if (!response?.ok) {\n      await this.handleJsonApiErrors(response)\n    }\n\n    const result: AccessToken = await response.json()\n\n    this._debug(result)\n\n    this.token = result\n\n    this.accessTokenScope = opts?.scope\n\n    return result\n  }\n\n  deserialize(body, options?) {\n    if (!body) return null\n\n    return this.serializer.deserialize(body, options)\n  }\n\n  private async getErrorsFromResponse(response: Response) {\n    const type = response.headers.get(\"content-type\")\n\n    if (type === \"application/json\") {\n      const error = await response.json()\n      return error.message\n    }\n\n    // Construct error from response.\n    // Check for type to ensure this is a JSON:API formatted error.\n    // See https://jsonapi.org/format/#errors.\n    if (type === \"application/vnd.api+json\") {\n      const _error: JsonApiResponse = await response.json()\n\n      if (_error?.errors?.length) {\n        return _error.errors\n      }\n    }\n\n    return response.statusText\n  }\n\n  private formatJsonApiErrors(errors) {\n    const [error] = errors\n\n    let message = `${error.status} ${error.title}`\n\n    if (error.detail) {\n      message += `\\n${error.detail}`\n    }\n\n    return message\n  }\n\n  private _debug(message) {\n    !!this.debug && this.logger.debug(message)\n  }\n\n  // Error handling.\n  // If throwErrors is enable, we show errors in the Next.js overlay.\n  // Otherwise we log the errors even if debugging is turned off.\n  // In production, errors are always logged never thrown.\n  private throwError(error: Error) {\n    if (!this.throwJsonApiErrors) {\n      return this.logger.error(error)\n    }\n\n    throw error\n  }\n\n  private async handleJsonApiErrors(response: Response) {\n    if (!response?.ok) {\n      const errors = await this.getErrorsFromResponse(response)\n      throw new JsonApiErrors(errors, response.status)\n    }\n  }\n\n  private getAuthFromContextAndOptions(\n    context: GetStaticPropsContext,\n    options: JsonApiWithAuthOptions\n  ) {\n    // If not in preview or withAuth is provided, use that.\n    if (!context.preview) {\n      // If we have provided an auth, use that.\n      if (typeof options?.withAuth !== \"undefined\") {\n        return options.withAuth\n      }\n\n      // Otherwise we fallback to the global auth.\n      return this.withAuth\n    }\n\n    // If no plugin is provided, return.\n    const plugin = context.previewData?.[\"plugin\"]\n    if (!plugin) {\n      return null\n    }\n\n    let withAuth = this._auth\n\n    if (plugin === \"simple_oauth\") {\n      // If we are using a client id and secret auth, pass the scope.\n      if (isClientIdSecretAuth(withAuth) && context.previewData?.[\"scope\"]) {\n        withAuth = {\n          ...withAuth,\n          scope: context.previewData?.[\"scope\"],\n        }\n      }\n    }\n\n    if (plugin === \"jwt\") {\n      const accessToken = context.previewData?.[\"access_token\"]\n\n      if (accessToken) {\n        return `Bearer ${accessToken}`\n      }\n    }\n\n    return withAuth\n  }\n}\n"],"names":["cache","NodeCache","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","CACHE_KEY","access_token","basic","Buffer","from","toString","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","response","ok","Error","statusText","json","result","set","expires_in","buildHeaders","accessToken","token","UNSTABLE_DRUPAL_ACCESS_TOKEN","getJsonApiIndex","locale","options","url","buildUrl","JSONAPI_PREFIX","getJsonApiPathForResourceType","type","index","links","href","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","path","params","URL","charAt","search","stringify","getPathFromContext","context","prefix","slug","Array","isArray","map","s","encodeURIComponent","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","buildMenuTree","tree","length","children","filter","link","id","getResourceCollectionFromContext","getResourceCollection","undefined","apiPath","getPathsFromContext","types","Promise","all","locales","resources","buildPathsFromResources","paths","flat","flatMap","resource","alias","replace","split","getResource","uuid","getResourceByPath","isVersionable","indexOf","resourceVersion","resourceParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResourceFromContext","test","previewData","getResourcePreviewUrl","entity","default_langcode","langcode","PreviewHandler","request","query","secret","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","setPreviewData","writeHead","Location","DrupalPreview","translatePathFromContext","translatePath","getResourceTypeFromContext","jsonapi","resourceName","getSearchIndexFromContext","getSearchIndex","getView","viewId","displayId","results","meta","useMenu","router","useRouter","React","setData","error","setError","isLoading","setIsLoading","fetchMenuItems","logger","log","console","debug","warn","JsonApiErrors","statusCode","formatMessage","title","recover","DEFAULT_API_PREFIX","DEFAULT_FRONT_PAGE","DEFAULT_WITH_AUTH","DEFAULT_AUTH_URL","DEFAULT_HEADERS","isBasicAuth","auth","username","password","isAccessTokenAuth","isClientIdSecretAuth","clientId","clientSecret","DrupalClient","baseUrl","getStaticPathsFromContext","apiPrefix","serializer","frontPage","useDefaultResourceTypeEntry","defaultLogger","withAuth","fetcher","previewSecret","forceIframeSameSiteCookie","throwJsonApiErrors","NODE_ENV","_debug","input","init","_headers","_auth","token_type","createResource","getEntryForResourceType","handleJsonApiErrors","createFileResource","hostType","attributes","field","filename","file","updateResource","deleteResource","withCache","cacheKey","pathPrefix","getAuthFromContextAndOptions","throwError","formatJsonApiErrors","buildStaticPathsFromResources","Boolean","buildStaticPathsParamsFromPaths","_path","slice","getIndex","bundle","pattern","RegExp","preview","plugin","clearPreviewData","validateUrl","validationPayload","previous","getHeader","forEach","cookie","setHeader","menu","getQueryObject","opts","accessTokenScope","scope","_token","Date","now","tokenExpiresOn","getErrorsFromResponse","_error","_apiPrefix","value"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/next-drupal/dist/jsonapi-errors.d.ts b/node_modules/next-drupal/dist/jsonapi-errors.d.ts
new file mode 100644
index 0000000..2ba1baf
--- /dev/null
+++ b/node_modules/next-drupal/dist/jsonapi-errors.d.ts
@@ -0,0 +1,7 @@
+import { JsonApiError } from "./types";
+export declare class JsonApiErrors extends Error {
+    errors: JsonApiError[] | string;
+    statusCode: number;
+    constructor(errors: JsonApiError[], statusCode: number);
+    private static formatMessage;
+}
diff --git a/node_modules/next-drupal/dist/types.d.ts b/node_modules/next-drupal/dist/types.d.ts
index 96747b6..37b9bc8 100644
--- a/node_modules/next-drupal/dist/types.d.ts
+++ b/node_modules/next-drupal/dist/types.d.ts
@@ -1,4 +1,5 @@
-export declare type Experiment_DrupalClientOptions = {
+/// <reference types="node" />
+export declare type DrupalClientOptions = {
     /**
      * Set the JSON:API prefix.
      *
@@ -62,6 +63,15 @@ export declare type Experiment_DrupalClientOptions = {
      * [Documentation](https://next-drupal.org/docs/client/configuration#cache)
      */
     cache?: DataCache;
+    /**
+     * If set to true, JSON:API errors are thrown in non-production environments. The errors are shown in the Next.js overlay.
+     *
+     * **Default value**: `true`
+     * **Required**: *No*
+     *
+     * [Documentation](https://next-drupal.org/docs/client/configuration#throwjsonapierrors)
+     */
+    throwJsonApiErrors?: boolean;
     /**
      * Override the default logger. You can use this to send logs to a third-party service.
      *
@@ -76,11 +86,7 @@ export declare type Experiment_DrupalClientOptions = {
      *
      * [Documentation](https://next-drupal.org/docs/client/configuration#auth)
      */
-    auth?: {
-        clientId: string;
-        clientSecret: string;
-        url?: string;
-    } | (() => string);
+    auth?: DrupalClientAuth;
     /**
      * Set whether the client should use authenticated requests by default.
      *
@@ -117,6 +123,10 @@ export declare type Experiment_DrupalClientOptions = {
      * [Documentation](https://next-drupal.org/docs/client/configuration#accesstoken)
      */
     accessToken?: AccessToken;
+    /**
+     * The scope used for the current access token.
+     */
+    accessTokenScope?: string;
     /**
      * If set to true, the preview cookie will be set with SameSite=None,Secure.
      *
@@ -127,6 +137,18 @@ export declare type Experiment_DrupalClientOptions = {
      */
     forceIframeSameSiteCookie?: boolean;
 };
+export declare type DrupalClientAuth = DrupalClientAuthClientIdSecret | DrupalClientAuthUsernamePassword | DrupalClientAuthAccessToken | (() => string) | string;
+export interface DrupalClientAuthUsernamePassword {
+    username: string;
+    password: string;
+}
+export interface DrupalClientAuthClientIdSecret {
+    clientId: string;
+    clientSecret: string;
+    url?: string;
+    scope?: string;
+}
+export declare type DrupalClientAuthAccessToken = AccessToken;
 export interface Logger {
     log(message: any): void;
     debug(message: any): void;
@@ -157,7 +179,7 @@ export declare type JsonApiWithLocaleOptions = JsonApiOptions & ({
     defaultLocale?: never;
 });
 export declare type JsonApiWithAuthOptions = {
-    withAuth?: boolean;
+    withAuth?: boolean | DrupalClientAuth;
 };
 export declare type JsonApiWithCacheOptions = {
     withCache?: boolean;
@@ -189,6 +211,38 @@ export interface JsonApiResponse extends Record<string, any> {
     links?: JsonApiLinks;
     included?: Record<string, any>[];
 }
+export interface JsonApiResourceBodyRelationship {
+    data: {
+        type: string;
+        id: string;
+    };
+}
+export interface JsonApiCreateResourceBody {
+    data: {
+        type?: string;
+        attributes?: Record<string, any>;
+        relationships?: Record<string, JsonApiResourceBodyRelationship>;
+    };
+}
+export interface JsonApiCreateFileResourceBody {
+    data: {
+        type?: string;
+        attributes: {
+            type: string;
+            field: string;
+            filename: string;
+            file: Buffer;
+        };
+    };
+}
+export interface JsonApiUpdateResourceBody {
+    data: {
+        type?: string;
+        id?: string;
+        attributes?: Record<string, any>;
+        relationships?: Record<string, JsonApiResourceBodyRelationship>;
+    };
+}
 export interface JsonApiSearchApiResponse extends JsonApiResponse {
     meta: JsonApiResponse["meta"] & {
         facets?: DrupalSearchApiFacet[];
@@ -204,7 +258,7 @@ export interface DataCache {
     del?(keys: any): Promise<unknown>;
 }
 export interface FetchOptions extends RequestInit {
-    withAuth?: boolean;
+    withAuth?: boolean | DrupalClientAuth;
 }
 export interface DrupalSearchApiFacet {
     id: string;
@@ -230,6 +284,7 @@ export interface DrupalTranslatedPath {
         id: string;
         uuid: string;
         langcode?: string;
+        path?: string;
     };
     label?: string;
     jsonapi?: {
@@ -270,6 +325,7 @@ export declare type AccessToken = {
     token_type: string;
     expires_in: number;
     access_token: string;
+    refresh_token?: string;
 };
 export declare type PathAlias = {
     alias: string;
@@ -354,8 +410,6 @@ export interface DrupalUser extends JsonApiResourceWithPath {
 export interface DrupalView<T = Record<string, any>[]> {
     id: string;
     results: T;
-    meta: {
-        count?: number;
-        [key: string]: any;
-    };
+    meta: JsonApiResponse["meta"];
+    links: JsonApiResponse["links"];
 }
diff --git a/node_modules/next-drupal/src/client.ts b/node_modules/next-drupal/src/client.ts
index c1d6aaf..c18d745 100644
--- a/node_modules/next-drupal/src/client.ts
+++ b/node_modules/next-drupal/src/client.ts
@@ -18,17 +18,25 @@ import type {
   DrupalTranslatedPath,
   DrupalMenuLinkContent,
   FetchOptions,
-  Experiment_DrupalClientOptions,
+  DrupalClientOptions,
   BaseUrl,
   JsonApiWithAuthOptions,
   PathPrefix,
   JsonApiResourceWithPath,
   PathAlias,
   PreviewOptions,
-  GetResourcePreviewUrlOptions,
   JsonApiWithCacheOptions,
+  JsonApiCreateResourceBody,
+  JsonApiUpdateResourceBody,
+  DrupalClientAuthUsernamePassword,
+  DrupalClientAuthAccessToken,
+  DrupalClientAuthClientIdSecret,
+  JsonApiCreateFileResourceBody,
+  DrupalView,
+  DrupalFile,
 } from "./types"
 import { logger as defaultLogger } from "./logger"
+import { JsonApiErrors } from "./jsonapi-errors"
 
 const DEFAULT_API_PREFIX = "/jsonapi"
 const DEFAULT_FRONT_PAGE = "/home"
@@ -43,50 +51,78 @@ const DEFAULT_HEADERS = {
   Accept: "application/vnd.api+json",
 }
 
-export class Experiment_DrupalClient {
+function isBasicAuth(
+  auth: DrupalClientOptions["auth"]
+): auth is DrupalClientAuthUsernamePassword {
+  return (
+    (auth as DrupalClientAuthUsernamePassword)?.username !== undefined ||
+    (auth as DrupalClientAuthUsernamePassword)?.password !== undefined
+  )
+}
+
+function isAccessTokenAuth(
+  auth: DrupalClientOptions["auth"]
+): auth is DrupalClientAuthAccessToken {
+  return (auth as DrupalClientAuthAccessToken)?.access_token !== undefined
+}
+
+function isClientIdSecretAuth(
+  auth: DrupalClient["auth"]
+): auth is DrupalClientAuthClientIdSecret {
+  return (
+    (auth as DrupalClientAuthClientIdSecret)?.clientId !== undefined ||
+    (auth as DrupalClientAuthClientIdSecret)?.clientSecret !== undefined
+  )
+}
+
+export class DrupalClient {
   baseUrl: BaseUrl
 
-  debug: Experiment_DrupalClientOptions["debug"]
+  debug: DrupalClientOptions["debug"]
+
+  frontPage: DrupalClientOptions["frontPage"]
 
-  frontPage: Experiment_DrupalClientOptions["frontPage"]
+  private serializer: DrupalClientOptions["serializer"]
 
-  private serializer: Experiment_DrupalClientOptions["serializer"]
+  private cache: DrupalClientOptions["cache"]
 
-  private cache: Experiment_DrupalClientOptions["cache"]
+  private throwJsonApiErrors?: DrupalClientOptions["throwJsonApiErrors"]
 
-  private logger: Experiment_DrupalClientOptions["logger"]
+  private logger: DrupalClientOptions["logger"]
 
-  private fetcher?: Experiment_DrupalClientOptions["fetcher"]
+  private fetcher?: DrupalClientOptions["fetcher"]
 
-  private _headers?: Experiment_DrupalClientOptions["headers"]
+  private _headers?: DrupalClientOptions["headers"]
 
-  private _auth?: Experiment_DrupalClientOptions["auth"]
+  private _auth?: DrupalClientOptions["auth"]
 
-  private _apiPrefix: Experiment_DrupalClientOptions["apiPrefix"]
+  private _apiPrefix: DrupalClientOptions["apiPrefix"]
 
-  private useDefaultResourceTypeEntry?: Experiment_DrupalClientOptions["useDefaultResourceTypeEntry"]
+  private useDefaultResourceTypeEntry?: DrupalClientOptions["useDefaultResourceTypeEntry"]
 
   private _token?: AccessToken
 
-  private accessToken?: Experiment_DrupalClientOptions["accessToken"]
+  private accessToken?: DrupalClientOptions["accessToken"]
+
+  private accessTokenScope?: DrupalClientOptions["accessTokenScope"]
 
   private tokenExpiresOn?: number
 
-  private withAuth?: Experiment_DrupalClientOptions["withAuth"]
+  private withAuth?: DrupalClientOptions["withAuth"]
 
-  private previewSecret?: Experiment_DrupalClientOptions["previewSecret"]
+  private previewSecret?: DrupalClientOptions["previewSecret"]
 
-  private forceIframeSameSiteCookie?: Experiment_DrupalClientOptions["forceIframeSameSiteCookie"]
+  private forceIframeSameSiteCookie?: DrupalClientOptions["forceIframeSameSiteCookie"]
 
   /**
-   * Instantiates a new Experiment_DrupalClient.
+   * Instantiates a new DrupalClient.
    *
-   * const client = new Experiment_DrupalClient(baseUrl)
+   * const client = new DrupalClient(baseUrl)
    *
    * @param {baseUrl} baseUrl The baseUrl of your Drupal site. Do not add the /jsonapi suffix.
    * @param {options} options Options for the client. See Experiment_DrupalClientOptions.
    */
-  constructor(baseUrl: BaseUrl, options: Experiment_DrupalClientOptions = {}) {
+  constructor(baseUrl: BaseUrl, options: DrupalClientOptions = {}) {
     if (!baseUrl || typeof baseUrl !== "string") {
       throw new Error("The 'baseUrl' param is required.")
     }
@@ -106,6 +142,7 @@ export class Experiment_DrupalClient {
       previewSecret,
       accessToken,
       forceIframeSameSiteCookie = false,
+      throwJsonApiErrors = true,
     } = options
 
     this.baseUrl = baseUrl
@@ -123,11 +160,17 @@ export class Experiment_DrupalClient {
     this.cache = cache
     this.accessToken = accessToken
     this.forceIframeSameSiteCookie = forceIframeSameSiteCookie
+    this.throwJsonApiErrors = throwJsonApiErrors
+
+    // Do not throw errors in production.
+    if (process.env.NODE_ENV === "production") {
+      this.throwJsonApiErrors = false
+    }
 
     this._debug("Debug mode is on.")
   }
 
-  set apiPrefix(apiPrefix: Experiment_DrupalClientOptions["apiPrefix"]) {
+  set apiPrefix(apiPrefix: DrupalClientOptions["apiPrefix"]) {
     this._apiPrefix = apiPrefix.charAt(0) === "/" ? apiPrefix : `/${apiPrefix}`
   }
 
@@ -135,9 +178,21 @@ export class Experiment_DrupalClient {
     return this._apiPrefix
   }
 
-  set auth(auth: Experiment_DrupalClientOptions["auth"]) {
+  set auth(auth: DrupalClientOptions["auth"]) {
     if (typeof auth === "object") {
-      if (!auth.clientId || !auth.clientSecret) {
+      if (isBasicAuth(auth)) {
+        if (!auth.username || !auth.password) {
+          throw new Error(
+            `'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth`
+          )
+        }
+      } else if (isAccessTokenAuth(auth)) {
+        if (!auth.access_token || !auth.token_type) {
+          throw new Error(
+            `'access_token' and 'token_type' are required for auth. See https://next-drupal.org/docs/client/auth`
+          )
+        }
+      } else if (!auth.clientId || !auth.clientSecret) {
         throw new Error(
           `'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth`
         )
@@ -152,7 +207,7 @@ export class Experiment_DrupalClient {
     this._auth = auth
   }
 
-  set headers(value: Experiment_DrupalClientOptions["headers"]) {
+  set headers(value: DrupalClientOptions["headers"]) {
     this._headers = value
   }
 
@@ -165,30 +220,87 @@ export class Experiment_DrupalClient {
   async fetch(input: RequestInfo, init?: FetchOptions): Promise<Response> {
     init = {
       ...init,
+      credentials: "include",
       headers: {
         ...this._headers,
         ...init?.headers,
       },
     }
 
+    // Using the auth set on the client.
+    // TODO: Abstract this to a re-usable.
     if (init?.withAuth) {
       this._debug(`Using authenticated request.`)
 
-      // If a custom auth is provided, use that.
-      if (typeof this._auth === "function") {
-        this._debug(`Using custom auth.`)
+      if (init.withAuth === true) {
+        if (typeof this._auth === "undefined") {
+          throw new Error(
+            "auth is not configured. See https://next-drupal.org/docs/client/auth"
+          )
+        }
+
+        // By default, if withAuth is set to true, we use the auth configured
+        // in the client constructor.
+        if (typeof this._auth === "function") {
+          this._debug(`Using custom auth callback.`)
+
+          init["headers"]["Authorization"] = this._auth()
+        } else if (typeof this._auth === "string") {
+          this._debug(`Using custom authorization header.`)
+
+          init["headers"]["Authorization"] = this._auth
+        } else if (typeof this._auth === "object") {
+          this._debug(`Using custom auth credentials.`)
+
+          if (isBasicAuth(this._auth)) {
+            const basic = Buffer.from(
+              `${this._auth.username}:${this._auth.password}`
+            ).toString("base64")
+
+            init["headers"]["Authorization"] = `Basic ${basic}`
+          } else if (isClientIdSecretAuth(this._auth)) {
+            // Use the built-in client_credentials grant.
+            this._debug(`Using default auth (client_credentials).`)
+
+            // Fetch an access token and add it to the request.
+            // Access token can be fetched from cache or using a custom auth method.
+            const token = await this.getAccessToken(this._auth)
+            if (token) {
+              init["headers"]["Authorization"] = `Bearer ${token.access_token}`
+            }
+          } else if (isAccessTokenAuth(this._auth)) {
+            init["headers"][
+              "Authorization"
+            ] = `${this._auth.token_type} ${this._auth.access_token}`
+          }
+        }
+      } else if (typeof init.withAuth === "string") {
+        this._debug(`Using custom authorization header.`)
+
+        init["headers"]["Authorization"] = init.withAuth
+      } else if (typeof init.withAuth === "function") {
+        this._debug(`Using custom authorization callback.`)
 
-        init["headers"]["Authorization"] = this._auth()
-      } else {
-        // Otherwise use the built-in client_credentials grant.
-        this._debug(`Using default auth (client_credentials).`)
+        init["headers"]["Authorization"] = init.withAuth()
+      } else if (isBasicAuth(init.withAuth)) {
+        this._debug(`Using basic authorization header`)
 
+        const basic = Buffer.from(
+          `${init.withAuth.username}:${init.withAuth.password}`
+        ).toString("base64")
+
+        init["headers"]["Authorization"] = `Basic ${basic}`
+      } else if (isClientIdSecretAuth(init.withAuth)) {
         // Fetch an access token and add it to the request.
         // Access token can be fetched from cache or using a custom auth method.
-        const token = await this.getAccessToken()
+        const token = await this.getAccessToken(init.withAuth)
         if (token) {
           init["headers"]["Authorization"] = `Bearer ${token.access_token}`
         }
+      } else if (isAccessTokenAuth(init.withAuth)) {
+        init["headers"][
+          "Authorization"
+        ] = `${init.withAuth.token_type} ${init.withAuth.access_token}`
       }
     }
 
@@ -200,24 +312,166 @@ export class Experiment_DrupalClient {
 
     this._debug(`Using default fetch (polyfilled by Next.js).`)
 
-    const response = await fetch(input, init)
+    return await fetch(input, init)
+  }
 
-    if (response?.ok) {
-      return response
+  async createResource<T extends JsonApiResource>(
+    type: string,
+    body: JsonApiCreateResourceBody,
+    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions
+  ): Promise<T> {
+    options = {
+      deserialize: true,
+      withAuth: true,
+      ...options,
     }
 
-    const message = await this.formatErrorResponse(response)
+    const apiPath = await this.getEntryForResourceType(
+      type,
+      options?.locale !== options?.defaultLocale ? options.locale : undefined
+    )
 
-    // Only throw errors in development
-    if (process.env.NODE_ENV !== "production") {
-      throw new Error(message)
-    } else {
-      if (this.debug) {
-        this.logger.error(message)
-      }
+    const url = this.buildUrl(apiPath, options?.params)
 
-      return null
+    this._debug(`Creating resource of type ${type}.`)
+    this._debug(url.toString())
+
+    // Add type to body.
+    body.data.type = type
+
+    const response = await this.fetch(url.toString(), {
+      method: "POST",
+      body: JSON.stringify(body),
+      withAuth: options.withAuth,
+    })
+
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
     }
+
+    const json = await response.json()
+
+    return options.deserialize ? this.deserialize(json) : json
+  }
+
+  async createFileResource<T = DrupalFile>(
+    type: string,
+    body: JsonApiCreateFileResourceBody,
+    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions
+  ): Promise<T> {
+    options = {
+      deserialize: true,
+      withAuth: true,
+      ...options,
+    }
+
+    const hostType = body?.data?.attributes?.type
+
+    const apiPath = await this.getEntryForResourceType(
+      hostType,
+      options?.locale !== options?.defaultLocale ? options.locale : undefined
+    )
+
+    const url = this.buildUrl(
+      `${apiPath}/${body.data.attributes.field}`,
+      options?.params
+    )
+
+    this._debug(`Creating file resource for media of type ${type}.`)
+    this._debug(url.toString())
+
+    const response = await this.fetch(url.toString(), {
+      method: "POST",
+      headers: {
+        "Content-Type": "application/octet-stream",
+        Accept: "application/vnd.api+json",
+        "Content-Disposition": `file; filename="${body.data.attributes.filename}"`,
+      },
+      body: body.data.attributes.file,
+      withAuth: options.withAuth,
+    })
+
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
+    }
+
+    const json = await response.json()
+
+    return options.deserialize ? this.deserialize(json) : json
+  }
+
+  async updateResource<T extends JsonApiResource>(
+    type: string,
+    uuid: string,
+    body: JsonApiUpdateResourceBody,
+    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions
+  ): Promise<T> {
+    options = {
+      deserialize: true,
+      withAuth: true,
+      ...options,
+    }
+
+    const apiPath = await this.getEntryForResourceType(
+      type,
+      options?.locale !== options?.defaultLocale ? options.locale : undefined
+    )
+
+    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)
+
+    this._debug(`Updating resource of type ${type} with id ${uuid}.`)
+    this._debug(url.toString())
+
+    // Update body.
+    body.data.type = type
+    body.data.id = uuid
+
+    const response = await this.fetch(url.toString(), {
+      method: "PATCH",
+      body: JSON.stringify(body),
+      withAuth: options.withAuth,
+    })
+
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
+    }
+
+    const json = await response.json()
+
+    return options.deserialize ? this.deserialize(json) : json
+  }
+
+  async deleteResource(
+    type: string,
+    uuid: string,
+    options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions
+  ): Promise<boolean> {
+    options = {
+      withAuth: true,
+      params: {},
+      ...options,
+    }
+
+    const apiPath = await this.getEntryForResourceType(
+      type,
+      options?.locale !== options?.defaultLocale ? options.locale : undefined
+    )
+
+    const url = this.buildUrl(`${apiPath}/${uuid}`, options?.params)
+
+    this._debug(`Deleting resource of type ${type} with id ${uuid}.`)
+    this._debug(url.toString())
+
+    const response = await this.fetch(url.toString(), {
+      method: "DELETE",
+      withAuth: options.withAuth,
+    })
+
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
+    }
+
+    return response.status === 204
   }
 
   async getResource<T extends JsonApiResource>(
@@ -261,6 +515,10 @@ export class Experiment_DrupalClient {
       withAuth: options.withAuth,
     })
 
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
+    }
+
     const json = await response.json()
 
     if (options.withCache) {
@@ -281,17 +539,8 @@ export class Experiment_DrupalClient {
   ): Promise<T> {
     const type = typeof input === "string" ? input : input.jsonapi.resourceName
 
-    if (typeof input !== "string") {
-      // Fix for subrequests and translation.
-      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
-      // @shadcn, note to self:
-      // Given an entity at /example with no translation.
-      // When we try to translate /es/example, decoupled router will properly
-      // translate to the untranslated version and set the locale to es.
-      // However a subrequests to /es/subrequests for decoupled router will fail.
-      if (context.locale && input.entity.langcode !== context.locale) {
-        context.locale = input.entity.langcode
-      }
+    const previewData = context.previewData as {
+      resourceVersion?: string
     }
 
     options = {
@@ -300,29 +549,48 @@ export class Experiment_DrupalClient {
       isVersionable: /^node--/.test(type),
       deserialize: true,
       pathPrefix: "/",
-      withAuth: this.withAuth,
+      withAuth: this.getAuthFromContextAndOptions(context, options),
       params: {},
       ...options,
     }
 
-    const path = this.getPathFromContext(context, {
-      pathPrefix: options?.pathPrefix,
-    })
-
-    const previewData = context.previewData as { resourceVersion?: string }
-
-    const resource = await this.getResourceByPath<T>(path, {
+    const _options = {
       deserialize: options.deserialize,
       isVersionable: options.isVersionable,
       locale: context.locale,
       defaultLocale: context.defaultLocale,
-      withAuth: context.preview || options?.withAuth,
+      withAuth: options?.withAuth,
       params: {
         resourceVersion: previewData?.resourceVersion,
         ...options?.params,
       },
+    }
+
+    if (typeof input !== "string") {
+      // Fix for subrequests and translation.
+      // TODO: Confirm if we still need this after https://www.drupal.org/i/3111456.
+      // @shadcn, note to self:
+      // Given an entity at /example with no translation.
+      // When we try to translate /es/example, decoupled router will properly
+      // translate to the untranslated version and set the locale to es.
+      // However a subrequests to /es/subrequests for decoupled router will fail.
+      if (context.locale && input.entity.langcode !== context.locale) {
+        context.locale = input.entity.langcode
+      }
+
+      // Given we already have the path info, we can skip subrequests and just make a simple
+      // request to the Drupal site to get the entity.
+      if (input.entity?.uuid) {
+        return await this.getResource<T>(type, input.entity.uuid, _options)
+      }
+    }
+
+    const path = this.getPathFromContext(context, {
+      pathPrefix: options?.pathPrefix,
     })
 
+    const resource = await this.getResourceByPath<T>(path, _options)
+
     // If no locale is passed, skip entity if not default_langcode.
     // This happens because decoupled_router will still translate the path
     // to a resource.
@@ -429,7 +697,7 @@ export class Experiment_DrupalClient {
       if (json?.router?.body) {
         const error = JSON.parse(json.router.body)
         if (error?.message) {
-          throw new Error(error.message)
+          this.throwError(new Error(error.message))
         }
       }
 
@@ -439,7 +707,7 @@ export class Experiment_DrupalClient {
     const data = JSON.parse(json["resolvedResource#uri{0}"]?.body)
 
     if (data.errors) {
-      throw new Error(this.formatJsonApiErrors(data.errors))
+      this.throwError(new Error(this.formatJsonApiErrors(data.errors)))
     }
 
     return options.deserialize ? this.deserialize(data) : data
@@ -467,10 +735,17 @@ export class Experiment_DrupalClient {
       ...options?.params,
     })
 
+    this._debug(`Fetching resource collection of type ${type}`)
+    this._debug(url.toString())
+
     const response = await this.fetch(url.toString(), {
       withAuth: options.withAuth,
     })
 
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
+    }
+
     const json = await response.json()
 
     return options.deserialize ? this.deserialize(json) : json
@@ -485,7 +760,6 @@ export class Experiment_DrupalClient {
       JsonApiWithAuthOptions
   ): Promise<T> {
     options = {
-      withAuth: this.withAuth,
       deserialize: true,
       ...options,
     }
@@ -494,7 +768,7 @@ export class Experiment_DrupalClient {
       ...options,
       locale: context.locale,
       defaultLocale: context.defaultLocale,
-      withAuth: context.preview || options.withAuth,
+      withAuth: this.getAuthFromContextAndOptions(context, options),
     })
   }
 
@@ -637,6 +911,9 @@ export class Experiment_DrupalClient {
     })
 
     if (!response?.ok) {
+      // Do not throw errors here.
+      // Otherwise next.js will catch error and throw a 500.
+      // We want a 404.
       return null
     }
 
@@ -653,18 +930,15 @@ export class Experiment_DrupalClient {
   ): Promise<DrupalTranslatedPath> {
     options = {
       pathPrefix: "/",
-      withAuth: this.withAuth,
       ...options,
     }
     const path = this.getPathFromContext(context, {
       pathPrefix: options.pathPrefix,
     })
 
-    const response = await this.translatePath(path, {
-      withAuth: context.preview || options.withAuth,
+    return await this.translatePath(path, {
+      withAuth: this.getAuthFromContextAndOptions(context, options),
     })
-
-    return response
   }
 
   getPathFromContext(
@@ -690,7 +964,9 @@ export class Experiment_DrupalClient {
       pathPrefix = `/${context.locale}${pathPrefix}`
     }
 
-    slug = Array.isArray(slug) ? slug.join("/") : slug
+    slug = Array.isArray(slug)
+      ? slug.map((s) => encodeURIComponent(s)).join("/")
+      : slug
 
     // Handle front page.
     if (!slug) {
@@ -717,8 +993,12 @@ export class Experiment_DrupalClient {
 
       return await response.json()
     } catch (error) {
-      throw new Error(
-        `Failed to fetch JSON:API index at ${url.toString()} - ${error.message}`
+      this.throwError(
+        new Error(
+          `Failed to fetch JSON:API index at ${url.toString()} - ${
+            error.message
+          }`
+        )
       )
     }
   }
@@ -764,78 +1044,60 @@ export class Experiment_DrupalClient {
     response?: NextApiResponse,
     options?: PreviewOptions
   ) {
-    const { slug, resourceVersion, secret, locale, defaultLocale } =
-      request.query
+    const { slug, resourceVersion, plugin } = request.query
 
-    if (secret !== this.previewSecret) {
-      return response.status(401).json({
-        message: options?.errorMessages.secret || "Invalid preview secret.",
+    try {
+      // Always clear preview data to handle different scopes.
+      response.clearPreviewData()
+
+      // Validate the preview url.
+      const validateUrl = this.buildUrl("/next/preview-url")
+      const result = await this.fetch(validateUrl.toString(), {
+        method: "POST",
+        headers: {
+          "Content-Type": "application/json",
+        },
+        body: JSON.stringify(request.query),
       })
-    }
 
-    if (!slug) {
-      return response
-        .status(401)
-        .end({ message: options?.errorMessages.slug || "Invalid slug." })
-    }
-
-    let _options: GetResourcePreviewUrlOptions = {
-      isVersionable: !!resourceVersion,
-    }
+      if (!result.ok) {
+        response.statusCode = result.status
 
-    if (locale && defaultLocale) {
-      // Fix for und locale.
-      const _locale = locale === "und" ? defaultLocale : locale
-
-      _options = {
-        ..._options,
-        locale: _locale as string,
-        defaultLocale: defaultLocale as string,
+        return response.json(await result.json())
       }
-    }
-
-    const entity = await this.getResourceByPath(slug as string, {
-      withAuth: true,
-      ..._options,
-    })
 
-    if (!entity || !entity?.path) {
-      throw new Error(
-        `The path attribute is missing for entity with slug ${slug}`
-      )
-    }
+      const validationPayload = await result.json()
 
-    const url = entity?.default_langcode
-      ? entity.path.alias
-      : `/${entity.path.langcode}${entity.path.alias}`
+      response.setPreviewData({
+        resourceVersion,
+        plugin,
+        ...validationPayload,
+      })
 
-    if (!url) {
-      response
-        .status(404)
-        .end({ message: options?.errorMessages.slug || "Invalid slug" })
-    }
+      // Fix issue with cookie.
+      // See https://github.com/vercel/next.js/discussions/32238.
+      // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
+      if (this.forceIframeSameSiteCookie) {
+        const previous = response.getHeader("Set-Cookie") as string[]
+        previous.forEach((cookie, index) => {
+          previous[index] = cookie.replace(
+            "SameSite=Lax",
+            "SameSite=None;Secure"
+          )
+        })
+        response.setHeader(`Set-Cookie`, previous)
+      }
 
-    response.setPreviewData({
-      resourceVersion,
-    })
+      // We can safely redirect to the slug since this has been validated on the server.
+      response.writeHead(307, { Location: slug })
 
-    // Fix issue with cookie.
-    // See https://github.com/vercel/next.js/discussions/32238.
-    // See https://github.com/vercel/next.js/blob/d895a50abbc8f91726daa2d7ebc22c58f58aabbb/packages/next/server/api-utils/node.ts#L504.
-    if (this.forceIframeSameSiteCookie) {
-      const previous = response.getHeader("Set-Cookie") as string[]
-      previous.forEach((cookie, index) => {
-        previous[index] = cookie.replace("SameSite=Lax", "SameSite=None;Secure")
-      })
-      response.setHeader(`Set-Cookie`, previous)
+      return response.end()
+    } catch (error) {
+      return response.status(422).end()
     }
-
-    response.writeHead(307, { Location: url })
-
-    return response.end()
   }
 
-  async getMenu<T extends DrupalMenuLinkContent>(
+  async getMenu<T = DrupalMenuLinkContent>(
     name: string,
     options?: JsonApiWithLocaleOptions &
       JsonApiWithAuthOptions &
@@ -878,6 +1140,10 @@ export class Experiment_DrupalClient {
       withAuth: options.withAuth,
     })
 
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
+    }
+
     const data = await response.json()
 
     const items = options.deserialize ? this.deserialize(data) : data
@@ -918,15 +1184,10 @@ export class Experiment_DrupalClient {
       : {}
   }
 
-  async getView<T>(
+  async getView<T = JsonApiResource>(
     name: string,
     options?: JsonApiWithLocaleOptions & JsonApiWithAuthOptions
-  ): Promise<{
-    id: string
-    results: T
-    meta: JsonApiResponse["meta"]
-    links: JsonApiResponse["links"]
-  }> {
+  ): Promise<DrupalView<T>> {
     options = {
       withAuth: this.withAuth,
       deserialize: true,
@@ -950,6 +1211,10 @@ export class Experiment_DrupalClient {
       withAuth: options.withAuth,
     })
 
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
+    }
+
     const data = await response.json()
 
     const results = options.deserialize ? this.deserialize(data) : data
@@ -986,6 +1251,10 @@ export class Experiment_DrupalClient {
       withAuth: options.withAuth,
     })
 
+    if (!response?.ok) {
+      await this.handleJsonApiErrors(response)
+    }
+
     const json = await response.json()
 
     return options.deserialize ? this.deserialize(json) : json
@@ -1023,45 +1292,66 @@ export class Experiment_DrupalClient {
     return url
   }
 
-  async getAccessToken(): Promise<AccessToken> {
-    if (this.accessToken) {
+  async getAccessToken(
+    opts?: DrupalClientAuthClientIdSecret
+  ): Promise<AccessToken> {
+    if (this.accessToken && this.accessTokenScope === opts?.scope) {
       return this.accessToken
     }
 
-    if (typeof this._auth !== "object") {
-      throw new Error(
-        "auth is not configured. See https://next-drupal.org/docs/client/auth"
-      )
+    if (!opts?.clientId || !opts?.clientSecret) {
+      if (typeof this._auth === "undefined") {
+        throw new Error(
+          "auth is not configured. See https://next-drupal.org/docs/client/auth"
+        )
+      }
     }
 
-    if (!this._auth.clientId || !this._auth.clientSecret) {
+    if (
+      !isClientIdSecretAuth(this._auth) ||
+      (opts && !isClientIdSecretAuth(opts))
+    ) {
       throw new Error(
         `'clientId' and 'clientSecret' required. See https://next-drupal.org/docs/client/auth`
       )
     }
 
-    if (this._token && Date.now() < this.tokenExpiresOn) {
+    const clientId = opts?.clientId || this._auth.clientId
+    const clientSecret = opts?.clientSecret || this._auth.clientSecret
+    const url = this.buildUrl(opts?.url || this._auth.url || DEFAULT_AUTH_URL)
+
+    if (
+      this.accessTokenScope === opts?.scope &&
+      this._token &&
+      Date.now() < this.tokenExpiresOn
+    ) {
       this._debug(`Using existing access token.`)
       return this._token
     }
 
     this._debug(`Fetching new access token.`)
 
-    const basic = Buffer.from(
-      `${this._auth.clientId}:${this._auth.clientSecret}`
-    ).toString("base64")
+    const basic = Buffer.from(`${clientId}:${clientSecret}`).toString("base64")
 
-    const response = await fetch(`${this.baseUrl}${this._auth.url}`, {
+    let body = `grant_type=client_credentials`
+
+    if (opts?.scope) {
+      body = `${body}&scope=${opts.scope}`
+
+      this._debug(`Using scope: ${opts.scope}`)
+    }
+
+    const response = await fetch(url.toString(), {
       method: "POST",
       headers: {
         Authorization: `Basic ${basic}`,
         "Content-Type": "application/x-www-form-urlencoded",
       },
-      body: `grant_type=client_credentials`,
+      body,
     })
 
     if (!response?.ok) {
-      throw new Error(response?.statusText)
+      await this.handleJsonApiErrors(response)
     }
 
     const result: AccessToken = await response.json()
@@ -1070,6 +1360,8 @@ export class Experiment_DrupalClient {
 
     this.token = result
 
+    this.accessTokenScope = opts?.scope
+
     return result
   }
 
@@ -1079,7 +1371,7 @@ export class Experiment_DrupalClient {
     return this.serializer.deserialize(body, options)
   }
 
-  private async formatErrorResponse(response: Response) {
+  private async getErrorsFromResponse(response: Response) {
     const type = response.headers.get("content-type")
 
     if (type === "application/json") {
@@ -1094,7 +1386,7 @@ export class Experiment_DrupalClient {
       const _error: JsonApiResponse = await response.json()
 
       if (_error?.errors?.length) {
-        return this.formatJsonApiErrors(_error.errors)
+        return _error.errors
       }
     }
 
@@ -1116,4 +1408,67 @@ export class Experiment_DrupalClient {
   private _debug(message) {
     !!this.debug && this.logger.debug(message)
   }
+
+  // Error handling.
+  // If throwErrors is enable, we show errors in the Next.js overlay.
+  // Otherwise we log the errors even if debugging is turned off.
+  // In production, errors are always logged never thrown.
+  private throwError(error: Error) {
+    if (!this.throwJsonApiErrors) {
+      return this.logger.error(error)
+    }
+
+    throw error
+  }
+
+  private async handleJsonApiErrors(response: Response) {
+    if (!response?.ok) {
+      const errors = await this.getErrorsFromResponse(response)
+      throw new JsonApiErrors(errors, response.status)
+    }
+  }
+
+  private getAuthFromContextAndOptions(
+    context: GetStaticPropsContext,
+    options: JsonApiWithAuthOptions
+  ) {
+    // If not in preview or withAuth is provided, use that.
+    if (!context.preview) {
+      // If we have provided an auth, use that.
+      if (typeof options?.withAuth !== "undefined") {
+        return options.withAuth
+      }
+
+      // Otherwise we fallback to the global auth.
+      return this.withAuth
+    }
+
+    // If no plugin is provided, return.
+    const plugin = context.previewData?.["plugin"]
+    if (!plugin) {
+      return null
+    }
+
+    let withAuth = this._auth
+
+    if (plugin === "simple_oauth") {
+      // If we are using a client id and secret auth, pass the scope.
+      if (isClientIdSecretAuth(withAuth) && context.previewData?.["scope"]) {
+        withAuth = {
+          ...withAuth,
+          scope: context.previewData?.["scope"],
+        }
+      }
+    }
+
+    if (plugin === "jwt") {
+      const accessToken = context.previewData?.["access_token"]
+
+      if (accessToken) {
+        return `Bearer ${accessToken}`
+      }
+    }
+
+    return withAuth
+  }
 }
diff --git a/node_modules/next-drupal/src/get-resource.ts b/node_modules/next-drupal/src/get-resource.ts
index 8c4a5bd..24517c4 100644
--- a/node_modules/next-drupal/src/get-resource.ts
+++ b/node_modules/next-drupal/src/get-resource.ts
@@ -62,9 +62,9 @@ export async function getResourceFromContext<T extends JsonApiResource>(
   // TODO: Figure out if we want this behavior.
   // For now this causes a bug where a non-i18n sites builds (ISR) pages for
   // localized pages.
-  if (!context.locale && !resource?.default_langcode) {
-    return null
-  }
+  // if (!context.locale && !resource?.default_langcode) {
+  //   return null
+  // }
 
   return resource
 }
diff --git a/node_modules/next-drupal/src/index.ts b/node_modules/next-drupal/src/index.ts
index 20a9b36..bc107a4 100644
--- a/node_modules/next-drupal/src/index.ts
+++ b/node_modules/next-drupal/src/index.ts
@@ -19,3 +19,4 @@ export {
 } from "./utils"
 
 export * from "./client"
+export * from "./jsonapi-errors"
diff --git a/node_modules/next-drupal/src/jsonapi-errors.ts b/node_modules/next-drupal/src/jsonapi-errors.ts
new file mode 100644
index 0000000..d049065
--- /dev/null
+++ b/node_modules/next-drupal/src/jsonapi-errors.ts
@@ -0,0 +1,30 @@
+import { JsonApiError } from "./types"
+
+export class JsonApiErrors extends Error {
+  errors: JsonApiError[] | string
+  statusCode: number
+
+  constructor(errors: JsonApiError[], statusCode: number) {
+    super()
+
+    this.errors = errors
+    this.statusCode = statusCode
+    this.message = JsonApiErrors.formatMessage(errors)
+  }
+
+  private static formatMessage(errors) {
+    if (typeof errors === "string") {
+      return errors
+    }
+
+    const [error] = errors
+
+    let message = `${error.status} ${error.title}`
+
+    if (error.detail) {
+      message += `\n${error.detail}`
+    }
+
+    return message
+  }
+}
diff --git a/node_modules/next-drupal/src/types.ts b/node_modules/next-drupal/src/types.ts
index d0f4219..ebd5cb6 100644
--- a/node_modules/next-drupal/src/types.ts
+++ b/node_modules/next-drupal/src/types.ts
@@ -1,4 +1,4 @@
-export type Experiment_DrupalClientOptions = {
+export type DrupalClientOptions = {
   /**
    * Set the JSON:API prefix.
    *
@@ -67,6 +67,17 @@ export type Experiment_DrupalClientOptions = {
    * [Documentation](https://next-drupal.org/docs/client/configuration#cache)
    */
   cache?: DataCache
+
+  /**
+   * If set to true, JSON:API errors are thrown in non-production environments. The errors are shown in the Next.js overlay.
+   *
+   * **Default value**: `true`
+   * **Required**: *No*
+   *
+   * [Documentation](https://next-drupal.org/docs/client/configuration#throwjsonapierrors)
+   */
+  throwJsonApiErrors?: boolean
+
   /**
    * Override the default logger. You can use this to send logs to a third-party service.
    *
@@ -82,9 +93,7 @@ export type Experiment_DrupalClientOptions = {
    *
    * [Documentation](https://next-drupal.org/docs/client/configuration#auth)
    */
-  auth?:
-    | { clientId: string; clientSecret: string; url?: string }
-    | (() => string)
+  auth?: DrupalClientAuth
 
   /**
    * Set whether the client should use authenticated requests by default.
@@ -126,6 +135,11 @@ export type Experiment_DrupalClientOptions = {
    */
   accessToken?: AccessToken
 
+  /**
+   * The scope used for the current access token.
+   */
+  accessTokenScope?: string
+
   /**
    * If set to true, the preview cookie will be set with SameSite=None,Secure.
    *
@@ -137,6 +151,27 @@ export type Experiment_DrupalClientOptions = {
   forceIframeSameSiteCookie?: boolean
 }
 
+export type DrupalClientAuth =
+  | DrupalClientAuthClientIdSecret
+  | DrupalClientAuthUsernamePassword
+  | DrupalClientAuthAccessToken
+  | (() => string)
+  | string
+
+export interface DrupalClientAuthUsernamePassword {
+  username: string
+  password: string
+}
+
+export interface DrupalClientAuthClientIdSecret {
+  clientId: string
+  clientSecret: string
+  url?: string
+  scope?: string
+}
+
+export type DrupalClientAuthAccessToken = AccessToken
+
 export interface Logger {
   log(message): void
 
@@ -180,7 +215,7 @@ export type JsonApiWithLocaleOptions = JsonApiOptions &
   )
 
 export type JsonApiWithAuthOptions = {
-  withAuth?: boolean
+  withAuth?: boolean | DrupalClientAuth
 }
 
 export type JsonApiWithCacheOptions = {
@@ -223,6 +258,42 @@ export interface JsonApiResponse extends Record<string, any> {
   included?: Record<string, any>[]
 }
 
+export interface JsonApiResourceBodyRelationship {
+  data: {
+    type: string
+    id: string
+  }
+}
+
+export interface JsonApiCreateResourceBody {
+  data: {
+    type?: string
+    attributes?: Record<string, any>
+    relationships?: Record<string, JsonApiResourceBodyRelationship>
+  }
+}
+
+export interface JsonApiCreateFileResourceBody {
+  data: {
+    type?: string
+    attributes: {
+      type: string
+      field: string
+      filename: string
+      file: Buffer
+    }
+  }
+}
+
+export interface JsonApiUpdateResourceBody {
+  data: {
+    type?: string
+    id?: string
+    attributes?: Record<string, any>
+    relationships?: Record<string, JsonApiResourceBodyRelationship>
+  }
+}
+
 export interface JsonApiSearchApiResponse extends JsonApiResponse {
   meta: JsonApiResponse["meta"] & {
     facets?: DrupalSearchApiFacet[]
@@ -247,7 +318,7 @@ export interface DataCache {
 }
 
 export interface FetchOptions extends RequestInit {
-  withAuth?: boolean
+  withAuth?: boolean | DrupalClientAuth
 }
 
 export interface DrupalSearchApiFacet {
@@ -275,6 +346,7 @@ export interface DrupalTranslatedPath {
     id: string
     uuid: string
     langcode?: string
+    path?: string
   }
   label?: string
   jsonapi?: {
@@ -317,6 +389,7 @@ export type AccessToken = {
   token_type: string
   expires_in: number
   access_token: string
+  refresh_token?: string
 }
 
 export type PathAlias = {
@@ -417,8 +490,6 @@ export interface DrupalUser extends JsonApiResourceWithPath {
 export interface DrupalView<T = Record<string, any>[]> {
   id: string
   results: T
-  meta: {
-    count?: number
-    [key: string]: any
-  }
+  meta: JsonApiResponse["meta"]
+  links: JsonApiResponse["links"]
 }
diff --git a/node_modules/next-drupal/src/utils.ts b/node_modules/next-drupal/src/utils.ts
index 8068038..eedfe42 100644
--- a/node_modules/next-drupal/src/utils.ts
+++ b/node_modules/next-drupal/src/utils.ts
@@ -110,7 +110,9 @@ export function getPathFromContext(
 ) {
   let { slug } = context.params
 
-  slug = Array.isArray(slug) ? slug.join("/") : slug
+  slug = Array.isArray(slug)
+    ? slug.map((s) => encodeURIComponent(s)).join("/")
+    : slug
 
   // Handle locale.
   if (context.locale && context.locale !== context.defaultLocale) {
diff --git a/node_modules/next-drupal/tests/client.test.ts b/node_modules/next-drupal/tests/client.test.ts
index ef1b271..50898cd 100644
--- a/node_modules/next-drupal/tests/client.test.ts
+++ b/node_modules/next-drupal/tests/client.test.ts
@@ -1,6 +1,6 @@
 import { expect } from "@jest/globals"
 import { GetStaticPropsContext } from "next"
-import { Experiment_DrupalClient as DrupalClient } from "../src/client"
+import { DrupalClient } from "../src/client"
 import type {
   Serializer,
   DrupalNode,
@@ -8,10 +8,7 @@ import type {
   JsonApiResourceWithPath,
   JsonApiSearchApiResponse,
 } from "../src/types"
-
-// Run all tests against this env until we configure CI to setup a Drupal instance.
-// TODO: Bootstrap and expose the /drupal env for testing.
-const BASE_URL = "https://dev-next-drupal-tests.pantheonsite.io"
+import { BASE_URL } from "./utils"
 
 afterEach(() => {
   jest.restoreAllMocks()
@@ -67,7 +64,33 @@ describe("DrupalClient", () => {
 })
 
 describe("auth", () => {
-  test("it accepts custom auth", async () => {
+  test("it accepts username and password for auth", async () => {
+    const customFetch = jest.fn()
+
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: "admin",
+        password: "password",
+      },
+      fetcher: customFetch,
+    })
+    const url = client.buildUrl("/jsonapi").toString()
+
+    await client.fetch(url, { withAuth: true })
+    expect(customFetch).toHaveBeenCalledWith(
+      url,
+      expect.objectContaining({
+        headers: {
+          "Content-Type": "application/vnd.api+json",
+          Accept: "application/vnd.api+json",
+          Authorization: "Basic YWRtaW46cGFzc3dvcmQ=",
+        },
+        withAuth: true,
+      })
+    )
+  })
+
+  test("it accepts callback for auth", async () => {
     const customAuth = jest
       .fn()
       .mockReturnValue("Basic YXJzaGFkQG5leHQtZHJ1cGFsLm9yZzphYmMxMjM=")
@@ -80,14 +103,49 @@ describe("auth", () => {
     const url = client.buildUrl("/jsonapi").toString()
 
     await client.fetch(url, { withAuth: true })
-    expect(customFetch).toHaveBeenCalledWith(url, {
-      headers: {
-        "Content-Type": "application/vnd.api+json",
-        Accept: "application/vnd.api+json",
-        Authorization: "Basic YXJzaGFkQG5leHQtZHJ1cGFsLm9yZzphYmMxMjM=",
+    expect(customFetch).toHaveBeenCalledWith(
+      url,
+      expect.objectContaining({
+        headers: {
+          "Content-Type": "application/vnd.api+json",
+          Accept: "application/vnd.api+json",
+          Authorization: "Basic YXJzaGFkQG5leHQtZHJ1cGFsLm9yZzphYmMxMjM=",
+        },
+        withAuth: true,
+      })
+    )
+  })
+
+  test("it accepts clientId and clientSecret for auth", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
       },
-      withAuth: true,
     })
+    const fetchSpy = jest
+      .spyOn(global, "fetch")
+      .mockImplementation(
+        jest.fn(() =>
+          Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
+        ) as jest.Mock
+      )
+
+    const basic = Buffer.from(
+      `7795065e-8ad0-45eb-a64d-73d9f3a5e943:d92Fm^ds`
+    ).toString("base64")
+
+    await client.fetch("http://example.com", { withAuth: true })
+    expect(fetchSpy).toHaveBeenNthCalledWith(
+      1,
+      `${BASE_URL}/oauth/token`,
+      expect.objectContaining({
+        headers: {
+          Authorization: `Basic ${basic}`,
+          "Content-Type": "application/x-www-form-urlencoded",
+        },
+      })
+    )
   })
 
   test("it accepts custom auth url", async () => {
@@ -138,6 +196,32 @@ describe("auth", () => {
     }).toThrow(
       "'clientId' and 'clientSecret' are required for auth. See https://next-drupal.org/docs/client/auth"
     )
+
+    expect(
+      () =>
+        new DrupalClient(BASE_URL, {
+          // eslint-disable-next-line @typescript-eslint/ban-ts-comment
+          // @ts-ignore
+          auth: {
+            username: "admin",
+          },
+        })
+    ).toThrow(
+      "'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth"
+    )
+
+    expect(
+      () =>
+        new DrupalClient(BASE_URL, {
+          // eslint-disable-next-line @typescript-eslint/ban-ts-comment
+          // @ts-ignore
+          auth: {
+            password: "password",
+          },
+        })
+    ).toThrow(
+      "'username' and 'password' are required for auth. See https://next-drupal.org/docs/client/auth"
+    )
   })
 })
 
@@ -230,9 +314,12 @@ describe("headers", () => {
     const url = "http://example.com"
 
     await client.fetch(url)
-    expect(customFetch).toHaveBeenCalledWith(url, {
-      headers: { foo: "bar" },
-    })
+    expect(customFetch).toHaveBeenCalledWith(
+      url,
+      expect.objectContaining({
+        headers: { foo: "bar" },
+      })
+    )
   })
 
   test("it allows setting custom headers with custom auth", async () => {
@@ -251,13 +338,16 @@ describe("headers", () => {
 
     await client.fetch(url, { withAuth: true })
 
-    expect(customFetch).toHaveBeenCalledWith(url, {
-      headers: {
-        foo: "bar",
-        Authorization: "Basic YXJzaGFkQG5leHQtZHJ1cGFsLm9yZzphYmMxMjM=",
-      },
-      withAuth: true,
-    })
+    expect(customFetch).toHaveBeenCalledWith(
+      url,
+      expect.objectContaining({
+        headers: {
+          foo: "bar",
+          Authorization: "Basic YXJzaGFkQG5leHQtZHJ1cGFsLm9yZzphYmMxMjM=",
+        },
+        withAuth: true,
+      })
+    )
   })
 })
 
@@ -300,17 +390,6 @@ describe("fetch", () => {
     expect(json).toMatchSnapshot()
   })
 
-  test("it properly handles errors", async () => {
-    const client = new DrupalClient(BASE_URL)
-    const url = client
-      .buildUrl("/jsonapi/node/article", { "filter[foo]": "bar" })
-      .toString()
-
-    await expect(client.fetch(url)).rejects.toThrow(
-      "400 Bad Request\nInvalid nested filtering. The field `foo`, given in the path `foo`, does not exist."
-    )
-  })
-
   test("it allows authenticated requests", async () => {
     const client = new DrupalClient(BASE_URL, {
       auth: {
@@ -322,7 +401,7 @@ describe("fetch", () => {
 
     const getAccessTokenSpy = jest
       .spyOn(client, "getAccessToken")
-      .mockImplementation(() => null)
+      .mockImplementation()
 
     await client.fetch(url.toString(), {
       withAuth: true,
@@ -352,25 +431,31 @@ describe("fetch", () => {
     const url = client.buildUrl("/jsonapi").toString()
 
     await client.fetch(url)
-    expect(customFetch).toHaveBeenCalledWith(url, {
-      headers: {
-        "Content-Type": "application/vnd.api+json",
-        Accept: "application/vnd.api+json",
-      },
-    })
+    expect(customFetch).toHaveBeenCalledWith(
+      url,
+      expect.objectContaining({
+        headers: {
+          "Content-Type": "application/vnd.api+json",
+          Accept: "application/vnd.api+json",
+        },
+      })
+    )
 
     await client.fetch(url, {
       headers: {
         foo: "bar",
       },
     })
-    expect(customFetch).toHaveBeenLastCalledWith(url, {
-      headers: {
-        Accept: "application/vnd.api+json",
-        "Content-Type": "application/vnd.api+json",
-        foo: "bar",
-      },
-    })
+    expect(customFetch).toHaveBeenLastCalledWith(
+      url,
+      expect.objectContaining({
+        headers: {
+          Accept: "application/vnd.api+json",
+          "Content-Type": "application/vnd.api+json",
+          foo: "bar",
+        },
+      })
+    )
   })
 })
 
@@ -646,6 +731,22 @@ describe("getPathFromContext", () => {
       )
     ).toEqual("/foo/bar/baz")
   })
+
+  test("it encodes path with punctuation", async () => {
+    const client = new DrupalClient(BASE_URL)
+
+    const path = client.getPathFromContext({
+      params: {
+        slug: ["path&with^punc&in$path"],
+      },
+    })
+
+    expect(path).toEqual("/path%26with%5Epunc%26in%24path")
+
+    const translatedPath = await client.translatePath(path)
+
+    expect(translatedPath).toMatchSnapshot()
+  })
 })
 
 describe("getIndex", () => {
@@ -873,6 +974,7 @@ describe("getResource", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -881,7 +983,7 @@ describe("getResource", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     await client.getResource(
       "node--recipe",
@@ -1265,6 +1367,7 @@ describe("getResourceFromContext", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -1273,7 +1376,7 @@ describe("getResourceFromContext", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     const context: GetStaticPropsContext = {
       params: {
@@ -1296,6 +1399,7 @@ describe("getResourceFromContext", () => {
   test("it makes authenticated requests when preview is true", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -1304,10 +1408,14 @@ describe("getResourceFromContext", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     const context: GetStaticPropsContext = {
       preview: true,
+      previewData: {
+        plugin: "simple_oauth",
+        scope: "editor",
+      },
       params: {
         slug: ["recipes", "deep-mediterranean-quiche"],
       },
@@ -1318,7 +1426,7 @@ describe("getResourceFromContext", () => {
     expect(fetchSpy).toHaveBeenCalledWith(
       expect.anything(),
       expect.objectContaining({
-        withAuth: true,
+        withAuth: `Bearer sample-token`,
       })
     )
   })
@@ -1359,12 +1467,12 @@ describe("translatePath", () => {
     expect(path).toEqual(path2)
   })
 
-  test("it throws an error for path not found", async () => {
+  test("it returns null for path not found", async () => {
     const client = new DrupalClient(BASE_URL)
 
-    await expect(client.translatePath("/path-not-found")).rejects.toThrow(
-      "Unable to resolve path /path-not-found."
-    )
+    const path = await client.translatePath("/path-not-found")
+
+    expect(path).toBeNull()
   })
 
   test("it makes un-authenticated requests by default", async () => {
@@ -1384,6 +1492,7 @@ describe("translatePath", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -1392,7 +1501,7 @@ describe("translatePath", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     await client.translatePath("recipes/deep-mediterranean-quiche", {
       withAuth: true,
@@ -1422,7 +1531,7 @@ describe("translatePathFromContext", () => {
     expect(path).toMatchSnapshot()
   })
 
-  test("it throws an error for path not found", async () => {
+  test("it returns null for path not found", async () => {
     const client = new DrupalClient(BASE_URL)
 
     const context: GetStaticPropsContext = {
@@ -1431,9 +1540,9 @@ describe("translatePathFromContext", () => {
       },
     }
 
-    await expect(client.translatePathFromContext(context)).rejects.toThrow(
-      "Unable to resolve path /path-not-found."
-    )
+    const path = await client.translatePathFromContext(context)
+
+    expect(path).toBeNull()
   })
 
   test("it translates a path with pathPrefix", async () => {
@@ -1480,6 +1589,7 @@ describe("translatePathFromContext", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -1488,7 +1598,7 @@ describe("translatePathFromContext", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     const context: GetStaticPropsContext = {
       params: {
@@ -1587,6 +1697,7 @@ describe("getResourceCollection", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -1595,7 +1706,7 @@ describe("getResourceCollection", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     await client.getResourceCollection("node--recipe", {
       withAuth: true,
@@ -1735,6 +1846,7 @@ describe("getResourceCollectionFromContext", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -1743,7 +1855,7 @@ describe("getResourceCollectionFromContext", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     const context: GetStaticPropsContext = {
       locale: "en",
@@ -1828,6 +1940,7 @@ describe("getStaticPathsFromContext", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -1836,7 +1949,7 @@ describe("getStaticPathsFromContext", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     await client.getStaticPathsFromContext(
       "node--article",
@@ -2029,6 +2142,7 @@ describe("getMenu", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -2037,7 +2151,7 @@ describe("getMenu", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     await client.getMenu("main", { withAuth: true })
 
@@ -2119,6 +2233,7 @@ describe("getView", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -2127,7 +2242,7 @@ describe("getView", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     await client.getView("featured_articles--page_1", { withAuth: true })
 
@@ -2228,6 +2343,7 @@ describe("getSearchIndex", () => {
   test("it makes authenticated requests with withAuth option", async () => {
     const client = new DrupalClient(BASE_URL, {
       useDefaultResourceTypeEntry: true,
+      auth: `Bearer sample-token`,
     })
     const fetchSpy = jest
       .spyOn(global, "fetch")
@@ -2236,7 +2352,7 @@ describe("getSearchIndex", () => {
           Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
         ) as jest.Mock
       )
-    jest.spyOn(client, "getAccessToken").mockImplementation(() => null)
+    jest.spyOn(client, "getAccessToken").mockImplementation()
 
     await client.getSearchIndex("recipes", {
       withAuth: true,
@@ -2250,3 +2366,277 @@ describe("getSearchIndex", () => {
     )
   })
 })
+
+describe("getAuthFromContextAndOptions", () => {
+  test("if NOT in preview and withAuth option is provided, it should use the withAuth option", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
+      },
+    })
+    const fetchSpy = jest
+      .spyOn(global, "fetch")
+      .mockImplementation(
+        jest.fn(() =>
+          Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
+        ) as jest.Mock
+      )
+    jest.spyOn(client, "getAccessToken").mockImplementation()
+
+    await client.getResourceFromContext(
+      "node--article",
+      {
+        preview: false,
+      },
+      {
+        withAuth: true,
+      }
+    )
+
+    expect(fetchSpy).toHaveBeenCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: true,
+      })
+    )
+
+    await client.getResourceFromContext(
+      "node--article",
+      {
+        preview: false,
+      },
+      {
+        withAuth: {
+          clientId: "foo",
+          clientSecret: "bar",
+          scope: "baz",
+        },
+      }
+    )
+
+    expect(fetchSpy).toHaveBeenLastCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: {
+          clientId: "foo",
+          clientSecret: "bar",
+          scope: "baz",
+        },
+      })
+    )
+  })
+
+  test("if NOT in preview and no withAuth option provided, it should fallback to the global auth", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
+      },
+    })
+    const fetchSpy = jest
+      .spyOn(global, "fetch")
+      .mockImplementation(
+        jest.fn(() =>
+          Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
+        ) as jest.Mock
+      )
+
+    await client.getResourceFromContext("node--article", {
+      preview: false,
+    })
+
+    expect(fetchSpy).toHaveBeenCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: false,
+      })
+    )
+
+    const client2 = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
+      },
+      withAuth: true,
+    })
+    jest.spyOn(client2, "getAccessToken").mockImplementation()
+
+    await client2.getResourceFromContext("node--article", {
+      preview: false,
+    })
+
+    expect(fetchSpy).toHaveBeenLastCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: true,
+      })
+    )
+  })
+
+  test("if in preview, it should NOT use the global auth", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
+      },
+      withAuth: true,
+    })
+    const fetchSpy = jest
+      .spyOn(global, "fetch")
+      .mockImplementation(
+        jest.fn(() =>
+          Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
+        ) as jest.Mock
+      )
+
+    await client.getResourceFromContext("node--article", {
+      preview: true,
+    })
+
+    expect(fetchSpy).toHaveBeenCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: null,
+      })
+    )
+  })
+
+  test("if in preview and using the simple_oauth plugin, it should use the scope from context", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
+      },
+    })
+    const fetchSpy = jest
+      .spyOn(global, "fetch")
+      .mockImplementation(
+        jest.fn(() =>
+          Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
+        ) as jest.Mock
+      )
+
+    await client.getResourceFromContext("node--article", {
+      preview: true,
+      previewData: {
+        plugin: "simple_oauth",
+        scope: "editor",
+      },
+    })
+
+    expect(fetchSpy).toHaveBeenCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: {
+          clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+          clientSecret: "d92Fm^ds",
+          scope: "editor",
+          url: "/oauth/token",
+        },
+      })
+    )
+  })
+
+  test("if in preview and using the simple_oauth plugin, tt should use the scope from context even with global withAuth", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
+        scope: "administrator",
+      },
+      withAuth: true,
+    })
+    const fetchSpy = jest
+      .spyOn(global, "fetch")
+      .mockImplementation(
+        jest.fn(() =>
+          Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
+        ) as jest.Mock
+      )
+
+    await client.getResourceFromContext("node--article", {
+      preview: true,
+      previewData: {
+        plugin: "simple_oauth",
+        scope: "editor",
+      },
+    })
+
+    expect(fetchSpy).toHaveBeenCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: {
+          clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+          clientSecret: "d92Fm^ds",
+          scope: "editor",
+          url: "/oauth/token",
+        },
+      })
+    )
+  })
+
+  test("if in preview and using the jwt plugin, it should use the access_token from context", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
+      },
+    })
+    const fetchSpy = jest
+      .spyOn(global, "fetch")
+      .mockImplementation(
+        jest.fn(() =>
+          Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
+        ) as jest.Mock
+      )
+
+    await client.getResourceFromContext("node--article", {
+      preview: true,
+      previewData: {
+        plugin: "jwt",
+        access_token: "example-token",
+      },
+    })
+
+    expect(fetchSpy).toHaveBeenCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: `Bearer example-token`,
+      })
+    )
+  })
+
+  test("if in preview and using the jwt plugin, t should use the access token from context even with global withAuth", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        clientId: "7795065e-8ad0-45eb-a64d-73d9f3a5e943",
+        clientSecret: "d92Fm^ds",
+        scope: "administrator",
+      },
+      withAuth: true,
+    })
+    const fetchSpy = jest
+      .spyOn(global, "fetch")
+      .mockImplementation(
+        jest.fn(() =>
+          Promise.resolve({ ok: true, json: () => Promise.resolve({}) })
+        ) as jest.Mock
+      )
+
+    await client.getResourceFromContext("node--article", {
+      preview: true,
+      previewData: {
+        plugin: "jwt",
+        access_token: "example-token",
+      },
+    })
+
+    expect(fetchSpy).toHaveBeenCalledWith(
+      expect.anything(),
+      expect.objectContaining({
+        withAuth: `Bearer example-token`,
+      })
+    )
+  })
+})
diff --git a/node_modules/next-drupal/tests/crud.test.ts b/node_modules/next-drupal/tests/crud.test.ts
new file mode 100644
index 0000000..ed9a00b
--- /dev/null
+++ b/node_modules/next-drupal/tests/crud.test.ts
@@ -0,0 +1,394 @@
+import { expect } from "@jest/globals"
+import { DrupalClient } from "../src/client"
+import type { DrupalNode } from "../src/types"
+import { BASE_URL, deleteTestNodes, toggleDrupalModule } from "./utils"
+
+// Enabling and disabling modules takes longer.
+// So we increase the time out to handle this.
+jest.setTimeout(10000)
+
+beforeAll(async () => {
+  await toggleDrupalModule("basic_auth")
+})
+
+afterEach(() => {
+  jest.restoreAllMocks()
+})
+
+afterAll(async () => {
+  await toggleDrupalModule("basic_auth", false)
+
+  await deleteTestNodes()
+})
+
+describe("createResource", () => {
+  test("it creates a resource", async () => {
+    const client = new DrupalClient(BASE_URL)
+
+    const article = await client.createResource<DrupalNode>(
+      "node--article",
+      {
+        data: {
+          attributes: {
+            title: "TEST New article",
+          },
+        },
+      },
+      {
+        withAuth: {
+          username: process.env.DRUPAL_USERNAME,
+          password: process.env.DRUPAL_PASSWORD,
+        },
+      }
+    )
+
+    expect(article.id).not.toBeNull()
+    expect(article.title).toEqual("TEST New article")
+  })
+
+  test("it creates a resource with a relationship", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: process.env.DRUPAL_USERNAME,
+        password: process.env.DRUPAL_PASSWORD,
+      },
+    })
+
+    // Find an image media.
+    const [mediaImage] = await client.getResourceCollection("media--image", {
+      params: {
+        "page[limit]": 1,
+        "filter[status]": 1,
+        "fields[media--image]": "name",
+      },
+    })
+
+    const article = await client.createResource(
+      "node--article",
+      {
+        data: {
+          attributes: {
+            title: "TEST: Article with media image",
+          },
+          relationships: {
+            field_media_image: {
+              data: {
+                type: "media--image",
+                id: mediaImage.id,
+              },
+            },
+          },
+        },
+      },
+      {
+        params: {
+          "fields[node--article]": "title,field_media_image",
+          include: "field_media_image",
+        },
+      }
+    )
+
+    expect(article.field_media_image.id).toEqual(mediaImage.id)
+    expect(article.field_media_image.name).toEqual(mediaImage.name)
+  })
+
+  test("it creates a localized resource", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: process.env.DRUPAL_USERNAME,
+        password: process.env.DRUPAL_PASSWORD,
+      },
+    })
+
+    const article = await client.createResource("node--article", {
+      data: {
+        attributes: {
+          title: "TEST Article in spanish",
+          langcode: "es",
+        },
+      },
+    })
+
+    expect(article.langcode).toEqual("es")
+  })
+
+  test("it throws an error for missing required attributes", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: process.env.DRUPAL_USERNAME,
+        password: process.env.DRUPAL_PASSWORD,
+      },
+    })
+
+    await expect(
+      client.createResource("node--article", {
+        data: {
+          attributes: {},
+        },
+      })
+    ).rejects.toThrow(
+      "422 Unprocessable Entity\ntitle: This value should not be null."
+    )
+  })
+
+  test("it throws an error for invalid attributes", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: process.env.DRUPAL_USERNAME,
+        password: process.env.DRUPAL_PASSWORD,
+      },
+    })
+
+    await expect(
+      client.createResource("node--article", {
+        data: {
+          attributes: {
+            title: "TEST: Article",
+            body: {
+              value: ["invalid-array-value"],
+            },
+          },
+        },
+      })
+    ).rejects.toThrow(
+      "422 Unprocessable Entity\nbody.0.value: This value should be of the correct primitive type."
+    )
+
+    await expect(
+      client.createResource("node--article", {
+        data: {
+          attributes: {
+            title: "TEST: Article",
+            body: {
+              value: "This is the body field",
+              format: "invalid_format",
+            },
+          },
+        },
+      })
+    ).rejects.toThrow(
+      "422 Unprocessable Entity\nbody.0.format: The value you selected is not a valid choice."
+    )
+  })
+})
+
+describe("updateResource", () => {
+  test("it updates a resource", async () => {
+    const client = new DrupalClient(BASE_URL)
+
+    const basic = Buffer.from(
+      `${process.env.DRUPAL_USERNAME}:${process.env.DRUPAL_PASSWORD}`
+    ).toString("base64")
+
+    const article = await client.createResource<DrupalNode>(
+      "node--article",
+      {
+        data: {
+          attributes: {
+            title: "TEST New article",
+          },
+        },
+      },
+      {
+        withAuth: `Basic ${basic}`,
+      }
+    )
+
+    const updatedArticle = await client.updateResource<DrupalNode>(
+      "node--article",
+      article.id,
+      {
+        data: {
+          attributes: {
+            title: "TEST New article updated",
+          },
+        },
+      },
+      {
+        withAuth: `Basic ${basic}`,
+      }
+    )
+
+    expect(article.id).toEqual(updatedArticle.id)
+    expect(updatedArticle.title).toEqual("TEST New article updated")
+  })
+
+  test("it updates a resource with a relationship", async () => {
+    const basic = Buffer.from(
+      `${process.env.DRUPAL_USERNAME}:${process.env.DRUPAL_PASSWORD}`
+    ).toString("base64")
+
+    const client = new DrupalClient(BASE_URL, {
+      auth: `Basic ${basic}`,
+    })
+
+    // Create an article.
+    const article = await client.createResource<DrupalNode>("node--article", {
+      data: {
+        attributes: {
+          title: "TEST New article",
+        },
+      },
+    })
+
+    // Find an image media.
+    const [mediaImage] = await client.getResourceCollection("media--image", {
+      params: {
+        "page[limit]": 1,
+        "filter[status]": 1,
+        "fields[media--image]": "name",
+      },
+    })
+
+    // Attach the media image to the article.
+    const updatedArticle = await client.updateResource(
+      "node--article",
+      article.id,
+      {
+        data: {
+          relationships: {
+            field_media_image: {
+              data: {
+                type: "media--image",
+                id: mediaImage.id,
+              },
+            },
+          },
+        },
+      },
+      {
+        withAuth: {
+          username: process.env.DRUPAL_USERNAME,
+          password: process.env.DRUPAL_PASSWORD,
+        },
+        params: {
+          "fields[node--article]": "title,field_media_image",
+          include: "field_media_image",
+        },
+      }
+    )
+
+    expect(updatedArticle.id).toEqual(article.id)
+    expect(updatedArticle.field_media_image.id).toEqual(mediaImage.id)
+    expect(updatedArticle.field_media_image.name).toEqual(mediaImage.name)
+  })
+
+  test("it throws an error for missing required attributes", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: process.env.DRUPAL_USERNAME,
+        password: process.env.DRUPAL_PASSWORD,
+      },
+    })
+
+    const article = await client.createResource<DrupalNode>("node--article", {
+      data: {
+        attributes: {
+          title: "TEST New article",
+        },
+      },
+    })
+
+    await expect(
+      client.updateResource("node--article", article.id, {
+        data: {
+          attributes: {
+            title: null,
+          },
+        },
+      })
+    ).rejects.toThrow(
+      "422 Unprocessable Entity\ntitle: This value should not be null."
+    )
+  })
+
+  test("it throws an error for invalid attributes", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: process.env.DRUPAL_USERNAME,
+        password: process.env.DRUPAL_PASSWORD,
+      },
+    })
+
+    const article = await client.createResource<DrupalNode>("node--article", {
+      data: {
+        attributes: {
+          title: "TEST New article",
+        },
+      },
+    })
+
+    await expect(
+      client.updateResource("node--article", article.id, {
+        data: {
+          attributes: {
+            body: {
+              value: ["invalid-array-value"],
+            },
+          },
+        },
+      })
+    ).rejects.toThrow(
+      "422 Unprocessable Entity\nbody.0.value: This value should be of the correct primitive type."
+    )
+
+    await expect(
+      client.updateResource("node--article", article.id, {
+        data: {
+          attributes: {
+            body: {
+              value: "This is the body field",
+              format: "invalid_format",
+            },
+          },
+        },
+      })
+    ).rejects.toThrow(
+      "422 Unprocessable Entity\nbody.0.format: The value you selected is not a valid choice."
+    )
+  })
+})
+
+describe("deleteResource", () => {
+  test("it deletes a resource", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: process.env.DRUPAL_USERNAME,
+        password: process.env.DRUPAL_PASSWORD,
+      },
+    })
+
+    const article = await client.createResource<DrupalNode>("node--article", {
+      data: {
+        attributes: {
+          title: "TEST New article",
+        },
+      },
+    })
+
+    const deleted = await client.deleteResource("node--article", article.id)
+
+    expect(deleted).toBe(true)
+
+    await expect(
+      client.getResource("node--article", article.id)
+    ).rejects.toThrow(
+      '404 Not Found\nThe "entity" parameter was not converted for the path "/jsonapi/node/article/{entity}" (route name: "jsonapi.node--article.individual")'
+    )
+  })
+
+  test("it throws an error for invalid resource", async () => {
+    const client = new DrupalClient(BASE_URL, {
+      auth: {
+        username: process.env.DRUPAL_USERNAME,
+        password: process.env.DRUPAL_PASSWORD,
+      },
+    })
+
+    await expect(
+      client.deleteResource("node--article", "invalid-id")
+    ).rejects.toThrow(
+      '404 Not Found\nThe "entity" parameter was not converted for the path "/jsonapi/node/article/{entity}" (route name: "jsonapi.node--article.individual.delete")'
+    )
+  })
+})
diff --git a/node_modules/next-drupal/tests/utils.ts b/node_modules/next-drupal/tests/utils.ts
new file mode 100644
index 0000000..762eb6b
--- /dev/null
+++ b/node_modules/next-drupal/tests/utils.ts
@@ -0,0 +1,44 @@
+import { DrupalClient } from "../src/client"
+
+// Run all tests against this env until we configure CI to setup a Drupal instance.
+// TODO: Bootstrap and expose the /drupal env for testing.
+export const BASE_URL = process.env["DRUPAL_BASE_URL"] as string
+
+const client = new DrupalClient(BASE_URL, {
+  auth: {
+    clientId: process.env["DRUPAL_CLIENT_ID"] as string,
+    clientSecret: process.env["DRUPAL_CLIENT_SECRET"] as string,
+  },
+})
+
+export async function executeRPC(body) {
+  const url = client.buildUrl("/jsonrpc")
+
+  const response = await client.fetch(url.toString(), {
+    method: "POST",
+    body: JSON.stringify(body),
+    withAuth: true,
+  })
+
+  return response.ok
+}
+
+export async function toggleDrupalModule(name: string, status = true) {
+  await executeRPC({
+    jsonrpc: "2.0",
+    method: "module.toggle",
+    params: {
+      name,
+      status,
+    },
+    id: "toggle-drupal-module",
+  })
+}
+
+export async function deleteTestNodes() {
+  await executeRPC({
+    jsonrpc: "2.0",
+    method: "test_content.clean",
+    id: "clean-test-content",
+  })
+}
